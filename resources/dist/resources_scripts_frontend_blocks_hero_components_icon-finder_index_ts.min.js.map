{"version":3,"file":"resources_scripts_frontend_blocks_hero_components_icon-finder_index_ts.min.js","mappings":"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","sources":["webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/config/api.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/config/code.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/config/wrapper.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/icon-size.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/shorten-icon-name.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/index.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/phrases/en.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/add-provider.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/get-provider.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper/icons.ts","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Container.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Wrapper.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Content.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Footer.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsFilter.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsList.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/GlobalSearch.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Pagination.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Parent.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Providers.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Category.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Height.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Item.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Container.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Header.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconGrid.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconList.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/parent/Link.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/Full.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Buttons.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Icons.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Properties.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Code.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Container.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Sample.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/name/Simple.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Color.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Flip.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Inline.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Rotate.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Size.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/SizeInput.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Full.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Inline.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collection.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collections.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Custom.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Error.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Search.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/AddForm.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/IconButton.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Tabs.svelte","webpack://gameplay-blocks/./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte"],"sourcesContent":["import { convertProviderData, addProvider } from '@iconify/search-core';\nimport type { APIProviderRawData } from '@iconify/types/provider';\nimport type { WrappedRegistry } from '../wrapper/registry';\n\n/**\n * List of custom API providers\n *\n * Each array item must have:\n *  provider: unique provider key, similar to icon set prefix\n *  title: title to show in API providers tabs (used if showProviders is enabled in ./components.ts)\n *  api: host name(s) as string or array of strings\n */\nconst customProviders: APIProviderRawData[] = [\n\t/*\n\t{\n\t\tprovider: 'local',\n\t\ttitle: 'Local Test',\n\t\tapi: 'http://localhost:3100',\n    },\n    */\n];\n\n/**\n * Add custom API providers\n */\nexport function addCustomAPIProviders(registry: WrappedRegistry) {\n\tif (customProviders.length) {\n\t\tcustomProviders.forEach((item) => {\n\t\t\tconst converted = convertProviderData('', item);\n\t\t\tif (converted) {\n\t\t\t\taddProvider(item.provider, converted);\n\t\t\t}\n\t\t});\n\n\t\t// Set default API provider in router\n\t\t// registry.router.defaultProvider = customProviders[0].provider;\n\t}\n}\n","import type { CodeConfig } from '../footer/types';\n\n/**\n * Configuration for API providers for code samples\n */\nexport const codeConfig: CodeConfig = {\n\tproviders: Object.create(null),\n\n\t// Default configuration\n\tdefaultProvider: {\n\t\tapi: true,\n\t\traw: true,\n\t},\n};\n\n// Add default provider\ncodeConfig.providers[''] = {\n\t// Show packages that use API\n\tapi: true,\n\t// NPM packages for React, Vue, Svelte components\n\tnpmES: {\n\t\tpackage: '@iconify-icons/{prefix}',\n\t\tfile: '/{name}',\n\t},\n\tnpmCJS: {\n\t\tpackage: '@iconify/icons-{prefix}',\n\t\tfile: '/{name}',\n\t},\n\t// Allow generating SVG\n\traw: true,\n\t// Remote SVGs\n\tsvg: 'https://api.iconify.design/{prefix}/{name}.svg',\n};\n","import type { FooterButton, FooterButtonCallbackParams } from '../footer/types';\n\n/**\n * Can show and add API providers?\n */\nexport const showProviders = false;\nexport const canAddProviders = false;\n\n/**\n * Automatically focus search\n *\n * Do not change value to true, comment out code below it. It checks for mobile devices\n */\nexport const canFocusSearch = false;\n\n/*\nexport const canFocusSearch = (() => {\n\ttry {\n\t\treturn (\n\t\t\twindow.matchMedia('(min-width: 600px) and (min-height: 600px)')\n\t\t\t\t.matches &&\n\t\t\t// Do not focus if touch device is detected\n\t\t\t!('ontouchstart' in window)\n\t\t);\n\t} catch (err) {\n\t\treturn false;\n\t}\n})();\n*/\n\n/**\n * Show collection information block (author, license, etc...) when browsing collection\n *\n * Also see showInfoInFooter below (need to set both to false to disable icon set info block)\n */\nexport const showCollectionInfoBlock = true;\n\n/**\n * Can shorten icon name in footer?\n */\nexport const canShortenIconName = true;\n\n/**\n * Show title for footer blocks?\n */\nexport const showFooterBlockTitles = false;\n\n/**\n * Toggle footer blocks?\n */\nexport const canToggleFooterBlocks = false;\n\n/**\n * Show info block in footer?\n *\n * Block will show information about icon set for selected icon.\n *\n * When multiple icons are selected, block will be shown only when all icons have the same prefix.\n *\n * When browsing icon set, block will be shown only if block above icons\n * list is not shown or when prefix is different or showCollectionInfoBlock is disabled.\n */\nexport const showInfoInFooter = true;\n\n/**\n * List of properties to customise\n */\n// Global toggle: disables all properties\nexport const showCustomisatons = true;\n\n// Color\nexport const customiseColor = true;\n\n// Size\nexport const customiseWidth = true;\nexport const customiseHeight = true;\n\n// Rotation\nexport const customiseRotate = true;\n\n// Flip\nexport const customiseFlip = true;\n\n// Inline / block\nexport const customiseInline = false;\n\n/**\n * Default values for color, width and height\n */\nexport const defaultColor = '#000';\nexport const defaultWidth = '';\nexport const defaultHeight = '';\n\n/**\n * Limits for sample icon in footer\n */\nexport const iconSampleSize = {\n\twidth: 200,\n\theight: 300,\n};\n\n/**\n * Footer buttons\n */\nexport const showButtons = true;\n\nexport const footerButtons: Record<string, FooterButton> = {\n\tsubmit: {\n\t\ttype: 'primary',\n\t\tdisplay: 'icons', // Show only when icon(s) have been selected\n\t},\n\tcancel: {\n\t\ttype: 'secondary',\n\t},\n};\n\n/**\n * Sample code\n */\n// To disable code block, also change link for CodeBlock to Empty.svelte in ../components/footer/*.svelte (it will remove component from bundle)\nexport const showCode = false;\n","/**\n * Language pack\n *\n * Change import to swap language pack\n */\nexport { phrases } from '../phrases/en';\n","import { addCollection } from '@iconify/svelte';\n\n/**\n * Maximum color index (number of colors in rotation - 1)\n *\n * See _rotation.scss in style directory\n */\nexport const maxIndex = 11;\n\n/**\n * Collections list options\n */\n// Show author link. Disable if whole block should be clickable\nexport const showCollectionAuthorLink = true;\n\n// True if entire collection block should be clickable\nexport const collectionClickable = false;\n\n/**\n * Import custom icons\n */\nconst customIconsPrefix = 'icon-finder-theme';\nexport function importThemeIcons() {\n\taddCollection({\n\t\tprefix: customIconsPrefix,\n\t\ticons: {\n\t\t\t'error-loading': {\n\t\t\t\tbody:\n\t\t\t\t\t'<g clip-path=\"url(#clip0)\"><path d=\"M9.9.2l-.2 1C12.7 2 15 4.7 15 8c0 3.9-3.1 7-7 7s-7-3.1-7-7c0-3.3 2.3-6 5.3-6.8l-.2-1C2.6 1.1 0 4.3 0 8c0 4.4 3.6 8 8 8s8-3.6 8-8c0-3.7-2.6-6.9-6.1-7.8z\" fill=\"currentColor\"/></g><defs><clipPath id=\"clip0\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\"/></clipPath></defs>',\n\t\t\t},\n\t\t\t'empty': {\n\t\t\t\tbody: '',\n\t\t\t},\n\t\t},\n\t\twidth: 16,\n\t\theight: 16,\n\t});\n}\n\n/**\n * Icons used by UI\n */\nexport const icons: Record<string, string | null> = {\n\t'reset': 'line-md:close',\n\t'search': 'line-md:search',\n\t'down': 'line-md:chevron-down',\n\t'left': 'line-md:chevron-left',\n\t'right': 'line-md:chevron-right',\n\t'parent': 'line-md:chevron-small-left',\n\t'expand': 'line-md:chevron-small-right',\n\t'grid': 'line-md:grid-3-solid',\n\t'list': 'line-md:list-3-solid',\n\t'check-list': 'line-md:check-list-3-solid',\n\t'check-list-checked': 'line-md:check-list-3-twotone',\n\t'error-loading': customIconsPrefix + ':error-loading',\n\t'icon-width': 'line-md:double-arrow-horizontal',\n\t'icon-height': 'line-md:double-arrow-vertical',\n\t'color': 'line-md:paint-drop-half-twotone',\n\t'color-filled': 'line-md:paint-drop-filled',\n\t'rotate0': 'line-md:close',\n\t'rotate1': 'line-md:rotate-90',\n\t'rotate2': 'line-md:rotate-180',\n\t'rotate3': 'line-md:rotate-270',\n\t'h-flip': 'line-md:double-arrow-horizontal',\n\t'v-flip': 'line-md:double-arrow-vertical',\n\t'plus': 'line-md:plus',\n\t'link': 'line-md:external-link',\n\t'clipboard': 'line-md:clipboard-arrow-twotone',\n\t'confirm': 'line-md:confirm',\n\t'docs': 'line-md:document-list-twotone',\n\t'mode-block': 'line-md:valign-baseline',\n\t'mode-inline': 'line-md:valign-middle',\n\t'selecting-selected': 'line-md:confirm',\n\t'selecting-unselected': customIconsPrefix + ':empty',\n};\n\n/**\n * Class to add to icons\n */\nexport const iconsClass: string = 'iconify--line-md';\n","/**\n * Components config\n */\nexport interface ComponentsConfig {\n\t// Icons list mode.\n\tlist?: boolean;\n\n\t// True if icons list mode can be changed.\n\ttoggleList?: boolean;\n\n\t// Active code tab\n\tcodeTab?: string;\n\n\t// Can select multiple icons\n\tmultiSelect: boolean;\n\n\t// Default status for footer blocks that can be toggled\n\t// Works only if canToggleFooterBlocks is enabled in ./components.ts\n\t// Remove config entry to disable toggle for one specific block\n\tpropsVisible: boolean;\n\tinfoVisible: boolean;\n\tcodeVisible: boolean;\n}\n\n/**\n * Default values\n */\nexport const defaultComponentsConfig: Required<ComponentsConfig> = {\n\t// Icons list mode.\n\tlist: false,\n\n\t// True if icons list mode can be changed.\n\ttoggleList: true,\n\n\t// Active code tab\n\tcodeTab: '',\n\n\t// Can select multiple icons\n\tmultiSelect: false,\n\n\t// Toggle footer blocks\n\tpropsVisible: true,\n\tinfoVisible: false,\n\tcodeVisible: false,\n};\n","import { calculateSize } from '@iconify/svelte';\n\nexport interface IconDimensions {\n\twidth: number | string;\n\theight: number | string;\n}\n\n/**\n * Calculate both dimensions\n */\nexport function getDimensions(\n\twidth: number | string,\n\theight: number | string,\n\tratio: number,\n\trotated: boolean\n): IconDimensions {\n\tif (width && height) {\n\t\treturn {\n\t\t\twidth: rotated ? height : width,\n\t\t\theight: rotated ? width : height,\n\t\t};\n\t}\n\n\tif (!height) {\n\t\theight = calculateSize(width, rotated ? ratio : 1 / ratio) as\n\t\t\t| number\n\t\t\t| string;\n\t} else {\n\t\twidth = calculateSize(height, rotated ? 1 / ratio : ratio) as\n\t\t\t| number\n\t\t\t| string;\n\t}\n\treturn {\n\t\twidth,\n\t\theight,\n\t};\n}\n","import type { Icon, FullRoute } from '@iconify/search-core';\n\nexport function shortenIconName(\n\troute: FullRoute,\n\ticon: Icon,\n\tfullName: string\n): string {\n\tif (!route) {\n\t\treturn fullName;\n\t}\n\n\tswitch (route.type) {\n\t\tcase 'collections':\n\t\tcase 'search':\n\t\tcase 'collection':\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn fullName;\n\t}\n\n\tconst params = route.params;\n\n\t// Get and check provider\n\tconst provider =\n\t\tparams && typeof params.provider === 'string' ? params.provider : '';\n\tif (icon.provider !== provider) {\n\t\treturn fullName;\n\t}\n\n\t// Check if icon has same prefix (only for collection)\n\tif (route.type === 'collection' && icon.prefix === route.params.prefix) {\n\t\treturn icon.name;\n\t}\n\n\t// Remove only provider\n\treturn icon.prefix + ':' + icon.name;\n}\n","import { Wrapper } from './wrapper';\n\nconst container = document.getElementById('container');\nif (container) {\n\tconst wrapper = new Wrapper({\n\t\tcontainer,\n\t\tcallback: (event) => {\n\t\t\tconsole.log('Event:', event);\n\t\t},\n\t});\n}\n","import type { UITranslation } from './types';\n\n/**\n * Phrases.\n *\n * Do not import phrases from this file, use ../config/phrases.ts instead\n */\nexport const phrases: UITranslation = {\n\tlang: 'English',\n\tsearch: {\n\t\tplaceholder: {\n\t\t\tcollection: 'Search {name}',\n\t\t\tcollections: 'Filter collections',\n\t\t},\n\t\tdefaultPlaceholder: 'Search all icons',\n\t\tbutton: 'Search Icons',\n\t},\n\terrors: {\n\t\tnoCollections: 'No matching icon sets found.',\n\t\tnoIconsFound: 'No icons found.',\n\t\tdefaultError: 'Error loading Iconify Icon Finder.',\n\t\tcustom: {\n\t\t\tloading: 'Loading...',\n\t\t\ttimeout: 'Could not connect to Iconify API.',\n\t\t\tinvalid_data: 'Invalid response from Iconify API.',\n\t\t\tempty: 'Nothing to show.',\n\t\t\tnot_found: 'Collection {prefix} does not exist.',\n\t\t\tbad_route: 'Invalid route.',\n\t\t\thome: 'Click here to return to main page.',\n\t\t},\n\t},\n\ticons: {\n\t\theader: {\n\t\t\tfull: 'Displaying {count} icons:',\n\t\t\tmore:\n\t\t\t\t'Displaying {count} icons (click second page to load more results):',\n\t\t\tmodes: {\n\t\t\t\tlist: 'Display icons as list',\n\t\t\t\tgrid: 'Display icons as grid',\n\t\t\t},\n\t\t\tselect: 'Select multiple icons',\n\t\t},\n\t\theaderWithCount: {\n\t\t\t0: 'No icons to display.',\n\t\t\t1: 'Displaying 1 icon:',\n\t\t},\n\t\ttooltip: {\n\t\t\tsize: '\\nSize: {size}',\n\t\t\tcolorless: '',\n\t\t\tcolorful: '\\nHas palette',\n\t\t\tchar: '\\nIcon font character: {char}',\n\t\t\tlength: '', //'\\nContent: {length} bytes',\n\t\t},\n\t\tmore: 'Find more icons', // '3 ...',\n\t\tmoreAsNumber: false, // True if text above refers to third page, false if text above shows \"Find more icons\" or similar text\n\t},\n\tpagination: {\n\t\tprev: 'Previous page',\n\t\tnext: 'Next page',\n\t},\n\tfilters: {\n\t\t'uncategorised': 'Uncategorised',\n\t\t'collections': 'Filter search results by icon set:',\n\t\t'collections-collections': '',\n\t\t'tags': 'Filter by category:',\n\t\t'themePrefixes': 'Icon type:',\n\t\t'themeSuffixes': 'Icon type:',\n\t},\n\tcollectionInfo: {\n\t\ttotal: 'Number of icons:',\n\t\theight: 'Height of icons:',\n\t\tauthor: 'Author:',\n\t\tlicense: 'License:',\n\t\tpalette: 'Palette:',\n\t\tcolorless: 'Colorless',\n\t\tcolorful: 'Has colors',\n\t\tlink: 'Show all icons',\n\t},\n\tparent: {\n\t\tdefault: 'Return to previous page',\n\t\tcollections: 'Return to collections list',\n\t\tcollection: 'Return to {name}',\n\t\tsearch: 'Return to search results',\n\t},\n\tcollection: {\n\t\tby: 'by ',\n\t},\n\tproviders: {\n\t\tsection: 'Icons source:',\n\t\tadd: 'Add Provider',\n\t\taddForm: {\n\t\t\ttitle: \"Enter API provider's host name:\",\n\t\t\tplaceholder: 'https://api.iconify.design',\n\t\t\tsubmit: 'Add API Provider',\n\t\t\tinvalid:\n\t\t\t\t'Example of a valid API host name: https://api.iconify.design',\n\t\t},\n\t\tstatus: {\n\t\t\tloading: 'Checking {host}...',\n\t\t\terror: '{host} is not a valid Iconify API.',\n\t\t\texists:\n\t\t\t\t'API from {host} is already available or API has wrong configuration.',\n\t\t\tunsupported: 'API from {host} does not support icon search.',\n\t\t},\n\t},\n\tfooter: {\n\t\ticonName: 'Selected icon:',\n\t\ticonNamePlaceholder: 'Enter icon by name...',\n\t\tinlineSample: {\n\t\t\tbefore: 'Text with icon sample',\n\t\t\tafter: 'to show icon alignment in text.',\n\t\t},\n\t\tremove: 'Remove {name}',\n\t\tselect: 'Select {name}',\n\t\tabout: 'Aboout {title}',\n\t},\n\tfooterButtons: {\n\t\tsubmit: 'Submit',\n\t\tchange: 'Change',\n\t\tselect: 'Select',\n\t\tcancel: 'Cancel',\n\t\tclose: 'Close',\n\t},\n\tfooterBlocks: {\n\t\ttitle: 'Customize icon',\n\t\ttitle2: 'Customize icons',\n\t\tcolor: 'Color',\n\t\tflip: 'Flip',\n\t\thFlip: 'Horizontal',\n\t\tvFlip: 'Vertical',\n\t\trotate: 'Rotate',\n\t\twidth: 'Width',\n\t\theight: 'Height',\n\t\tsize: 'Size', // Width + height in one block\n\t\talignment: 'Alignment',\n\t\tmode: 'Mode',\n\t\ticons: 'Selected icons',\n\t},\n\tfooterOptionButtons: {\n\t\thFlip: 'Horizontal',\n\t\tvFlip: 'Vertical',\n\t\trotate: '{num}' + String.fromCharCode(0x00b0),\n\t\trotateTitle: 'Rotate {num}' + String.fromCharCode(0x00b0),\n\t\tinline: 'Inline',\n\t\tblock: 'Block',\n\t\tinlineHint:\n\t\t\t'Icon is vertically aligned slightly below baseline, like icon font, fitting perfectly in text.',\n\t\tblockHint: 'Icon is rendered as is, without custom vertical alignment.',\n\t},\n\tcodeSamples: {\n\t\tcopy: 'Copy to clipboard',\n\t\tcopied: 'Copied to clipboard.',\n\t\theadingHidden: 'Show code for \"{name}\" for developers',\n\t\theading: 'Code for \"{name}\" for developers',\n\t\tchildTabTitle: '{key} versions:',\n\t\tchildTabTitles: {\n\t\t\treact: 'React component versions:',\n\t\t\tsvg: 'SVG options:',\n\t\t},\n\t\tdocsDefault: 'Click here for more information about {title} component.',\n\t\tdocs: {\n\t\t\ticonify:\n\t\t\t\t'Click here for more information about Iconify SVG framework.',\n\t\t\tcss: 'Click here for more code examples.',\n\t\t},\n\t\tintro: {\n\t\t\t'svg-box':\n\t\t\t\t'This SVG contains extra empty rectangle that matches viewBox. It is needed to keep icon dimensions when importing icon in software that ignores viewBox attribute.',\n\t\t\t'svg-uri':\n\t\t\t\t'You can use this as background image or as content for pseudo element in stylesheet.',\n\t\t\t'css':\n\t\t\t\t\"Add code below to your stylesheet to use icon as background image or as pseudo element's content:\",\n\t\t},\n\t\tcomponent: {\n\t\t\t'install-offline': 'Install component and icon set:',\n\t\t\t'install-simple': 'Install component:',\n\t\t\t'install-addon': 'Install addon:',\n\t\t\t'import-offline': 'Import component and icon data:',\n\t\t\t'import-simple': 'Import component:',\n\t\t\t'vue-offline':\n\t\t\t\t'Add icon data and icon component to your component:',\n\t\t\t'vue-simple': 'Add icon component to your component:',\n\t\t\t'use-in-code': 'Use it in your code:',\n\t\t\t'use-in-html': 'Use it in HTML code:',\n\t\t\t'use-in-template': 'Use component in template:',\n\t\t\t'use-generic': '',\n\t\t},\n\t\ticonify: {\n\t\t\tintro1:\n\t\t\t\t'Iconify SVG framework makes using icons as easy as icon fonts. To use \"{name}\" in HTML, add this code to the document:',\n\t\t\tintro2:\n\t\t\t\t'Iconify SVG framework will load icon data from Iconify API and replace that placeholder with SVG.',\n\t\t\thead: 'Make sure you import Iconify SVG framework:',\n\t\t},\n\t},\n};\n","import type { APIProviderRawData } from '@iconify/types/provider';\nimport type { Registry, APIProviderSource } from '@iconify/search-core';\nimport {\n\tconvertProviderData,\n\taddProvider,\n\tlistProviders,\n} from '@iconify/search-core';\n\n// Errors\nexport type APIProviderError = 'loading' | 'error' | 'unsupported' | 'exists';\n\n/**\n * Validate API provider host\n */\nexport function validateProvider(url: string): string | null {\n\tlet parts = url.toLowerCase().split('/');\n\n\t// Check protocol\n\tconst protocol = parts.shift();\n\tswitch (protocol) {\n\t\tcase 'http:':\n\t\tcase 'https:':\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\n\t// Double '/'\n\tif (parts.shift() !== '') {\n\t\treturn null;\n\t}\n\n\t// Host\n\tconst host = parts.shift();\n\tif (typeof host !== 'string') {\n\t\treturn null;\n\t}\n\tconst hostParts = host.split(':');\n\tif (hostParts.length > 2) {\n\t\treturn null;\n\t}\n\n\t// Validate domain\n\tconst domain = hostParts.shift();\n\tif (!domain || !domain.match(/^[a-z0-9.-]+$/)) {\n\t\treturn null;\n\t}\n\n\t// Validate port\n\tconst port = hostParts.shift();\n\tif (port !== void 0 && !port.match(/^[0-9]+$/)) {\n\t\treturn null;\n\t}\n\n\t// Return protocol + host, ignore the rest\n\treturn protocol + '//' + host;\n}\n\n/**\n * Type for callback\n */\nexport type RetrieveProviderCallback = (\n\thost: string,\n\tsuccess: boolean,\n\tprovider: string | APIProviderError\n) => void;\n\n/**\n * Retrieve API provider data\n */\nexport function retrieveProvider(\n\tregistry: Registry,\n\thost: string,\n\tcallback: RetrieveProviderCallback\n): void {\n\t// console.log('retrieveProvider:', host);\n\tconst api = registry.api;\n\tapi.sendQuery(host, '/provider', (status, data) => {\n\t\tconst providerData = data as APIProviderRawData;\n\t\tlet convertedData: APIProviderSource | null;\n\t\tlet error: APIProviderError = 'error';\n\t\tswitch (status) {\n\t\t\tcase 'success':\n\t\t\t\t// Validate\n\t\t\t\tif (typeof providerData !== 'object') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Check if API supports provider\n\t\t\t\tif (typeof providerData.provider !== 'string') {\n\t\t\t\t\terror = 'unsupported';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Convert data\n\t\t\t\tconvertedData = convertProviderData(host, providerData);\n\t\t\t\tif (!convertedData) {\n\t\t\t\t\t// console.log('Failed to convert data');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst provider = providerData.provider;\n\n\t\t\t\t// Check if provider exists\n\t\t\t\tconst list = listProviders();\n\t\t\t\tif (list.indexOf(provider) !== -1) {\n\t\t\t\t\terror = 'exists';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Add provider\n\t\t\t\taddProvider(provider, convertedData);\n\t\t\t\tcallback(host, true, provider);\n\t\t\t\treturn;\n\t\t}\n\t\tcallback(host, false, error);\n\t});\n}\n","import type { FullRoute } from '@iconify/search-core';\nimport type { FullCollectionRouteParams } from '@iconify/search-core/lib/route/types/params';\n\n/**\n * Get active provider from route\n */\nexport function getActiveProvider(route: FullRoute): string {\n\tif (!route) {\n\t\treturn '';\n\t}\n\n\tconst params = route.params as FullCollectionRouteParams;\n\tif (params && typeof params.provider === 'string') {\n\t\treturn params.provider;\n\t}\n\tif (route.parent) {\n\t\treturn getActiveProvider(route.parent);\n\t}\n\treturn '';\n}\n","import {\n\tbuildIcon,\n\tgetIcon,\n\taddCollection,\n\t_api,\n\taddAPIProvider,\n\tdisableCache,\n} from '@iconify/svelte';\nimport type { SvelteComponent } from 'svelte';\nimport {\n\tsetIconify,\n\tcompareObjects,\n\tstringToIcon,\n\tvalidateIcon,\n\tcustomisedConfig,\n\tIconFinderCore,\n\tsetComponentsConfig,\n\tobjectToRoute,\n} from '@iconify/search-core';\nimport type {\n\tIcon,\n\tPartialRoute,\n\tIconFinderCoreParams,\n\tRouterEvent,\n\tCoreIconifyFunctions,\n} from '@iconify/search-core';\nimport type {\n\tIconCustomisations,\n\tPartialIconCustomisations,\n} from '@iconify/search-core/lib/misc/customisations';\nimport {\n\tdefaultCustomisations,\n\tfilterCustomisations,\n\tmergeCustomisations,\n} from '@iconify/search-core/lib/misc/customisations';\nimport type { IconFinderWrapperParams } from './wrapper/params';\nimport type { IconFinderState } from './wrapper/state';\nimport type { WrapperStatus } from './wrapper/status';\nimport type { IconFinderEvent } from './wrapper/events';\nimport type {\n\tUIEvent,\n\tUICustomisationEvent,\n\tUIFooterButtonEvent,\n\tUISelectionEvent,\n} from './events/types';\nimport type { WrappedRegistry } from './wrapper/registry';\nimport type { ContainerProps } from './wrapper/container';\nimport { defaultComponentsConfig } from './config/wrapper';\nimport type { SelectedIcons, SelectIcon } from './wrapper/icons';\nimport {\n\taddToSelection,\n\tremoveFromSelection,\n\tisIconSelected,\n\tselectionToArray,\n} from './wrapper/icons';\nimport { addCustomAPIProviders } from './config/api';\nimport { importThemeIcons } from './config/theme';\n\n// Change import to change container component\nimport Container from './components/Container.svelte';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-unused-vars-experimental, @typescript-eslint/no-empty-function\nfunction assertNever(s: never) {}\n\n// Set SVG framework\n// getVersion() will will use hardcoded version number generated when building core\nconst functions: Omit<Required<CoreIconifyFunctions>, 'getVersion'> = {\n\tgetIcon,\n\taddCollection,\n\tgetAPI: _api.getAPI,\n\taddAPIProvider,\n};\nsetIconify(functions);\n\n// Import theme icons\nimportThemeIcons();\n\n// Add components configuration to config object\nsetComponentsConfig(defaultComponentsConfig);\n\n/**\n * Wrapper class\n */\nexport class Wrapper {\n\t// Parameters\n\tprotected _params: IconFinderWrapperParams;\n\n\t// Current state, always up to date\n\tprotected _state: IconFinderState = {\n\t\ticons: [],\n\t\tcustomisations: {},\n\t};\n\n\t// Selected icons as nested object\n\tprotected _selection: SelectedIcons = Object.create(null);\n\n\t// Number of selected icons\n\tprotected _selectionLength: number = 0;\n\n\t// Status\n\tprotected _status: WrapperStatus = 'loading';\n\n\t// Core instance and registry\n\tprotected readonly _core: IconFinderCore;\n\tprotected readonly _registry: WrappedRegistry;\n\n\t// Container component, added on first render\n\tprotected _container: SvelteComponent | null = null;\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor(params: IconFinderWrapperParams) {\n\t\tthis._params = params;\n\t\tconst customState = params.state;\n\n\t\t// Set core parameters\n\t\tconst coreParams: IconFinderCoreParams = {\n\t\t\tcallback: this._coreCallback.bind(this),\n\t\t};\n\t\tif (customState && customState.config) {\n\t\t\tcoreParams.config = customState.config;\n\t\t}\n\t\tif (params.iconSets) {\n\t\t\tcoreParams.iconSets =\n\t\t\t\tparams.iconSets instanceof Array\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ticonSets: params.iconSets,\n\t\t\t\t\t  }\n\t\t\t\t\t: params.iconSets;\n\n\t\t\t// console.log('Params.iconSets:', coreParams.iconSets);\n\t\t}\n\n\t\t// Disable Iconify cache\n\t\tdisableCache('all');\n\n\t\t// Init core\n\t\tconst core = (this._core = new IconFinderCore(coreParams));\n\t\tconst registry = (this._registry = core.registry as WrappedRegistry);\n\n\t\t// Callback\n\t\tregistry.setCustom('callback', this._internalCallback.bind(this));\n\n\t\t// External link callback\n\t\tregistry.setCustom('link', this._externalLinkCallback.bind(this));\n\n\t\t// Add API providers\n\t\taddCustomAPIProviders(registry);\n\n\t\t// Set initial state\n\t\tconst state = this._state;\n\t\tstate.config = customisedConfig(registry.config);\n\n\t\t// Store partial route in state\n\t\tconst route = registry.partialRoute;\n\t\tstate.route = route ? route : void 0;\n\n\t\tif (customState) {\n\t\t\t// Set custom stuff\n\t\t\tif (customState.icons) {\n\t\t\t\tcustomState.icons.forEach((icon) => {\n\t\t\t\t\tlet iconValue: Icon | null =\n\t\t\t\t\t\ttypeof icon === 'string' ? stringToIcon(icon) : icon;\n\t\t\t\t\tif (validateIcon(iconValue)) {\n\t\t\t\t\t\taddToSelection(this._selection, iconValue!);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tstate.icons = selectionToArray(this._selection);\n\t\t\t\tthis._selectionLength = state.icons.length;\n\t\t\t}\n\t\t\tif (customState.customisations) {\n\t\t\t\tstate.customisations = customState.customisations;\n\t\t\t}\n\t\t\tif (customState.route) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Set on next tick\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tregistry.partialRoute = customState.route!;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get container status\n\t */\n\tgetStatus(): WrapperStatus {\n\t\treturn this._status;\n\t}\n\n\t/**\n\t * Get current state\n\t */\n\tgetState(): IconFinderState {\n\t\treturn this._state;\n\t}\n\n\t/**\n\t * Hide or destroy\n\t */\n\t_hide(newStatus: WrapperStatus) {\n\t\tswitch (this._status) {\n\t\t\tcase 'hidden':\n\t\t\tcase 'destroyed':\n\t\t\t\t// Cannot hide\n\t\t\t\treturn;\n\n\t\t\tcase 'loading':\n\t\t\tcase '':\n\t\t\t\t// Hide\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tassertNever(this._status);\n\t\t}\n\n\t\tthis._status = newStatus;\n\t\tif (this._container) {\n\t\t\tthis._container.$set({\n\t\t\t\thidden: true,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Hide\n\t */\n\thide(): void {\n\t\tthis._hide('hidden');\n\t}\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy(): void {\n\t\tif (this._status !== 'destroyed') {\n\t\t\tthis._hide('destroyed');\n\t\t\tthis._container = null;\n\t\t\tthis._registry.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Show\n\t */\n\tshow(): void {\n\t\tswitch (this._status) {\n\t\t\t// Cannot show or loading\n\t\t\tcase 'destroyed':\n\t\t\t// Already visible or loading\n\t\t\tcase 'loading':\n\t\t\tcase '':\n\t\t\t\treturn;\n\n\t\t\tcase 'hidden':\n\t\t\t\t// Show\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tassertNever(this._status);\n\t\t}\n\n\t\tthis._status = '';\n\t\tif (this._container) {\n\t\t\tthis._container.$set({\n\t\t\t\thidden: false,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Create Container component\n\t */\n\t_initContainer(data: RouterEvent): SvelteComponent {\n\t\tconst state = this._state;\n\n\t\t// Check if container should be visible\n\t\tlet hidden = false;\n\t\tswitch (this._status) {\n\t\t\tcase 'hidden':\n\t\t\tcase 'destroyed':\n\t\t\t\thidden = true;\n\n\t\t\tcase '':\n\t\t\tcase 'loading':\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tassertNever(this._status);\n\t\t}\n\n\t\t// Properties\n\t\tconst props: ContainerProps = {\n\t\t\t// From RouterEvent\n\t\t\tviewChanged: data.viewChanged,\n\t\t\terror: data.error,\n\t\t\tblocks: data.blocks,\n\n\t\t\t// Convert to full route\n\t\t\troute: data.route ? objectToRoute(data.route) : null,\n\n\t\t\t// Selected icons\n\t\t\tselection: this._selection,\n\t\t\tselectionLength: this._selectionLength,\n\n\t\t\t// Full icon customisations\n\t\t\tcustomisations: mergeCustomisations(\n\t\t\t\tdefaultCustomisations,\n\t\t\t\tstate.customisations ? state.customisations : {}\n\t\t\t),\n\n\t\t\t// Registry\n\t\t\tregistry: this._core.registry as WrappedRegistry,\n\n\t\t\t// Status\n\t\t\thidden,\n\t\t};\n\n\t\t// Constructor parameters\n\t\tconst params = {\n\t\t\ttarget: this._params.container,\n\t\t\tprops,\n\t\t};\n\n\t\treturn new Container(params);\n\t}\n\n\t/**\n\t * Trigger event\n\t */\n\t_triggerEvent(event: IconFinderEvent): void {\n\t\tif (this._status !== 'destroyed' && this._params.callback) {\n\t\t\tthis._params.callback(event);\n\t\t}\n\t}\n\n\t/**\n\t * Callback from core\n\t */\n\t_coreCallback(data: RouterEvent): void {\n\t\tif (!this._container) {\n\t\t\t// Create new container on first render\n\t\t\tthis._container = this._initContainer(data);\n\n\t\t\t// Mark as loaded\n\t\t\tif (this._status === 'loading') {\n\t\t\t\tthis._status = '';\n\t\t\t\tthis._triggerEvent({\n\t\t\t\t\ttype: 'load',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Save route\n\t\t\tif (data.route) {\n\t\t\t\tthis._setRoute(data.route);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Update container\n\t\tconst container = this._container;\n\n\t\t// Convert partial route to full route.\n\t\t// Use full route in components, partial route in state and callback\n\t\tconst partialRoute = data.route;\n\t\tconst fullRoute = partialRoute ? objectToRoute(partialRoute) : null;\n\t\tdata.route = fullRoute;\n\n\t\t// Check for changes\n\t\tif (\n\t\t\tdata.viewChanged ||\n\t\t\t!compareObjects(data.route, container.$$.props.route)\n\t\t) {\n\t\t\t// Change everything\n\t\t\tcontainer.$set(data);\n\n\t\t\t// Save route\n\t\t\tif (partialRoute) {\n\t\t\t\tthis._setRoute(partialRoute);\n\t\t\t}\n\t\t} else {\n\t\t\t// Route is the same, so if error has changed, only error and blocks need update\n\t\t\tif (data.error === '' || data.error !== container.$$.props.error) {\n\t\t\t\tcontainer.$set({\n\t\t\t\t\terror: data.error,\n\t\t\t\t\tblocks: data.blocks,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Select icon\n\t */\n\t_internalCallback(event: UIEvent): void {\n\t\t// console.log('Internal event:', event);\n\n\t\tlet icon: Icon | null;\n\t\tlet selectionEvent: UISelectionEvent;\n\n\t\tconst type = event.type;\n\t\tswitch (type) {\n\t\t\tcase 'selection':\n\t\t\t\t// Selected icon changed: trigger event and update container (this event does not automatically update container)\n\t\t\t\tselectionEvent = event as UISelectionEvent;\n\t\t\t\tif (typeof selectionEvent.icon === 'string') {\n\t\t\t\t\ticon = stringToIcon(selectionEvent.icon);\n\t\t\t\t} else {\n\t\t\t\t\ticon = selectionEvent.icon;\n\t\t\t\t}\n\t\t\t\tthis._selectIcon(\n\t\t\t\t\ticon,\n\t\t\t\t\ttypeof selectionEvent.selected === 'boolean'\n\t\t\t\t\t\t? selectionEvent.selected\n\t\t\t\t\t\t: 'force',\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\treturn;\n\n\t\t\tcase 'customisation':\n\t\t\t\t// Customisation was clicked: trigger event\n\t\t\t\tthis._setCustomisations(\n\t\t\t\t\t(event as UICustomisationEvent).customisations\n\t\t\t\t);\n\t\t\t\treturn;\n\n\t\t\tcase 'button':\n\t\t\t\t// Button was clicked: trigger event\n\t\t\t\tthis._triggerEvent({\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tbutton: (event as UIFooterButtonEvent).button,\n\t\t\t\t\tstate: this._state,\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase 'config':\n\t\t\t\t// Configuration changed: trigger event\n\t\t\t\tthis._state.config = customisedConfig(this._registry.config);\n\t\t\t\tthis._triggerEvent({\n\t\t\t\t\ttype: 'config',\n\t\t\t\t\tconfig: this._state.config,\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tdefault:\n\t\t\t\t// Should never reach this code\n\t\t\t\tassertNever(type);\n\t\t}\n\t}\n\n\t/**\n\t * External link was clicked\n\t */\n\t_externalLinkCallback(event: MouseEvent): void {\n\t\tif (event && event.target) {\n\t\t\tconst target = event.target as HTMLLinkElement;\n\t\t\tconst href = target.getAttribute('href');\n\t\t\tif (typeof href === 'string') {\n\t\t\t\tthis._triggerEvent({\n\t\t\t\t\ttype: 'link',\n\t\t\t\t\thref,\n\t\t\t\t\tevent,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set route\n\t */\n\t_setRoute(route: PartialRoute): boolean {\n\t\tconst state = this._state;\n\n\t\t// Check if route has changed\n\t\tif (state.route === void 0 || !compareObjects(route, state.route)) {\n\t\t\tstate.route = route;\n\t\t\tthis._triggerEvent({\n\t\t\t\ttype: 'route',\n\t\t\t\troute,\n\t\t\t});\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Set route\n\t */\n\tsetRoute(route: PartialRoute | null) {\n\t\tif (this._status === 'destroyed') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst router = this._core.router;\n\t\tfunction loadRoute() {\n\t\t\trouter.partialRoute = route;\n\t\t}\n\n\t\tif (!this._container) {\n\t\t\t// Load on next tick\n\t\t\tsetTimeout(loadRoute);\n\t\t} else {\n\t\t\tloadRoute();\n\t\t}\n\t}\n\n\t/**\n\t * Select icon\n\t */\n\t_selectIcon(\n\t\ticon: Icon | null,\n\t\tselect: SelectIcon,\n\t\tupdateContainer: boolean\n\t): boolean {\n\t\tconst state = this._state;\n\n\t\tconst done = () => {\n\t\t\tthis._selectionLength = state.icons.length;\n\t\t\tif (updateContainer && this._container) {\n\t\t\t\tconst update: Partial<ContainerProps> = {\n\t\t\t\t\tselection: this._selection,\n\t\t\t\t\tselectionLength: this._selectionLength,\n\t\t\t\t};\n\t\t\t\tthis._container.$set(update);\n\t\t\t}\n\t\t\tthis._triggerEvent({\n\t\t\t\ttype: 'selection',\n\t\t\t\ticons: state.icons,\n\t\t\t});\n\t\t};\n\n\t\tif (!icon) {\n\t\t\t// De-select everything?\n\t\t\tif (select === true || state.icons.length !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Reset selection\n\t\t\tthis._selection = Object.create(null);\n\t\t\tstate.icons = [];\n\t\t\tdone();\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check if icon is selected\n\t\tconst selected: boolean =\n\t\t\t!!this._selectionLength && isIconSelected(this._selection, icon);\n\t\tif (selected === select || (selected && select === 'force')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\t(!selected && select === 'force') ||\n\t\t\t!this._registry.config.components.multiSelect\n\t\t) {\n\t\t\t// Clear selection if multiple icons cannot be selected and icon is not selected\n\t\t\tthis._selection = Object.create(null);\n\t\t}\n\n\t\t// Toggle icon\n\t\tif (selected) {\n\t\t\tremoveFromSelection(this._selection, icon);\n\t\t} else {\n\t\t\taddToSelection(this._selection, icon);\n\t\t}\n\n\t\t// Update stuff\n\t\tstate.icons = selectionToArray(this._selection);\n\t\tdone();\n\n\t\t// Reset customisations for multiple icons\n\t\tif (state.icons.length > 1) {\n\t\t\tlet changed = false;\n\t\t\tconst customisations = mergeCustomisations(\n\t\t\t\tdefaultCustomisations,\n\t\t\t\tstate.customisations\n\t\t\t);\n\t\t\tif (customisations.inline) {\n\t\t\t\tcustomisations.inline = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (changed) {\n\t\t\t\tthis._setCustomisations(customisations);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Select icon(s)\n\t */\n\tselectIcons(icons: (Icon | string)[] | null): void {\n\t\tif (this._status === 'destroyed') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst state = this._state;\n\n\t\t// Reset icons\n\t\tthis._selection = Object.create(null);\n\t\tconst selection = this._selection;\n\n\t\t// Add all icons (only last icon if multiple icons cannot be selected)\n\t\tif (icons) {\n\t\t\t(this._registry.config.components.multiSelect\n\t\t\t\t? icons\n\t\t\t\t: icons.slice(-1)\n\t\t\t).forEach((icon) => {\n\t\t\t\tconst converted =\n\t\t\t\t\ttypeof icon === 'string' ? stringToIcon(icon) : icon;\n\t\t\t\tif (converted) {\n\t\t\t\t\taddToSelection(selection, converted);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Update variables\n\t\tstate.icons = selectionToArray(selection);\n\t\tthis._selectionLength = state.icons.length;\n\n\t\t// Update container\n\t\tif (this._container) {\n\t\t\tconst update: Partial<ContainerProps> = {\n\t\t\t\tselection: selection,\n\t\t\t\tselectionLength: this._selectionLength,\n\t\t\t};\n\t\t\tthis._container.$set(update);\n\t\t}\n\n\t\t// Trigger event\n\t\tthis._triggerEvent({\n\t\t\ttype: 'selection',\n\t\t\ticons: state.icons,\n\t\t});\n\t}\n\n\t/**\n\t * Change customisations\n\t */\n\t_setCustomisations(customisations: IconCustomisations): boolean {\n\t\tconst state = this._state;\n\t\tif (\n\t\t\tstate.customisations !== void 0 &&\n\t\t\tcompareObjects(state.customisations, customisations)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Save partial customisations in state\n\t\tstate.customisations = filterCustomisations(customisations);\n\n\t\t// Update container\n\t\tif (this._container) {\n\t\t\tthis._container.$set({\n\t\t\t\tcustomisations,\n\t\t\t});\n\t\t} else {\n\t\t\tif (!this._params.state) {\n\t\t\t\tthis._params.state = {};\n\t\t\t}\n\t\t\tthis._params.state.customisations = customisations;\n\t\t}\n\n\t\t// Trigger evemt\n\t\tthis._triggerEvent({\n\t\t\ttype: 'customisations',\n\t\t\tcustomisations,\n\t\t});\n\t\treturn true;\n\t}\n\n\t/**\n\t * Change customisations\n\t */\n\tsetCustomisations(customisations: PartialIconCustomisations): void {\n\t\tif (this._status === 'destroyed') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._setCustomisations(\n\t\t\tmergeCustomisations(defaultCustomisations, customisations)\n\t\t);\n\t}\n}\n","import type { Icon } from '@iconify/search-core';\n\n/**\n * Type of icon selection:\n *\n * boolean = select/deselect\n * 'toggle' = toggle\n * 'force' = force selection: deselect other icons\n */\nexport type SelectIcon = true | false | 'toggle' | 'force';\n\n/**\n * Selected icons: [provider][prefix] = array of names\n */\nexport type SelectedIcons = Record<string, Record<string, string[]>>;\n\n/**\n * Add icon to selection\n */\nexport function addToSelection(icons: SelectedIcons, icon: Icon): boolean {\n\tif (icons[icon.provider] === void 0) {\n\t\ticons[icon.provider] = Object.create(null);\n\t}\n\tconst providerIcons = icons[icon.provider];\n\n\tif (providerIcons[icon.prefix] === void 0) {\n\t\tproviderIcons[icon.prefix] = [];\n\t}\n\tconst list = providerIcons[icon.prefix];\n\n\tif (list.indexOf(icon.name) === -1) {\n\t\tlist.push(icon.name);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Remove icon from selection\n */\nexport function removeFromSelection(icons: SelectedIcons, icon: Icon): boolean {\n\tif (\n\t\ticons[icon.provider] === void 0 ||\n\t\ticons[icon.provider][icon.prefix] === void 0\n\t) {\n\t\treturn false;\n\t}\n\n\tconst providerIcons = icons[icon.provider];\n\tlet oldCount = providerIcons[icon.prefix].length;\n\n\tconst matches = icon.aliases\n\t\t? icon.aliases.concat([icon.name])\n\t\t: [icon.name];\n\tproviderIcons[icon.prefix] = providerIcons[icon.prefix].filter(\n\t\t(name) => matches.indexOf(name) === -1\n\t);\n\n\tconst found = oldCount !== providerIcons[icon.prefix].length;\n\tif (!providerIcons[icon.prefix].length) {\n\t\t// Clean up\n\t\tdelete providerIcons[icon.prefix];\n\t\tif (!Object.keys(providerIcons).length) {\n\t\t\tdelete icons[icon.provider];\n\t\t}\n\t}\n\n\treturn found;\n}\n\n/**\n * Check if icon is selected\n */\nexport function isIconSelected(icons: SelectedIcons, icon: Icon): boolean {\n\t// Check if provider and prefix exist\n\tif (icons[icon.provider] === void 0) {\n\t\treturn false;\n\t}\n\tconst provider = icons[icon.provider];\n\tif (provider[icon.prefix] === void 0) {\n\t\treturn false;\n\t}\n\n\t// Check name and aliases\n\tconst list = provider[icon.prefix];\n\tif (list.indexOf(icon.name) !== -1) {\n\t\treturn true;\n\t}\n\n\tif (icon.aliases) {\n\t\tfor (let i = 0; i < icon.aliases.length; i++) {\n\t\t\tif (list.indexOf(icon.aliases[i]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Convert selection to array\n */\nexport function selectionToArray(icons: SelectedIcons): Icon[] {\n\tconst result: Icon[] = [];\n\tObject.keys(icons).forEach((provider) => {\n\t\tObject.keys(icons[provider]).forEach((prefix) => {\n\t\t\ticons[provider][prefix].forEach((name) => {\n\t\t\t\tresult.push({\n\t\t\t\t\tprovider,\n\t\t\t\t\tprefix,\n\t\t\t\t\tname,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\treturn result;\n}\n","<script lang=\"typescript\">\n\timport { setContext } from 'svelte';\n\timport type { FullRoute, ViewBlocks } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type { SelectedIcons } from '../wrapper/icons';\n\timport type { WrappedRegistry } from '../wrapper/registry';\n\timport Wrapper from './Wrapper.svelte';\n\timport Content from './content/Content.svelte';\n\timport Footer from './content/Footer.svelte';\n\n\t/**\n\t * Global exports\n\t */\n\texport let registry: WrappedRegistry;\n\texport let selection: SelectedIcons;\n\texport let selectionLength: number;\n\texport let customisations: IconCustomisations;\n\texport let hidden: boolean;\n\n\t// RouterEvent with full route\n\texport let viewChanged: boolean;\n\texport let error: string;\n\texport let route: FullRoute;\n\texport let blocks: ViewBlocks | null;\n\n\t// Set context\n\tsetContext('registry', registry);\n</script>\n\n{#if hidden !== true}\n\t<Wrapper>\n\t\t<Content {selection} {viewChanged} {error} {route} {blocks} />\n\t\t<Footer {selection} {selectionLength} {route} {customisations} />\n\t</Wrapper>\n{/if}\n","<div class=\"iif-wrapper\">\n\t<slot />\n</div>\n","<script type=\"typescript\">\n\t// Block type\n\texport let type = '';\n\n\t// Block name\n\texport let name = '';\n\n\t// Extra class to add\n\texport let extra = '';\n\n\tconst baseClass = 'iif-block';\n\tlet className: string;\n\t$: {\n\t\tclassName = baseClass;\n\t\tif (type !== '') {\n\t\t\tlet typeBase = ' ' + baseClass + '--' + type;\n\t\t\tclassName += typeBase;\n\t\t\tif (name !== '') {\n\t\t\t\tclassName += typeBase + '--' + name;\n\t\t\t}\n\t\t}\n\t\tif (extra !== '') {\n\t\t\tclassName += ' ' + baseClass + '--' + extra;\n\t\t}\n\t\t// console.log(`Rendering Block at ${Date.now()}: ${className}`);\n\t}\n</script>\n\n<div class={className}>\n\t<slot />\n</div>\n","<script lang=\"typescript\">\n\timport type { FullRoute, ViewBlocks } from '@iconify/search-core';\n\timport { listProviders } from '@iconify/search-core';\n\timport type { SelectedIcons } from '../../wrapper/icons';\n\timport { showProviders, canAddProviders } from '../../config/components';\n\timport { getActiveProvider } from '../../provider/get-provider';\n\timport SearchBlock from './blocks/GlobalSearch.svelte';\n\timport ParentBlock from './blocks/Parent.svelte';\n\timport ProvidersBlock from './blocks/Providers.svelte';\n\timport CollectionsView from './views/Collections.svelte';\n\timport CollectionView from './views/Collection.svelte';\n\timport SearchView from './views/Search.svelte';\n\timport CustomView from './views/Custom.svelte';\n\timport ViewError from './views/Error.svelte';\n\n\t/**\n\t * Global exports\n\t */\n\texport let selection: SelectedIcons;\n\n\t// RouterEvent\n\texport let viewChanged: boolean;\n\texport let error: string;\n\texport let route: FullRoute;\n\texport let blocks: ViewBlocks | null;\n\n\t// Get container class name\n\tconst baseClass = 'iif-content';\n\tlet className: string;\n\t$: {\n\t\t// Check class name and search form value\n\t\tclassName = baseClass;\n\n\t\tif (error !== '') {\n\t\t\t// View shows error\n\t\t\tclassName +=\n\t\t\t\t' ' + baseClass + '--error ' + baseClass + '--error--' + error;\n\t\t} else {\n\t\t\t// View shows something\n\t\t\tclassName +=\n\t\t\t\t' ' +\n\t\t\t\tbaseClass +\n\t\t\t\t'--view ' +\n\t\t\t\tbaseClass +\n\t\t\t\t'--view--' +\n\t\t\t\troute.type;\n\n\t\t\tif (\n\t\t\t\troute.params &&\n\t\t\t\t(route.type === 'search' ||\n\t\t\t\t\troute.type === 'collections' ||\n\t\t\t\t\troute.type === 'collection') &&\n\t\t\t\troute.params.provider\n\t\t\t) {\n\t\t\t\t// Add provider: '{base}--view--{type}--provider--{provider}'\n\t\t\t\tclassName +=\n\t\t\t\t\t' ' +\n\t\t\t\t\tbaseClass +\n\t\t\t\t\t'--view--' +\n\t\t\t\t\troute.type +\n\t\t\t\t\t'--provider--' +\n\t\t\t\t\troute.params.provider;\n\t\t\t}\n\n\t\t\tif (route.type === 'collection') {\n\t\t\t\t// Add prefix: '{base}--view--collection--prefix--{prefix}'\n\t\t\t\tclassName +=\n\t\t\t\t\t' ' +\n\t\t\t\t\tbaseClass +\n\t\t\t\t\t'--view--collection--prefix--' +\n\t\t\t\t\troute.params.prefix;\n\t\t\t} else if (route.type === 'custom') {\n\t\t\t\t// Add custom type: '{base} {base}--view {base}--view--custom {base}--view--custom--{customType}'\n\t\t\t\tclassName +=\n\t\t\t\t\t' ' +\n\t\t\t\t\tbaseClass +\n\t\t\t\t\t'--view--custom--' +\n\t\t\t\t\troute.params.customType;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check if collections list is in route, don't show global search if its not there\n\tlet showGlobalSearch: boolean;\n\t$: {\n\t\tshowGlobalSearch = false;\n\t\tlet item: FullRoute | null = route;\n\t\twhile (!showGlobalSearch && item) {\n\t\t\tif (item.type === 'collections') {\n\t\t\t\tshowGlobalSearch = true;\n\t\t\t} else {\n\t\t\t\titem = item.parent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check if route is capable of having provider\n\t */\n\tfunction isProviderEnabledRoute(route: FullRoute): boolean {\n\t\tswitch (route.type) {\n\t\t\tcase 'collections':\n\t\t\tcase 'collection':\n\t\t\tcase 'search':\n\t\t\t\treturn true;\n\t\t}\n\t\treturn route.parent ? isProviderEnabledRoute(route.parent) : false;\n\t}\n\n\t// Get providers\n\tlet providersVisible: boolean = canAddProviders;\n\tlet activeProvider: string = '';\n\tlet providers: string[] = [''];\n\t$: {\n\t\tif (showProviders && isProviderEnabledRoute(route)) {\n\t\t\tconst providersList = listProviders();\n\t\t\tif (providersList.length > 1) {\n\t\t\t\tprovidersVisible = true;\n\n\t\t\t\t// Get current provider\n\t\t\t\tactiveProvider = getActiveProvider(route);\n\n\t\t\t\t// Create new list of providers\n\t\t\t\tif (!providers || providers.length !== providersList.length) {\n\t\t\t\t\tproviders = providersList;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprovidersVisible = canAddProviders;\n\t\t\t}\n\t\t} else {\n\t\t\tprovidersVisible = false;\n\t\t}\n\t}\n</script>\n\n<div class={className}>\n\t{#if providersVisible}\n\t\t<ProvidersBlock {providers} {activeProvider} />\n\t{/if}\n\n\t{#if showGlobalSearch}\n\t\t<SearchBlock {viewChanged} {route} />\n\t{/if}\n\n\t{#if route?.parent}\n\t\t<ParentBlock {route} />\n\t{/if}\n\n\t{#if !route || route.type !== 'empty'}\n\t\t{#if error !== '' || !route}\n\t\t\t<ViewError error={error !== '' ? error : 'bad_route'} {route} />\n\t\t{:else if route.type === 'collections'}\n\t\t\t<CollectionsView {route} {blocks} />\n\t\t{:else if route.type === 'collection'}\n\t\t\t<CollectionView {route} {blocks} {selection} />\n\t\t{:else if route.type === 'search'}\n\t\t\t<SearchView {route} {blocks} {selection} />\n\t\t{:else if route.type === 'custom'}\n\t\t\t<CustomView {route} {blocks} {selection} />\n\t\t{:else}\n\t\t\t<ViewError error=\"bad_route\" {route} />\n\t\t{/if}\n\t{/if}\n</div>\n","<script lang=\"typescript\">\n\timport { onMount, getContext, onDestroy } from 'svelte';\n\timport { loadIcons } from '@iconify/svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport { Iconify } from '@iconify/search-core/lib/iconify';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { mergeCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type { SelectedIcons } from '../../wrapper/icons';\n\timport { selectionToArray } from '../../wrapper/icons';\n\timport type { FullRoute } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../wrapper/registry';\n\n\t/**\n\t * Various footer components\n\t *\n\t * Select component you need by changing comments\n\t */\n\t// Full footer\n\timport Footer from './footers/Full.svelte';\n\n\t// Similar to full, but selected icon (or icons list) is above footer, making it look nicer with small width\n\t// Also when multiple icons are selected, it allows selecting icon from selected icons and shows code/customisations for it\n\t// import Footer from './footers/Compact.svelte';\n\n\t// Simple footer: no big sample\n\t// import Footer from './footers/Simple.svelte';\n\n\t// Empty footer: only buttons\n\t// import Footer from './footers/Empty.svelte';\n\n\t/**\n\t * Global exports\n\t */\n\texport let selection: SelectedIcons;\n\texport let selectionLength: number;\n\texport let customisations: IconCustomisations;\n\texport let route: FullRoute;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Change icon customisation value\n\tfunction customise(prop: keyof IconCustomisations, value: unknown) {\n\t\t// Convert empty width/height to null\n\t\tswitch (prop) {\n\t\t\tcase 'width':\n\t\t\tcase 'height':\n\t\t\t\tif (value === '' || value === 0) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (customisations[prop] !== void 0 && customisations[prop] !== value) {\n\t\t\t// Change value then change object to force Svelte update components\n\t\t\tconst changed = {\n\t\t\t\t[prop]: value,\n\t\t\t};\n\n\t\t\t// Send event: UICustomisationEvent\n\t\t\tregistry.callback({\n\t\t\t\ttype: 'customisation',\n\t\t\t\tchanged,\n\t\t\t\tcustomisations: { ...customisations, ...changed },\n\t\t\t});\n\t\t}\n\t}\n\n\t// Event listener\n\tlet mounted = false;\n\tlet updateCounter: number = 0;\n\tlet abortLoader: (() => void) | null = null;\n\tfunction loadingEvent() {\n\t\tupdateCounter++;\n\t}\n\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n\n\t// Get list of loaded and pending icons\n\tlet icons: Icon[];\n\tlet pending: string[];\n\t$: {\n\t\t// Mention updateCounter to trigger this code when event listener is used\n\t\tupdateCounter;\n\n\t\t// Filter icons\n\t\ticons = [];\n\t\tconst newPending: string[] = [];\n\t\tconst toLoad: string[] = [];\n\n\t\tconst list = selectionLength ? selectionToArray(selection) : [];\n\t\tlist.forEach((icon) => {\n\t\t\tconst name = iconToString(icon);\n\t\t\tif (Iconify.getIcon?.(name)) {\n\t\t\t\ticons.push(icon);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Icon is missing\n\t\t\tif (abortLoader && pending && pending.indexOf(name) !== -1) {\n\t\t\t\t// Already pending: do nothing\n\t\t\t\tnewPending.push(name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Add icon to list of icons to load\n\t\t\tnewPending.push(name);\n\t\t\ttoLoad.push(name);\n\t\t});\n\n\t\t// Update pending list and load icons after component is mounted\n\t\tpending = newPending;\n\t\tif (toLoad.length && mounted) {\n\t\t\t// Load new icons\n\t\t\tif (abortLoader !== null) {\n\t\t\t\tabortLoader();\n\t\t\t}\n\t\t\tabortLoader = loadIcons(toLoad, loadingEvent);\n\t\t}\n\t}\n\n\t// Remove event listener\n\tonDestroy(() => {\n\t\tif (abortLoader !== null) {\n\t\t\tabortLoader();\n\t\t}\n\t});\n</script>\n\n<Footer {icons} {customisations} {route} {customise} />\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { CollectionInfoBlock } from '@iconify/search-core';\n\timport type { CollectionInfo } from '@iconify/search-core/lib/converters/info';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Block from '../Block.svelte';\n\n\t// Block name\n\texport let name: string;\n\n\t// Block data\n\texport let block: CollectionInfoBlock;\n\n\t// Short info?\n\texport let short: boolean = false;\n\n\t// Show title?\n\texport let showTitle: boolean = true;\n\n\tconst text = phrases.collectionInfo;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Callback for external link\n\tconst onExternalClick = registry.link;\n\n\t// Split info into a separate object\n\tlet info: CollectionInfo | null;\n\t$: {\n\t\tinfo = block.info;\n\t}\n</script>\n\n{#if info}\n\t<Block type=\"collection-info\" extra={name}>\n\t\t{#if showTitle}\n\t\t\t<div class=\"iif-collection-info-title\">{info.name}</div>\n\t\t{/if}\n\t\t{#if info.author}\n\t\t\t<dl>\n\t\t\t\t<dt>{text.author}</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t{#if info.author.url}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={info.author.url}\n\t\t\t\t\t\t\ton:click={onExternalClick}\n\t\t\t\t\t\t\ttarget=\"_blank\">{info.author.name}</a>\n\t\t\t\t\t{:else}{info.author.name}{/if}\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t{/if}\n\t\t{#if info.license}\n\t\t\t<dl>\n\t\t\t\t<dt>{text.license}</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t{#if info.license.url}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={info.license.url}\n\t\t\t\t\t\t\ton:click={onExternalClick}\n\t\t\t\t\t\t\ttarget=\"_blank\">{info.license.title}</a>\n\t\t\t\t\t{:else}{info.license.title}{/if}\n\t\t\t\t</dd>\n\t\t\t</dl>\n\t\t{/if}\n\t\t{#if !short}\n\t\t\t<dl>\n\t\t\t\t<dt>{text.total}</dt>\n\t\t\t\t<dd>{info.total}</dd>\n\t\t\t</dl>\n\t\t\t{#if info.height}\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>{text.height}</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t{typeof info.height === 'object' ? info.height.join(', ') : info.height}\n\t\t\t\t\t</dd>\n\t\t\t\t</dl>\n\t\t\t{/if}\n\t\t{/if}\n\t</Block>\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { CollectionsFilterBlock } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Block from '../Block.svelte';\n\timport Input from '../../ui/Input.svelte';\n\n\t// Block name\n\texport let name: string;\n\n\t// Block data\n\texport let block: CollectionsFilterBlock;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Set initial input value\n\tlet value: string = block.keyword;\n\t$: {\n\t\t// Update value\n\t\tif (value !== block.keyword) {\n\t\t\tregistry.router.action(name, value);\n\t\t}\n\t}\n\n\t// Get placeholder\n\tconst text = phrases.search;\n\tconst placeholder =\n\t\ttext.placeholder.collections === void 0\n\t\t\t? text.defaultPlaceholder\n\t\t\t: text.placeholder.collections;\n</script>\n\n<Block type=\"filter\">\n\t<Input type=\"text\" bind:value icon=\"search\" {placeholder} />\n</Block>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { CollectionsListBlock } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Block from '../Block.svelte';\n\timport Category from './collections-list/Category.svelte';\n\timport Error from '../../ui/ContentError.svelte';\n\n\t// Block name\n\texport let name: string;\n\n\t// Block data\n\texport let block: CollectionsListBlock;\n\n\t// API propvider\n\texport let provider: string;\n\n\t// Get registry instance\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Click event\n\tfunction onClick(prefix: string) {\n\t\tregistry.router.action(name, prefix);\n\t}\n</script>\n\n<Block type=\"collections\">\n\t{#each Object.entries(block.collections) as [category, items], i (category)}\n\t\t<Category\n\t\t\t{onClick}\n\t\t\tshowCategories={block.showCategories}\n\t\t\t{category}\n\t\t\t{provider}\n\t\t\t{items} />\n\t{:else}\n\t\t<Error error={phrases.errors.noCollections} />\n\t{/each}\n</Block>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { FiltersBlock } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Block from '../Block.svelte';\n\timport Filter from '../../ui/Filter.svelte';\n\n\t// Block name\n\texport let name: string;\n\n\t// Block data\n\texport let block: FiltersBlock;\n\n\t// Parent route type\n\texport let parent: string = '';\n\n\t// Link for items, use {prefix} for item key\n\texport let link: string = '';\n\n\t// Click handler\n\texport let onClick: ((key: string) => void) | null = null;\n\n\t// Show title?\n\texport let showTitle: boolean = false;\n\n\t// Title\n\texport let title: string = '';\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Handle click\n\tfunction handleClick(key: string) {\n\t\tif (typeof onClick === 'function') {\n\t\t\tonClick(key);\n\t\t} else {\n\t\t\tregistry.router.action(name, key === block.active ? null : key);\n\t\t}\n\t}\n\n\t// Resolve header\n\tlet header: string;\n\t$: {\n\t\tif (showTitle === false) {\n\t\t\theader = '';\n\t\t} else if (typeof title === 'string') {\n\t\t\theader = title;\n\t\t} else {\n\t\t\tlet key = name;\n\t\t\tif (parent !== '') {\n\t\t\t\tif (phrases.filters[name + '-' + parent] !== void 0) {\n\t\t\t\t\tkey = name + '-' + parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\theader =\n\t\t\t\tphrases.filters[key] === void 0 ? '' : phrases.filters[key];\n\t\t}\n\t}\n\n\t// Get filter keys\n\tlet filters: string[];\n\t$: {\n\t\tfilters = block === null ? [] : Object.keys(block.filters);\n\t}\n\n\t// Get extra class name\n\tlet extra: string;\n\t$: {\n\t\textra =\n\t\t\tblock === null || block.active === null ? '' : 'filters--active';\n\t}\n</script>\n\n{#if filters.length > 1}\n\t<Block type=\"filters\" {name} {extra}>\n\t\t{#if header !== ''}\n\t\t\t<div class=\"iif-filters-header\">{header}</div>\n\t\t{/if}\n\t\t<div class=\"iif-filters-list\">\n\t\t\t{#each Object.entries(block.filters) as [key, filter], i (key)}\n\t\t\t\t<Filter\n\t\t\t\t\tactive={key === block.active}\n\t\t\t\t\thasActive={block.active !== null}\n\t\t\t\t\t{filter}\n\t\t\t\t\tlink={link ? link.replace('{prefix}', key) : void 0}\n\t\t\t\t\ttitle={filter.title === '' ? phrases.filters.uncategorised : filter.title}\n\t\t\t\t\tonClick={() => handleClick(key)} />\n\t\t\t{/each}\n\t\t</div>\n\t</Block>\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { FullRoute } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport { canFocusSearch } from '../../../config/components';\n\timport Input from '../../ui/Input.svelte';\n\timport Block from '../Block.svelte';\n\n\t// Router data\n\texport let viewChanged: boolean;\n\texport let route: FullRoute;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Phrases\n\tconst text = phrases.search;\n\n\t// Current keyword\n\tlet keyword: string | undefined;\n\n\t// Variable to store last change to avoid changing keyword multiple times to same value\n\tlet lastChange: string = '';\n\n\t// Check route for keyword\n\tfunction checkRoute(route: FullRoute): boolean {\n\t\tif (\n\t\t\troute &&\n\t\t\troute.type === 'search' &&\n\t\t\troute.params &&\n\t\t\t(lastChange === '' || lastChange !== route.params.search)\n\t\t) {\n\t\t\tkeyword = route.params.search;\n\t\t\tlastChange = keyword;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// Submit form\n\tfunction submitForm() {\n\t\tif (typeof keyword === 'string') {\n\t\t\tconst value = keyword.trim().toLowerCase();\n\t\t\tif (value !== '') {\n\t\t\t\tlastChange = value;\n\t\t\t\tregistry.router.action('search', value);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Overwrite keyword on first render or when current view changes to search results\n\t$: {\n\t\tif (keyword === null) {\n\t\t\t// First render - get keyword from route\n\t\t\tkeyword = '';\n\t\t\tif (route !== null) {\n\t\t\t\t// Get keyword from current route or its parent\n\t\t\t\tif (!checkRoute(route) && route.parent) {\n\t\t\t\t\tcheckRoute(route.parent);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!viewChanged) {\n\t\t\tlastChange = '';\n\t\t} else {\n\t\t\tcheckRoute(route);\n\t\t}\n\t}\n\n\t// Focus input, use \"each\" to re-mount input when value changes\n\tlet focusInput: boolean = false;\n\t$: {\n\t\tif (canFocusSearch) {\n\t\t\tfocusInput = route\n\t\t\t\t? route.type === 'collections' || route.type === 'search'\n\t\t\t\t: false;\n\t\t}\n\t}\n</script>\n\n<Block type=\"search\" name=\"global\">\n\t<form on:submit|preventDefault={submitForm} class=\"iif-block--search-form\">\n\t\t{#each [focusInput] as autofocus, i (autofocus)}\n\t\t\t<Input\n\t\t\t\ttype=\"text\"\n\t\t\t\tbind:value={keyword}\n\t\t\t\tplaceholder={text.defaultPlaceholder}\n\t\t\t\ticon=\"search\"\n\t\t\t\t{autofocus} />\n\t\t{/each}\n\t\t<button class=\"iif-form-button iif-form-button--primary\" type=\"submit\">\n\t\t\t{text.button}\n\t\t</button>\n\t</form>\n</Block>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type {\n\t\tCollectionViewBlocks,\n\t\tPaginationBlock,\n\t\tFullRoute,\n\t\tViewBlocks,\n\t} from '@iconify/search-core';\n\timport type { SelectedIcons } from '../../../wrapper/icons';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport ContentError from '../../ui/ContentError.svelte';\n\timport Block from '../Block.svelte';\n\timport IconsContainer from './icons/Container.svelte';\n\timport IconsHeader from './icons/Header.svelte';\n\timport Pagination from './Pagination.svelte';\n\n\t// Current route\n\texport let route: FullRoute;\n\n\t// Selected icons\n\texport let selection: SelectedIcons;\n\n\t// Blocks\n\texport let blocks: ViewBlocks;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Get config\n\tconst componentsConfig = registry.config.components;\n\n\t// Get pagination\n\tlet pagination: PaginationBlock;\n\t$: {\n\t\tpagination = (blocks as CollectionViewBlocks).pagination;\n\t}\n\n\t// Generate header text\n\tfunction generateHeaderText() {\n\t\t// const pagination = blocks.pagination as ;\n\t\tconst total = pagination.length,\n\t\t\ttext = phrases.icons;\n\n\t\tif (pagination.more && total > 0) {\n\t\t\t// Search results with \"more\" button\n\t\t\treturn text.header.full;\n\t\t}\n\n\t\t// Exact phrase for count\n\t\tif (text.headerWithCount[total] !== void 0) {\n\t\t\treturn text.headerWithCount[total];\n\t\t}\n\n\t\t// Default\n\t\treturn text.header.full;\n\t}\n\n\t// Check if block is empty and get header text\n\tlet isEmpty: boolean;\n\tlet headerText: string;\n\t$: {\n\t\tisEmpty =\n\t\t\t!pagination ||\n\t\t\t!(blocks as CollectionViewBlocks).icons ||\n\t\t\t(blocks as CollectionViewBlocks).icons.icons.length < 1;\n\t\tif (!isEmpty) {\n\t\t\t// Generate header text\n\t\t\theaderText = generateHeaderText().replace(\n\t\t\t\t'{count}',\n\t\t\t\tpagination.length + ''\n\t\t\t);\n\t\t}\n\t}\n\n\t// Layout mode\n\tconst canChangeLayout = componentsConfig.toggleList;\n\tlet isList = componentsConfig.list;\n\n\tfunction changeLayout() {\n\t\tif (canChangeLayout) {\n\t\t\tisList = componentsConfig.list = !componentsConfig.list;\n\t\t\t// UIConfigEvent\n\t\t\tregistry.callback({\n\t\t\t\ttype: 'config',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Select multiple icons\n\tconst canSelectMultiple = componentsConfig.multiSelect;\n\tlet isSelecting: boolean = false;\n\n\tfunction toggleSelection() {\n\t\tisSelecting = !isSelecting;\n\t}\n</script>\n\n{#if isEmpty}\n\t<ContentError error={phrases.errors.noIconsFound} />\n{:else}\n\t<Block type=\"icons\">\n\t\t<IconsHeader\n\t\t\t{headerText}\n\t\t\t{isList}\n\t\t\t{canChangeLayout}\n\t\t\t{changeLayout}\n\t\t\t{canSelectMultiple}\n\t\t\t{isSelecting}\n\t\t\t{toggleSelection} />\n\t\t<IconsContainer {selection} {blocks} {route} {isList} {isSelecting} />\n\t\t<Pagination name=\"pagination\" block={pagination} />\n\t</Block>\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport type { PaginationBlock } from '@iconify/search-core';\n\timport { showPagination } from '@iconify/search-core';\n\timport UIIcon from '../../ui/UIIcon.svelte';\n\n\t// Block name\n\texport let name: string;\n\n\t// Block data\n\texport let block: PaginationBlock;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Class names\n\tconst baseClass = 'iif-page';\n\tconst selectedClass = baseClass + ' ' + baseClass + '--selected';\n\tconst arrowClass =\n\t\tbaseClass + ' ' + baseClass + '--arrow ' + baseClass + '--';\n\tconst moreClass = baseClass + ' ' + baseClass + '--more';\n\n\t// Get pages\n\tinterface Page {\n\t\tselected: boolean;\n\t\tdot: boolean;\n\t\tpage: number;\n\t\ttext: string;\n\t\tclassName: string;\n\t\tonClick: () => void;\n\t}\n\n\tlet pages: Page[] = [];\n\tlet prevPage: number;\n\tlet nextPage: number;\n\t$: {\n\t\tconst visiblePages = showPagination(block);\n\t\tif (visiblePages.length) {\n\t\t\t// Get previous / next pages\n\t\t\tnextPage = block.more\n\t\t\t\t? block.page + 1\n\t\t\t\t: visiblePages[visiblePages.length - 1] > block.page\n\t\t\t\t? block.page + 1\n\t\t\t\t: -1;\n\t\t\tprevPage = block.page > 0 ? block.page - 1 : -1;\n\n\t\t\t// Map pages\n\t\t\tpages = visiblePages.map((page, index) => {\n\t\t\t\tconst dot = index > 0 && visiblePages[index - 1] < page - 1;\n\t\t\t\tconst selected = page === block.page;\n\t\t\t\tconst result: Page = {\n\t\t\t\t\tselected,\n\t\t\t\t\tdot,\n\t\t\t\t\tpage,\n\t\t\t\t\ttext: page + 1 + '',\n\t\t\t\t\tclassName: selected ? selectedClass : baseClass,\n\t\t\t\t\tonClick: () => setPage(page),\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t});\n\t\t} else if (pages.length) {\n\t\t\t// Reset\n\t\t\tpages = [];\n\t\t\tprevPage = -1;\n\t\t\tnextPage = -1;\n\t\t}\n\t}\n\n\t// Change page\n\tfunction setPage(page: number | string) {\n\t\tregistry.router.action(name, page);\n\t}\n</script>\n\n{#if pages.length > 0}\n\t<div class=\"iif-pagination\">\n\t\t{#if prevPage !== -1}\n\t\t\t<a\n\t\t\t\thref=\"# \"\n\t\t\t\tclass={arrowClass + 'prev'}\n\t\t\t\ttitle={phrases.pagination.prev}\n\t\t\t\ton:click|preventDefault={() => setPage(prevPage)}>\n\t\t\t\t<UIIcon icon=\"left\">&lt;</UIIcon>\n\t\t\t</a>\n\t\t{/if}\n\t\t{#each pages as page, i (page.page)}\n\t\t\t{#if page.dot}<span>...</span>{/if}\n\t\t\t<a\n\t\t\t\thref={page.selected ? void 0 : '# '}\n\t\t\t\tclass={page.className}\n\t\t\t\ton:click|preventDefault={page.onClick}>\n\t\t\t\t{page.text}\n\t\t\t</a>\n\t\t{/each}\n\t\t{#if block.more}\n\t\t\t<a\n\t\t\t\thref=\"# \"\n\t\t\t\tclass={moreClass}\n\t\t\t\ton:click|preventDefault={() => setPage(phrases.icons.moreAsNumber ? 2 : 'more')}>\n\t\t\t\t{phrases.icons.more}\n\t\t\t</a>\n\t\t{/if}\n\t\t{#if nextPage !== -1}\n\t\t\t<a\n\t\t\t\thref=\"# \"\n\t\t\t\tclass={arrowClass + 'next'}\n\t\t\t\ttitle={phrases.pagination.next}\n\t\t\t\ton:click|preventDefault={() => setPage(nextPage)}>\n\t\t\t\t<UIIcon icon=\"right\">&gt;</UIIcon>\n\t\t\t</a>\n\t\t{/if}\n\t</div>\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport { getCollectionTitle } from '@iconify/search-core';\n\timport type { FullRoute } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Block from '../Block.svelte';\n\timport Link from './parent/Link.svelte';\n\timport type {\n\t\tFullCollectionRouteParams,\n\t\tFullCustomRouteParams,\n\t} from '@iconify/search-core/lib/route/types/params';\n\n\t// Route\n\texport let route: FullRoute;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\tconst parentPhrases = phrases.parent;\n\tconst collections = registry.collections;\n\n\tfunction handleClick(level: number) {\n\t\tregistry.router.action('parent', level);\n\t}\n\n\tinterface Entry {\n\t\tkey: string;\n\t\tlevel: number;\n\t\troute: FullRoute;\n\t\ttext: string;\n\t}\n\tlet entries: Entry[];\n\t$: {\n\t\tfunction addEntry(route: FullRoute, level: number) {\n\t\t\tconst routeParams = route.params;\n\n\t\t\t// Get text\n\t\t\tlet text = parentPhrases.default;\n\t\t\tif (\n\t\t\t\troute.type === 'custom' &&\n\t\t\t\tparentPhrases[route.params.customType] !== void 0\n\t\t\t) {\n\t\t\t\t// Text for custom view\n\t\t\t\ttext =\n\t\t\t\t\tparentPhrases[\n\t\t\t\t\t\t(routeParams as FullCustomRouteParams).customType\n\t\t\t\t\t];\n\t\t\t} else if (parentPhrases[route.type] !== void 0) {\n\t\t\t\t// Text by view type\n\t\t\t\ttext = parentPhrases[route.type];\n\n\t\t\t\tif (route.type === 'collection') {\n\t\t\t\t\t// Replace {name} with collection name\n\t\t\t\t\ttext = text.replace(\n\t\t\t\t\t\t'{name}',\n\t\t\t\t\t\tgetCollectionTitle(\n\t\t\t\t\t\t\tcollections,\n\t\t\t\t\t\t\t(routeParams as FullCollectionRouteParams).provider,\n\t\t\t\t\t\t\t(routeParams as FullCollectionRouteParams).prefix\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Generate unique key\n\t\t\tlet key = route.type + '-' + level + '-';\n\t\t\tswitch (route.type) {\n\t\t\t\tcase 'collection':\n\t\t\t\t\tkey +=\n\t\t\t\t\t\t(routeParams as FullCollectionRouteParams).provider +\n\t\t\t\t\t\t':' +\n\t\t\t\t\t\t(routeParams as FullCollectionRouteParams).prefix;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'custom':\n\t\t\t\t\tkey += (routeParams as FullCustomRouteParams).customType;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Add entry\n\t\t\tentries.unshift({\n\t\t\t\tkey,\n\t\t\t\tlevel,\n\t\t\t\troute,\n\t\t\t\ttext,\n\t\t\t});\n\n\t\t\t// Add parent route\n\t\t\tif (route.parent) {\n\t\t\t\taddEntry(route.parent, level + 1);\n\t\t\t}\n\t\t}\n\n\t\t// Find all parent routes\n\t\tentries = [];\n\t\tif (route.parent) {\n\t\t\taddEntry(route.parent, 1);\n\t\t}\n\t}\n</script>\n\n{#if entries.length > 0}\n\t<Block type=\"parent\">\n\t\t{#each entries as item, i (item.key)}\n\t\t\t<Link text={item.text} onClick={() => handleClick(item.level)} />\n\t\t{/each}\n\t</Block>\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport { getProvider } from '@iconify/search-core';\n\t// import type { FullRoute } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Tabs from '../../ui/Tabs.svelte';\n\timport Block from '../Block.svelte';\n\timport AddForm from '../../ui/AddForm.svelte';\n\timport { canAddProviders } from '../../../config/components';\n\timport type { APIProviderError } from '../../../provider/add-provider';\n\timport {\n\t\tvalidateProvider,\n\t\tretrieveProvider,\n\t} from '../../../provider/add-provider';\n\timport type { Tab } from '../../types';\n\n\t// Route\n\t// export let route: FullRoute;\n\n\t// Active provider\n\texport let activeProvider: string;\n\n\t// Available providers\n\texport let providers: string[];\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\tconst providersPhrases = phrases.providers;\n\n\tlet formVisible: boolean = false;\n\tlet status = '';\n\n\t/**\n\t * Select new provider\n\t */\n\tfunction handleClick(key: string) {\n\t\tformVisible = false;\n\t\tregistry.router.action('provider', key);\n\t}\n\n\t/**\n\t * Toggle form\n\t */\n\tfunction toggleForm() {\n\t\tformVisible = !formVisible;\n\t}\n\n\t/**\n\t * Validate possible new provider\n\t */\n\tfunction validateForm(value: string) {\n\t\tif (status !== '') {\n\t\t\t// Reset status on input change\n\t\t\tstatus = '';\n\t\t}\n\t\treturn validateProvider(value) !== null;\n\t}\n\n\t/**\n\t * Submit new provider\n\t */\n\tfunction submitForm(value: string) {\n\t\tconst host = validateProvider(value);\n\t\tif (!host) {\n\t\t\treturn;\n\t\t}\n\t\tstatus = providersPhrases.status.loading.replace('{host}', host);\n\t\tretrieveProvider(registry, host, (host, success, provider) => {\n\t\t\tif (!success) {\n\t\t\t\tconst error = provider as APIProviderError;\n\t\t\t\t// Use provider as error message\n\t\t\t\tstatus = providersPhrases.status[error].replace('{host}', host);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstatus = '';\n\t\t\tformVisible = false;\n\t\t\tregistry.router.action('provider', provider);\n\t\t});\n\t}\n\n\t// Get items\n\tlet list: Tab[];\n\t$: {\n\t\tlist = [];\n\t\tproviders.forEach((provider, index) => {\n\t\t\tconst item = getProvider(provider);\n\t\t\tif (item) {\n\t\t\t\tlist.push({\n\t\t\t\t\tkey: provider,\n\t\t\t\t\ttitle: item.title,\n\t\t\t\t\tindex,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (canAddProviders) {\n\t\t\tlist.push({\n\t\t\t\tkey: 'add',\n\t\t\t\ttitle: '',\n\t\t\t\thint: providersPhrases.add,\n\t\t\t\tonClick: toggleForm,\n\t\t\t\tright: true,\n\t\t\t\tindex: 0,\n\t\t\t\ttype: 'icon',\n\t\t\t\ticon: formVisible ? 'reset' : 'plus',\n\t\t\t});\n\t\t}\n\t}\n</script>\n\n<Block type=\"providers\">\n\t<Tabs tabs={list} selected={activeProvider} onClick={handleClick} />\n\t{#if formVisible}\n\t\t<AddForm\n\t\t\tphrases={providersPhrases.addForm}\n\t\t\tinputIcon=\"link\"\n\t\t\tbuttonIcon={true}\n\t\t\tvalue=\"\"\n\t\t\tonValidate={validateForm}\n\t\t\tonSubmit={submitForm}\n\t\t\t{status} />\n\t{/if}\n</Block>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { CollectionInfo, SearchBlock } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport { canFocusSearch } from '../../../config/components';\n\timport Input from '../../ui/Input.svelte';\n\timport Block from '../Block.svelte';\n\n\t// Block name\n\texport let name: string;\n\n\t// Block data\n\texport let block: SearchBlock;\n\n\t// Collection info when searching collection\n\texport let info: CollectionInfo | null = null;\n\n\t// Custom view type when searching custom view\n\texport let customType: string = '';\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Phrases\n\tconst searchPhrases = phrases.search;\n\n\t// Get placeholder\n\tlet placeholder: string;\n\t$: {\n\t\tif (\n\t\t\tcustomType !== '' &&\n\t\t\tsearchPhrases.placeholder[customType] !== void 0\n\t\t) {\n\t\t\tplaceholder = searchPhrases.placeholder[customType];\n\t\t} else if (\n\t\t\tinfo &&\n\t\t\tinfo.name &&\n\t\t\tsearchPhrases.placeholder.collection !== void 0\n\t\t) {\n\t\t\tplaceholder = searchPhrases.placeholder.collection.replace(\n\t\t\t\t'{name}',\n\t\t\t\tinfo.name\n\t\t\t);\n\t\t} else {\n\t\t\tplaceholder = searchPhrases.defaultPlaceholder;\n\t\t}\n\t}\n\n\t// Submit form\n\tfunction changeValue(value: string) {\n\t\tregistry.router.action(name, value.trim().toLowerCase());\n\t}\n</script>\n\n<Block type=\"search\" {name} extra=\"search-form\">\n\t<Input\n\t\ttype=\"text\"\n\t\tvalue={block.keyword}\n\t\tonInput={changeValue}\n\t\t{placeholder}\n\t\ticon=\"search\"\n\t\tautofocus={canFocusSearch} />\n\t<!-- <button class=\"iif-form-button iif-form-button--secondary\">\n\t\t{searchPhrases.button}\n\t</button> -->\n</Block>\n","<script lang=\"typescript\">\n\timport type { CollectionInfo } from '@iconify/search-core/lib/converters/info';\n\timport Item from './Item.svelte';\n\n\t// Show categories\n\texport let showCategories: boolean;\n\n\t// Category title\n\texport let category: string = '';\n\n\t// Items\n\texport let items: Record<string, CollectionInfo>;\n\n\t// API provider\n\texport let provider: string;\n\n\t// Callback for click\n\texport let onClick: (prefix: string) => void;\n</script>\n\n<div class=\"iif-collections-list-category\">\n\t{#if showCategories}\n\t\t<div class=\"iif-collections-list-title\">{category}</div>\n\t{/if}\n\t<ul class=\"iif-collections-list-items\">\n\t\t{#each Object.entries(items) as [prefix, info], i (prefix)}\n\t\t\t<Item {provider} {prefix} {info} {onClick} />\n\t\t{/each}\n\t</ul>\n</div>\n","<script lang=\"typescript\">\n\timport { onMount } from 'svelte';\n\n\t// Text to display\n\texport let text: string;\n\n\t// Display icon only after mounting component to avoid rendering it on SSR\n\tlet mounted = false;\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n\n\t// Paths for characters and scaling\n\tconst unit = 8;\n\n\tinterface ShapeData {\n\t\tpaths: string[];\n\t\twidth: number;\n\t}\n\n\tconst shapesData: Record<string, ShapeData> = {\n\t\t'0': {\n\t\t\tpaths: [\n\t\t\t\t'M24 68h8c6 0 12 6 12 12v32c0 6-6 12-12 12H16c-6 0-12-6-12-12V80c0-6 5-12 12-12h8z',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'1': {\n\t\t\tpaths: ['M4 68c6 0 12 6 12 12v44H4h24'],\n\t\t\twidth: 32,\n\t\t},\n\t\t'2': {\n\t\t\tpaths: [\n\t\t\t\t'M4 80c0-6 6-12 12-12h16c6 0 12 6 12 12v8c0 6-6 12-12 12H16c-6 0-12 6-12 12v12h40',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'3': {\n\t\t\tpaths: [\n\t\t\t\t'M4 80c0-6 6-12 12-12h16c6 0 12 6 12 12v4c0 6-6 12-12 12h-4 4c6 0 12 6 12 12v4c0 6-6 12-12 12H16c-6 0-12-6-12-12',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'4': {\n\t\t\tpaths: ['M4 68v20c0 6 6 12 12 12h16c6 0 12-6 12-12V68v56'],\n\t\t\twidth: 48,\n\t\t},\n\t\t'5': {\n\t\t\tpaths: [\n\t\t\t\t'M44 68H4v24h28c6 0 12 6 12 12v8c0 6-6 12-12 12H16c-6 0-12-6-12-12',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'6': {\n\t\t\tpaths: [\n\t\t\t\t'M44 80c0-6-6-12-12-12H16c-6 0-12 6-12 12v32c0 6 6 12 12 12h16c6 0 12-6 12-12v-8c0-6-6-12-12-12H16c-6 0-12 6-12 12',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'7': {\n\t\t\tpaths: ['M4 68h28c6 0 12 6 12 12 0 4-6.667 18.667-20 44'],\n\t\t\twidth: 48,\n\t\t},\n\t\t'8': {\n\t\t\tpaths: [\n\t\t\t\t'M24 68h8c6 0 12 6 12 12v4c0 6-6 12-12 12 6 0 12 6 12 12v4c0 6-6 12-12 12H16c-6 0-12-6-12-12v-4c0-6 6-12 12-12-6 0-12-6-12-12v-4c0-6 6-12 12-12h8z',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'9': {\n\t\t\tpaths: [\n\t\t\t\t'M44 88c0 6-6 12-12 12H16c-6 0-12-6-12-12v-8c0-6 6-12 12-12h16c6 0 12 6 12 12v32c0 6-6 12-12 12H16c-6 0-12-6-12-12',\n\t\t\t],\n\t\t\twidth: 48,\n\t\t},\n\t\t'|': {\n\t\t\tpaths: [\n\t\t\t\t// Top arrow\n\t\t\t\t'M4 48l24-24 24 24',\n\t\t\t\t// Bottom arrow\n\t\t\t\t'M4 144l24 24 24-24',\n\t\t\t\t// Middle line\n\t\t\t\t'M28 48v96',\n\t\t\t],\n\t\t\twidth: 56,\n\t\t},\n\t\t',': {\n\t\t\tpaths: ['M8 124c-2 0-4-2-4-4s2-4 4-4 4 2 4 4v8c0 2-2 6-4 8'],\n\t\t\twidth: 16,\n\t\t},\n\t\t'.': {\n\t\t\tpaths: ['M8 116c2 0 4 2 4 4s-2 4-4 4-4-2-4-4 2-4 4-4z'],\n\t\t\twidth: 16,\n\t\t},\n\t};\n\n\tinterface IconHeightOptions {\n\t\tline?: boolean;\n\t\tanimate?: boolean;\n\t\theight?: number;\n\t}\n\n\tconst defaultOptions: Required<IconHeightOptions> = {\n\t\tline: false,\n\t\tanimate: false,\n\t\theight: 24,\n\t};\n\n\tfunction iconHeight(text: string, options?: IconHeightOptions): string {\n\t\tlet width = unit,\n\t\t\theight = 24 * unit,\n\t\t\tsvg = '',\n\t\t\ti: number,\n\t\t\tchar: string,\n\t\t\titem: ShapeData,\n\t\t\tscale: number;\n\n\t\t// Convert from number\n\t\tif (typeof text === 'number') {\n\t\t\ttext = '' + text;\n\t\t}\n\n\t\t// Set options\n\t\tconst allOptions: Required<IconHeightOptions> = Object.assign(\n\t\t\t{},\n\t\t\tdefaultOptions,\n\t\t\ttypeof options === 'object' ? options : {}\n\t\t);\n\n\t\t// Get scale\n\t\tscale = height / allOptions.height;\n\n\t\t// Add 1 unit for line\n\t\tif (allOptions.line) {\n\t\t\twidth += unit;\n\t\t}\n\n\t\t// Parse each character\n\t\tfor (i = 0; i < text.length; i++) {\n\t\t\tchar = text.slice(i, i + 1);\n\t\t\tif (shapesData[char] === void 0) {\n\t\t\t\tif (char === ' ') {\n\t\t\t\t\twidth += unit * 2;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (char === '|') {\n\t\t\t\t// Force line\n\t\t\t\tallOptions.line = true;\n\t\t\t}\n\n\t\t\titem = shapesData[char];\n\t\t\tif (width > unit) {\n\t\t\t\tsvg += '<g transform=\"translate(' + width + ')\">';\n\t\t\t}\n\t\t\titem.paths.forEach((path) => {\n\t\t\t\tsvg += '<path d=\"' + path + '\" />';\n\t\t\t});\n\t\t\tif (width > unit) {\n\t\t\t\tsvg += '</g>';\n\t\t\t}\n\n\t\t\twidth += item.width + unit;\n\t\t}\n\n\t\t// Add line\n\t\tif (allOptions.line) {\n\t\t\tsvg +=\n\t\t\t\t'<path d=\"M' +\n\t\t\t\tunit / 2 +\n\t\t\t\t' ' +\n\t\t\t\tunit / 2 +\n\t\t\t\t'h' +\n\t\t\t\t(width - unit) +\n\t\t\t\t'\" />';\n\t\t\tsvg +=\n\t\t\t\t'<path d=\"M' +\n\t\t\t\tunit / 2 +\n\t\t\t\t' ' +\n\t\t\t\t(height - unit / 2) +\n\t\t\t\t'h' +\n\t\t\t\t(width - unit) +\n\t\t\t\t'\" />';\n\t\t}\n\n\t\t// Wrap in group\n\t\tsvg =\n\t\t\t'<g stroke-width=\"' +\n\t\t\tunit +\n\t\t\t'\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">' +\n\t\t\tsvg +\n\t\t\t'</g>';\n\n\t\t// Wrap in <svg>\n\t\treturn (\n\t\t\t'<svg xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" width=\"' +\n\t\t\twidth / scale +\n\t\t\t'\" height=\"' +\n\t\t\theight / scale +\n\t\t\t'\" viewBox=\"0 0 ' +\n\t\t\twidth +\n\t\t\t' ' +\n\t\t\theight +\n\t\t\t'\"> ' +\n\t\t\tsvg +\n\t\t\t'</svg>'\n\t\t);\n\t}\n\n\t// Convert to HTML\n\tlet html: string;\n\t$: {\n\t\thtml = iconHeight(text);\n\t}\n</script>\n\n{#if mounted}\n\t{@html html}\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport Icon from '@iconify/svelte';\n\timport { getProvider } from '@iconify/search-core';\n\timport type { CollectionInfo } from '@iconify/search-core/lib/converters/info';\n\timport type { WrappedRegistry } from '../../../../wrapper/registry';\n\timport {\n\t\tmaxIndex,\n\t\tshowCollectionAuthorLink,\n\t\tcollectionClickable,\n\t} from '../../../../config/theme';\n\timport { phrases } from '../../../../config/phrases';\n\timport Height from './Height.svelte';\n\n\tconst baseClass = 'iif-collection';\n\n\t// API provider\n\texport let provider: string;\n\n\t// Prefix\n\texport let prefix: string;\n\n\t// Information\n\texport let info: CollectionInfo;\n\n\t// Callback for click\n\texport let onClick: (prefix: string) => void;\n\n\t// Get registry instance\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// on:click event for external links\n\tconst onExternalClick = registry.link;\n\n\t// Get link\n\tlet link: string;\n\t$: {\n\t\tconst providerData = getProvider(provider);\n\t\tif (providerData) {\n\t\t\tlink = providerData.links.collection.replace('{prefix}', prefix);\n\t\t\tif (link === '') {\n\t\t\t\tlink = '#';\n\t\t\t}\n\t\t} else {\n\t\t\tlink = '#';\n\t\t}\n\t}\n\n\t// Get container class name\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t'--prefix--' +\n\t\t\tprefix +\n\t\t\t(provider === ''\n\t\t\t\t? ''\n\t\t\t\t: ' ' + baseClass + '--provider--' + provider) +\n\t\t\t(collectionClickable ? ' ' + baseClass + '--clickable' : '') +\n\t\t\t(info.index\n\t\t\t\t? ' ' + baseClass + '--' + (info.index % maxIndex)\n\t\t\t\t: '');\n\t}\n\n\t// Samples\n\tconst samples = getSamples();\n\tconst samplesHeight = getSamplesHeight();\n\n\t// Height\n\tconst height =\n\t\t'|' +\n\t\t(typeof info.height !== 'object'\n\t\t\t? info.height\n\t\t\t: info.height.join(', '));\n\n\t// Block was clicked\n\tfunction handleBlockClick(event: MouseEvent) {\n\t\tif (collectionClickable) {\n\t\t\tevent.preventDefault();\n\t\t\tonClick(prefix);\n\t\t}\n\t}\n\n\tfunction getSamplesHeight() {\n\t\tif (info.displayHeight) {\n\t\t\treturn info.displayHeight;\n\t\t} else if (typeof info.height === 'number') {\n\t\t\treturn info.height;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction getSamples() {\n\t\tif (info.samples instanceof Array) {\n\t\t\treturn info.samples.slice(0, 3);\n\t\t}\n\t\treturn [];\n\t}\n</script>\n\n<li class={className} on:click={handleBlockClick}>\n\t<div class=\"iif-collection-text\">\n\t\t<a href={link} on:click|preventDefault={() => onClick(prefix)}>\n\t\t\t{info.name}\n\t\t</a>\n\t\t{#if info.author}\n\t\t\t<small>\n\t\t\t\t{phrases.collection.by}\n\t\t\t\t{#if showCollectionAuthorLink && info.author.url}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={info.author.url}\n\t\t\t\t\t\ton:click={onExternalClick}\n\t\t\t\t\t\ttarget=\"_blank\">{info.author.name}</a>\n\t\t\t\t{:else}{info.author.name}{/if}\n\t\t\t</small>\n\t\t{/if}\n\t</div>\n\t<div class=\"iif-collection-data\">\n\t\t{#if samples.length > 0}\n\t\t\t<div\n\t\t\t\tclass=\"iif-collection-samples{samplesHeight ? ' iif-collection-samples--' + samplesHeight : ''}\">\n\t\t\t\t{#each samples as sample}\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tclass=\"iconify\"\n\t\t\t\t\t\ticon={(provider === '' ? '' : '@' + provider + ':') + prefix + ':' + sample} />\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t{/if}\n\t\t{#if info.height}\n\t\t\t<div class=\"iif-collection-height\">\n\t\t\t\t<Height text={height} />\n\t\t\t</div>\n\t\t{/if}\n\t\t<div class=\"iif-collection-total\">\n\t\t\t<Height text={info.total + ''} />\n\t\t</div>\n\t</div>\n</li>\n","<script lang=\"typescript\">\n\timport { getContext, onMount } from 'svelte';\n\timport { getIcon, loadIcons } from '@iconify/svelte';\n\timport {\n\t\ticonToString,\n\t\tcloneObject,\n\t\tcompareObjects,\n\t\tgetProvider,\n\t\tViewBlocks,\n\t\tIcon,\n\t\tFullRoute,\n\t\tSearchViewBlocks,\n\t\tCollectionViewBlocks,\n\t\tFiltersBlock,\n\t} from '@iconify/search-core';\n\timport { onDestroy } from 'svelte';\n\timport type { SelectedIcons } from '../../../../wrapper/icons';\n\timport { isIconSelected } from '../../../../wrapper/icons';\n\timport type { WrappedRegistry } from '../../../../wrapper/registry';\n\timport { phrases } from '../../../../config/phrases';\n\timport IconList from './IconList.svelte';\n\timport IconGrid from './IconGrid.svelte';\n\timport type { IconsListFilter } from '../../../types';\n\n\t// Current route\n\texport let route: FullRoute;\n\n\t// Selected icons\n\texport let selection: SelectedIcons;\n\n\t// Blocks to render\n\texport let blocks: ViewBlocks;\n\n\t// Layout\n\texport let isList: boolean;\n\n\t// Selecting multiple icons\n\texport let isSelecting: boolean;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Base class name\n\tconst baseClass = 'iif-icons';\n\n\t// List of keys used for filters. Same keys are used in both blocks and icon.\n\tconst filterKeys: (keyof CollectionViewBlocks & keyof Icon)[] = [\n\t\t'tags',\n\t\t'themePrefixes',\n\t\t'themeSuffixes',\n\t];\n\n\t// Tooltip\n\tconst tooltipText = phrases.icons.tooltip;\n\n\t// Show prefix\n\tlet showPrefix: boolean;\n\t$: {\n\t\tshowPrefix = route.type !== 'collection';\n\t}\n\n\t// Event listener for loading icons, which should be loaded only when component is mounted\n\t// 0 = not mounted, 1 = just mounted, 2 = has been mounted\n\tlet mounted = 0;\n\tlet abortLoader: (() => void) | null = null;\n\tlet updateCounter: number = 0;\n\n\tconst loadingEvent = () => {\n\t\tupdateCounter++;\n\t};\n\n\tonMount(() => {\n\t\tmounted = 1;\n\t});\n\n\t// Get filters to list view\n\tinterface IncompleteGridItem {\n\t\tname: string; // Icon name\n\t\ttooltip: string;\n\t\ticon: Icon;\n\t\texists: boolean;\n\t\tlink: string;\n\t\tselected: boolean;\n\t}\n\tinterface IncompleteListItem extends IncompleteGridItem {\n\t\ttext: string; // Icon name as text (could be shortened, used in list view)\n\t}\n\tinterface ListItem extends IncompleteListItem {\n\t\tfilters: IconsListFilter[];\n\t}\n\n\tfunction getFilters(item: ListItem): IconsListFilter[] {\n\t\tlet filters: IconsListFilter[] = [];\n\t\tconst icon = item.icon;\n\n\t\t// Filters\n\t\tfilterKeys.forEach((k) => {\n\t\t\tconst key = k as keyof CollectionViewBlocks & keyof Icon;\n\t\t\tif (!(blocks as CollectionViewBlocks)[key]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (icon[key] === void 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst block = (blocks as CollectionViewBlocks)[key] as FiltersBlock;\n\t\t\tconst active = block.active;\n\t\t\tconst iconValue = icon[key];\n\n\t\t\t(typeof iconValue === 'string'\n\t\t\t\t? [iconValue]\n\t\t\t\t: iconValue instanceof Array\n\t\t\t\t? iconValue\n\t\t\t\t: []\n\t\t\t).forEach((value) => {\n\t\t\t\tif (value === active) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (block.filters[value] !== void 0) {\n\t\t\t\t\tfilters.push({\n\t\t\t\t\t\taction: key,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\titem: block.filters[value],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Icon sets\n\t\tif (route.type === 'search') {\n\t\t\tconst searchBlocks = blocks as SearchViewBlocks;\n\t\t\tif (searchBlocks.collections) {\n\t\t\t\tconst prefix = item.icon.prefix;\n\t\t\t\tif (searchBlocks.collections.filters[prefix]) {\n\t\t\t\t\tfilters.push({\n\t\t\t\t\t\taction: 'collections',\n\t\t\t\t\t\tvalue: prefix,\n\t\t\t\t\t\titem: searchBlocks.collections.filters[prefix],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\t// Filter icons\n\tlet parsedIcons: ListItem[] = [];\n\t$: {\n\t\t// Mention updateCounter to make sure this code is ran\n\t\tupdateCounter;\n\n\t\t// Reset icons list\n\t\tlet newParsedIcons: ListItem[] = [];\n\n\t\t// Parse icons\n\t\tlet pending: string[] = [];\n\n\t\t// Map old icons, but only if this code has already been ran\n\t\tconst oldKeys = Object.create(null);\n\t\tif (mounted === 2) {\n\t\t\tparsedIcons.forEach((icon) => {\n\t\t\t\toldKeys[icon.name] = icon;\n\t\t\t});\n\t\t} else if (mounted === 1) {\n\t\t\t// Mark as mounted + code ran once\n\t\t\tmounted = 2;\n\t\t}\n\n\t\tlet updated = false;\n\t\t(blocks as CollectionViewBlocks).icons.icons.forEach((icon) => {\n\t\t\tconst name = iconToString(icon);\n\t\t\tconst data = getIcon(name);\n\t\t\tconst exists = data !== null;\n\n\t\t\t// Icon name, used in list view and tooltip\n\t\t\tconst text = showPrefix ? name : icon.name;\n\n\t\t\t// Tooltip\n\t\t\tlet tooltip = text;\n\t\t\tif (data) {\n\t\t\t\ttooltip += tooltipText.size.replace(\n\t\t\t\t\t'{size}',\n\t\t\t\t\tdata.width + ' x ' + data.height\n\t\t\t\t);\n\t\t\t\ttooltip += tooltipText.length.replace(\n\t\t\t\t\t'{length}',\n\t\t\t\t\tdata.body.length + ''\n\t\t\t\t);\n\t\t\t\tif (icon.chars !== void 0) {\n\t\t\t\t\ttooltip += tooltipText.char.replace(\n\t\t\t\t\t\t'{char}',\n\t\t\t\t\t\ttypeof icon.chars === 'string'\n\t\t\t\t\t\t\t? icon.chars\n\t\t\t\t\t\t\t: icon.chars.join(', ')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\ttooltip +=\n\t\t\t\t\ttooltipText[\n\t\t\t\t\t\tdata.body.indexOf('currentColor') === -1\n\t\t\t\t\t\t\t? 'colorful'\n\t\t\t\t\t\t\t: 'colorless'\n\t\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Link\n\t\t\tconst providerData = getProvider(icon.provider);\n\t\t\tlet link;\n\t\t\tif (providerData) {\n\t\t\t\tlink = providerData.links.icon\n\t\t\t\t\t.replace('{prefix}', icon.prefix)\n\t\t\t\t\t.replace('{name}', icon.name);\n\t\t\t\tif (link === '') {\n\t\t\t\t\tlink = '#';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlink = '#';\n\t\t\t}\n\n\t\t\t// Item\n\t\t\tlet newItem: IncompleteListItem = {\n\t\t\t\tname,\n\t\t\t\ttext,\n\t\t\t\ttooltip,\n\t\t\t\ticon: cloneObject(icon) as typeof icon,\n\t\t\t\texists,\n\t\t\t\tlink,\n\t\t\t\tselected: isIconSelected(selection, icon),\n\t\t\t};\n\t\t\tlet item = newItem as ListItem;\n\n\t\t\tif (isList) {\n\t\t\t\t// Add filters\n\t\t\t\titem.filters = getFilters(item);\n\t\t\t}\n\n\t\t\t// Check if item has been updated, use old item if not to avoid re-rendering child component\n\t\t\tif (oldKeys[name] === void 0) {\n\t\t\t\tupdated = true;\n\t\t\t\tif (!exists) {\n\t\t\t\t\tpending.push(name);\n\t\t\t\t}\n\t\t\t} else if (!compareObjects(oldKeys[name], item)) {\n\t\t\t\tupdated = true;\n\t\t\t} else {\n\t\t\t\titem = oldKeys[name];\n\t\t\t}\n\n\t\t\tnewParsedIcons.push(item);\n\t\t});\n\n\t\t// Load pending images, but only after component has been mounted\n\t\tif (mounted > 0 && pending.length) {\n\t\t\tif (abortLoader !== null) {\n\t\t\t\tabortLoader();\n\t\t\t}\n\t\t\tabortLoader = loadIcons(pending, loadingEvent);\n\t\t}\n\n\t\t// Overwrite parseIcons variable only if something was updated, triggering component re-render\n\t\t// Also compare length in case if new set is subset of old set\n\t\tif (updated || parsedIcons.length !== newParsedIcons.length) {\n\t\t\tparsedIcons = newParsedIcons;\n\t\t}\n\t}\n\n\t// Icon or filter was clicked\n\tfunction onClick(event: string, value: string | Icon) {\n\t\tif (event === 'toggle') {\n\t\t\t// UISelectionEvent\n\t\t\tregistry.callback({\n\t\t\t\ttype: 'selection',\n\t\t\t\ticon: value,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (event === 'select' || event === 'deselect') {\n\t\t\t// UISelectionEvent\n\t\t\tregistry.callback({\n\t\t\t\ttype: 'selection',\n\t\t\t\ticon: value,\n\t\t\t\tselected: event === 'select',\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tregistry.router.action(event, value as string);\n\t}\n\n\t// Remove event listener\n\tonDestroy(() => {\n\t\tif (abortLoader !== null) {\n\t\t\tabortLoader();\n\t\t\tabortLoader = null;\n\t\t}\n\t});\n</script>\n\n<div\n\tclass={baseClass + ' ' + baseClass + (isList ? '--list' : '--grid') + (isSelecting ? ' ' + baseClass + '--selecting' : '')}>\n\t<ul>\n\t\t{#each parsedIcons as item, i (item.name)}\n\t\t\t{#if isList}\n\t\t\t\t<IconList {...item} {onClick} {isSelecting} />\n\t\t\t{:else}\n\t\t\t\t<IconGrid {...item} {onClick} {isSelecting} />\n\t\t\t{/if}\n\t\t{/each}\n\t</ul>\n</div>\n","<script lang=\"typescript\">\n\timport { onMount } from 'svelte';\n\timport { phrases } from '../../../../config/phrases';\n\timport type { IconsListMode } from '../../../types';\n\timport IconButton from '../../../ui/IconButton.svelte';\n\n\t// Text\n\texport let headerText: string;\n\n\t// Mode\n\texport let isList: boolean;\n\n\t// Can toggle mode?\n\texport let canChangeLayout: boolean;\n\n\t// Callback\n\texport let changeLayout: () => void;\n\n\t// Can select multiple icons?\n\texport let canSelectMultiple: boolean;\n\n\t// Selecting icons\n\texport let isSelecting: boolean;\n\n\t// Callback\n\texport let toggleSelection: () => void;\n\n\t// Show buttons only when mounted to avoid rendering buttons for SSR\n\tlet mounted = false;\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n\n\t// Text\n\tconst text = phrases.icons.header;\n\n\t// Modes\n\tlet mode: IconsListMode;\n\t$: {\n\t\tmode = isList ? 'grid' : 'list';\n\t}\n\n\t// Selection icon\n\tlet selectionIcon: string;\n\t$: {\n\t\tselectionIcon = 'check-list' + (isSelecting ? '-checked' : '');\n\t}\n</script>\n\n<div class=\"iif-icons-header\">\n\t<div class=\"iif-icons-header-text\">{headerText}</div>\n\t{#if mounted && (canChangeLayout || canSelectMultiple)}\n\t\t<div class=\"iif-icons-header-modes\">\n\t\t\t{#if canSelectMultiple}\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={selectionIcon}\n\t\t\t\t\tonClick={toggleSelection}\n\t\t\t\t\ttitle={text.select} />\n\t\t\t{/if}\n\t\t\t{#if canChangeLayout}\n\t\t\t\t{#each [mode] as icon (icon)}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\t{icon}\n\t\t\t\t\t\tonClick={changeLayout}\n\t\t\t\t\t\ttitle={text.modes[icon]} />\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</div>\n\t{/if}\n</div>\n","<script lang=\"typescript\">\n\timport IconComponent from '@iconify/svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport UIIcon from '../../../ui/UIIcon.svelte';\n\n\t// Icon name\n\texport let name: string;\n\n\t// Tooltip\n\texport let tooltip: string;\n\n\t// Text\n\t// export let text: string;\n\n\t// Icon\n\texport let icon: Icon;\n\n\t// Loaded\n\texport let exists: boolean;\n\n\t// Selected\n\texport let selected: boolean;\n\n\t// Link\n\texport let link: string;\n\n\t// Callback (Router action)\n\texport let onClick: (event: string, value: string | Icon) => void;\n\n\t// Selecting multiple icons\n\texport let isSelecting: boolean;\n\n\t// Get class name\n\tconst baseClass = 'iif-icon-grid';\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t(exists ? '--loaded' : '--loading') +\n\t\t\t(selected ? ' ' + baseClass + '--selected' : '');\n\t}\n\n\t// Select icon\n\tfunction handleClick() {\n\t\tonClick(\n\t\t\tisSelecting ? (selected ? 'deselect' : 'select') : 'toggle',\n\t\t\ticon\n\t\t);\n\t}\n</script>\n\n<li class={className}>\n\t<a\n\t\thref={link}\n\t\ttarget=\"_blank\"\n\t\ttitle={tooltip}\n\t\ton:click|preventDefault={handleClick}>\n\t\t{#if exists}\n\t\t\t<IconComponent icon={name} width=\"1em\" height=\"1em\" />\n\t\t\t{#if isSelecting}\n\t\t\t\t<UIIcon\n\t\t\t\t\ticon={selected ? 'selecting-selected' : 'selecting-unselected'} />\n\t\t\t{/if}\n\t\t{:else}<span class=\"iif-icon-loading\">{icon.name}</span>{/if}\n\t</a>\n</li>\n","<script lang=\"typescript\">\n\timport IconComponent, { getIcon } from '@iconify/svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport type { IconifyIcon } from '@iconify/types';\n\timport { phrases } from '../../../../config/phrases';\n\timport type { IconsListFilter } from '../../../types';\n\timport UIIcon from '../../../ui/UIIcon.svelte';\n\timport Filter from '../../../ui/Filter.svelte';\n\n\t// Icon name\n\texport let name: string;\n\n\t// Tooltip\n\texport let tooltip: string;\n\n\t// Text\n\texport let text: string;\n\n\t// Icon\n\texport let icon: Icon;\n\n\t// Loaded\n\texport let exists: boolean;\n\n\t// Selected\n\texport let selected: boolean;\n\n\t// Link\n\texport let link: string;\n\n\t// Callback (Router action)\n\texport let onClick: (event: string, value: string | Icon) => void;\n\n\t// Selecting multiple icons\n\texport let isSelecting: boolean;\n\n\t// List of filters\n\texport let filters: IconsListFilter[];\n\n\t// Get class name\n\tconst baseClass = 'iif-icon-list';\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t(exists ? '--loaded' : '--loading') +\n\t\t\t(selected ? ' ' + baseClass + '--selected' : '');\n\t}\n\n\t// Get size\n\tlet size: IconifyIcon | null = null;\n\t$: {\n\t\tconst newSize = exists ? getIcon(name) : null;\n\t\tif (newSize !== size) {\n\t\t\tsize = newSize;\n\t\t}\n\t}\n\n\t// Select icon\n\tfunction handleClick() {\n\t\tonClick(\n\t\t\tisSelecting ? (selected ? 'deselect' : 'select') : 'toggle',\n\t\t\ticon\n\t\t);\n\t}\n</script>\n\n<li class={className}>\n\t<div class=\"iif-icon-sample\">\n\t\t<a\n\t\t\thref={link}\n\t\t\ttarget=\"_blank\"\n\t\t\ttitle={tooltip}\n\t\t\ton:click|preventDefault={handleClick}>\n\t\t\t{#if exists}\n\t\t\t\t<IconComponent icon={name} width=\"1em\" height=\"1em\" />\n\t\t\t\t{#if isSelecting}\n\t\t\t\t\t<UIIcon\n\t\t\t\t\t\ticon={selected ? 'selecting-selected' : 'selecting-unselected'} />\n\t\t\t\t{/if}\n\t\t\t{/if}\n\t\t</a>\n\t</div>\n\n\t<div class={'iif-icon-data iif-icon-data--filters--' + filters.length}>\n\t\t<a\n\t\t\tclass=\"iif-icon-name\"\n\t\t\thref={link}\n\t\t\ttitle={tooltip}\n\t\t\ton:click|preventDefault={handleClick}>\n\t\t\t{text}\n\t\t</a>\n\t\t{#if size}\n\t\t\t<div class=\"iif-icon-size\">{size.width} x {size.height}</div>\n\t\t{/if}\n\t\t{#if filters}\n\t\t\t{#each filters as filter}\n\t\t\t\t<Filter\n\t\t\t\t\tfilter={filter.item}\n\t\t\t\t\ttitle={filter.item.title === '' ? phrases.filters.uncategorised : filter.item.title}\n\t\t\t\t\tonClick={() => onClick(filter.action, filter.value)} />\n\t\t\t{/each}\n\t\t{/if}\n\t</div>\n</li>\n","<script lang=\"typescript\">\n\timport UIIcon from '../../../ui/UIIcon.svelte';\n\n\t// Link text\n\texport let text: string;\n\n\t// Depth level\n\t// export let level: number;\n\n\t// Callback\n\texport let onClick: () => void;\n</script>\n\n<div class=\"iif-parent-link\">\n\t<UIIcon icon=\"parent\" />\n\t<a href=\"# \" on:click|preventDefault={onClick}>{text}</a>\n</div>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type {\n\t\tIcon,\n\t\tFullRoute,\n\t\tCollectionInfoBlock,\n\t} from '@iconify/search-core';\n\timport { getCollectionInfo } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport {\n\t\tshowCollectionInfoBlock,\n\t\tshowButtons,\n\t\tshowInfoInFooter,\n\t\tshowCustomisatons,\n\t\tshowCode,\n\t\tcustomiseInline,\n\t} from '../../../config/components';\n\timport Block from '../Block.svelte';\n\timport ButtonsContainer from './parts/Buttons.svelte';\n\timport PropertiesContainer from './parts/Properties.svelte';\n\timport Sample from './parts/samples/Full.svelte';\n\timport InlineSample from './parts/samples/Inline.svelte';\n\timport IconsList from './parts/Icons.svelte';\n\timport FooterBlock from './parts/FooterBlock.svelte';\n\timport InfoBlock from '../blocks/CollectionInfo.svelte';\n\n\t/* Various components for icon name. Uncomment one you want to use */\n\timport IconName from './parts/name/Simple.svelte';\n\t// import IconName from './parts/name/SimpleEditable.svelte';\n\t// import IconName from './parts/name/Block.svelte';\n\n\t/* Switch to Empty.svelte if you do not want to show code samples block. Also see ../../../config/components.ts */\n\timport CodeBlock from './parts/code/Container.svelte';\n\t// import CodeBlock from './parts/Empty.svelte';\n\n\t// Selected icons\n\texport let icons: Icon[];\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Customisations\n\texport let customisations: IconCustomisations;\n\n\t// Current route\n\texport let route: FullRoute;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Check if icons are selected, get first icon\n\tlet icon: Icon | null;\n\tlet hasIcons: boolean;\n\t$: {\n\t\thasIcons = icons.length > 0;\n\t\ticon = icons.length === 1 ? icons[0] : null;\n\t}\n\n\t// Check if info block should be shown\n\tlet infoBlock: CollectionInfoBlock | null;\n\tlet infoBlockTitle: string;\n\t$: {\n\t\tlet showInfo = true;\n\n\t\t// Get provider and prefix for info\n\t\tlet provider = '';\n\t\tlet prefix = '';\n\t\tif (!showInfoInFooter || !icons.length) {\n\t\t\t// Disabled\n\t\t\tshowInfo = false;\n\t\t} else if (icon) {\n\t\t\t// One icon is selected: show info for that icon\n\t\t\tprovider = icon.provider;\n\t\t\tprefix = icon.prefix;\n\t\t} else {\n\t\t\t// Multiple icons are selected: show info if all of them have the same prefix\n\t\t\tfor (let i = 0; i < icons.length; i++) {\n\t\t\t\tconst icon = icons[i];\n\t\t\t\tif (!i) {\n\t\t\t\t\tprefix = icon.prefix;\n\t\t\t\t\tprovider = icon.provider;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (icon.provider !== provider || icon.prefix !== prefix) {\n\t\t\t\t\tshowInfo = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check route\n\t\tif (\n\t\t\tshowCollectionInfoBlock &&\n\t\t\tshowInfo &&\n\t\t\troute.type === 'collection' &&\n\t\t\tprovider === route.params.provider &&\n\t\t\tprefix === route.params.prefix\n\t\t) {\n\t\t\t// Already showing info for the same icon set above icons list\n\t\t\tshowInfo = false;\n\t\t}\n\n\t\t// Get data\n\t\tif (showInfo) {\n\t\t\tconst info = getCollectionInfo(\n\t\t\t\tregistry.collections,\n\t\t\t\tprovider,\n\t\t\t\tprefix\n\t\t\t);\n\t\t\tif (!info) {\n\t\t\t\tinfoBlock = null;\n\t\t\t\tinfoBlockTitle = '';\n\t\t\t} else {\n\t\t\t\tinfoBlock = {\n\t\t\t\t\ttype: 'collection-info',\n\t\t\t\t\tprefix,\n\t\t\t\t\tinfo,\n\t\t\t\t};\n\t\t\t\tinfoBlockTitle = phrases.footer.about.replace(\n\t\t\t\t\t'{title}',\n\t\t\t\t\tinfo.name\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tinfoBlock = null;\n\t\t\tinfoBlockTitle = '';\n\t\t}\n\t}\n</script>\n\n{#if showButtons || hasIcons}\n\t<Block type=\"footer\">\n\t\t<div class={icon ? 'iif-footer-full' : ''}>\n\t\t\t{#if icon}\n\t\t\t\t{#if customiseInline && customisations.inline}\n\t\t\t\t\t<InlineSample {icon} {customisations} />\n\t\t\t\t{:else}\n\t\t\t\t\t<Sample {icon} {customisations} />\n\t\t\t\t{/if}\n\t\t\t{/if}\n\t\t\t<div class={icon ? 'iif-footer-full-content' : ''}>\n\t\t\t\t{#if icon}\n\t\t\t\t\t<IconName {icon} {route} />\n\t\t\t\t{:else if hasIcons}\n\t\t\t\t\t<IconsList {route} {icons} {customisations} />\n\t\t\t\t{/if}\n\t\t\t\t{#if infoBlock}\n\t\t\t\t\t<FooterBlock name=\"info\" title={infoBlockTitle}>\n\t\t\t\t\t\t<InfoBlock\n\t\t\t\t\t\t\tname=\"info\"\n\t\t\t\t\t\t\tblock={infoBlock}\n\t\t\t\t\t\t\tshort={true}\n\t\t\t\t\t\t\tshowTitle={false} />\n\t\t\t\t\t</FooterBlock>\n\t\t\t\t{/if}\n\t\t\t\t{#if showCustomisatons && hasIcons}\n\t\t\t\t\t<PropertiesContainer {icons} {customise} {customisations} />\n\t\t\t\t{/if}\n\t\t\t\t{#if showCode && icon}\n\t\t\t\t\t<CodeBlock {icon} {customisations} />\n\t\t\t\t{/if}\n\t\t\t\t{#if showButtons}\n\t\t\t\t\t<ButtonsContainer {icons} {route} />\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t</Block>\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { Icon, FullRoute } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../../wrapper/registry';\n\timport type {\n\t\tFooterButton,\n\t\tFooterButtonCallbackParams,\n\t} from '../../../../footer/types';\n\timport { phrases } from '../../../../config/phrases';\n\timport { footerButtons } from '../../../../config/components';\n\timport UIIcon from '../../../ui/UIIcon.svelte';\n\n\t// Selected icons\n\texport let icons: Icon[];\n\n\t// Current route\n\texport let route: FullRoute;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Custom properties for buttons\n\tinterface ListItem extends FooterButton {\n\t\tkey: string;\n\t\tclassName: string;\n\t}\n\tconst baseClassName = 'iif-form-button';\n\tconst buttonPhrases = phrases.footerButtons;\n\n\t/**\n\t * Parameters for callback\n\t */\n\tfunction params(\n\t\tkey: string,\n\t\tbutton: FooterButton\n\t): FooterButtonCallbackParams {\n\t\treturn {\n\t\t\tkey,\n\t\t\tbutton,\n\t\t\tregistry,\n\t\t\ticons,\n\t\t\troute,\n\t\t};\n\t}\n\n\t/**\n\t * Get button text\n\t */\n\tfunction text(item: ListItem): string {\n\t\tif (typeof item.text === 'function') {\n\t\t\treturn item.text(params(item.key, item));\n\t\t}\n\n\t\t// Text as string\n\t\tif (typeof item.text === 'string') {\n\t\t\treturn item.text;\n\t\t}\n\n\t\t// Use key: test phrases, then capitalize key\n\t\tconst key = item.key;\n\t\tif (typeof buttonPhrases[key] === 'string') {\n\t\t\treturn buttonPhrases[key];\n\t\t}\n\n\t\treturn key\n\t\t\t.split('-')\n\t\t\t.map((str) => str.slice(0, 1).toUpperCase() + str.slice(1))\n\t\t\t.join(' ');\n\t}\n\n\t// Change buttons to array, add unique key and generate class name\n\tconst items: ListItem[] = Object.keys(footerButtons).map((key) => {\n\t\tconst button = footerButtons[key];\n\n\t\tconst result: ListItem = {\n\t\t\t...button,\n\t\t\tkey,\n\t\t\tclassName:\n\t\t\t\tbaseClassName +\n\t\t\t\t(button.type ? ' ' + baseClassName + '--' + button.type : '') +\n\t\t\t\t(button.icon ? ' ' + baseClassName + '--with-icon' : ''),\n\t\t};\n\t\treturn result;\n\t});\n\n\t// TypeScript guard\n\tfunction assertNever(v: never): void {\n\t\t//\n\t}\n\n\tlet buttons: ListItem[];\n\tlet iconName: string;\n\t$: {\n\t\tconst total = icons.length;\n\n\t\t// Filter buttons\n\t\tbuttons = items.filter((item) => {\n\t\t\tconst display = item.display;\n\t\t\tswitch (display) {\n\t\t\t\tcase void 0:\n\t\t\t\tcase 'always':\n\t\t\t\t\treturn true;\n\n\t\t\t\tcase 'empty':\n\t\t\t\t\treturn total === 0;\n\n\t\t\t\tcase 'icons':\n\t\t\t\t\treturn total > 0;\n\n\t\t\t\tcase 'one-icon':\n\t\t\t\t\treturn total === 1;\n\n\t\t\t\tcase 'many-icons':\n\t\t\t\t\treturn total > 1;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (typeof display === 'function') {\n\t\t\t\t\t\treturn display(params(item.key, item));\n\t\t\t\t\t}\n\t\t\t\t\tassertNever(display);\n\t\t\t}\n\t\t});\n\n\t\t// Get icon name for first icon\n\t\ticonName = total > 0 ? iconToString(icons[0]) : 'icon';\n\t}\n\n\tfunction onClick(button: string) {\n\t\t// UIFooterButtonEvent\n\t\tregistry.callback({\n\t\t\ttype: 'button',\n\t\t\tbutton,\n\t\t});\n\t}\n</script>\n\n<div class=\"iif-footer-buttons\">\n\t{#each buttons as item, i (item.key)}\n\t\t<button\n\t\t\tclass={item.className}\n\t\t\ton:click|preventDefault={() => onClick(item.key)}>\n\t\t\t{#if item.icon}\n\t\t\t\t<UIIcon icon={item.icon} />\n\t\t\t{/if}\n\t\t\t{text(item)\n\t\t\t\t.replace('{icon}', iconName)\n\t\t\t\t.replace('{count}', icons.length + '')}\n\t\t</button>\n\t{/each}\n</div>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { WrappedRegistry } from '../../../../wrapper/registry';\n\timport { canToggleFooterBlocks } from '../../../../config/components';\n\timport UIIcon from '../../../ui/UIIcon.svelte';\n\n\t// Config key for expanding\n\texport let name: string;\n\n\t// Title\n\texport let title: string;\n\texport let titleHidden: string = '';\n\n\t// Config key\n\tlet key = name + 'Visible';\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Get config\n\tconst config = (registry.config.components as unknown) as Record<\n\t\tstring,\n\t\tboolean\n\t>;\n\n\t// Check if block can expand\n\tconst canExpand = canToggleFooterBlocks && typeof config[key] === 'boolean';\n\n\t// Check if info block is visible\n\tlet expanded: boolean = canExpand && title !== '' ? config[key] : true;\n\n\t// Class name\n\tconst baseClass = 'iif-footer-block';\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t'--' +\n\t\t\tname +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t'--' +\n\t\t\t(expanded ? 'expanded' : 'collapsed');\n\t}\n\n\t/**\n\t * Toggle block\n\t */\n\tfunction toggle() {\n\t\texpanded = config[key] = !expanded;\n\t\tregistry.callback({\n\t\t\ttype: 'config',\n\t\t});\n\t}\n</script>\n\n<div class={className}>\n\t{#if title !== ''}\n\t\t<p class=\"iif-footer-block-title\">\n\t\t\t{#if !expanded}\n\t\t\t\t<UIIcon icon=\"expand\" />\n\t\t\t{/if}\n\t\t\t{#if canExpand}\n\t\t\t\t<a\n\t\t\t\t\thref=\"# \"\n\t\t\t\t\ton:click|preventDefault={toggle}>{(!expanded && titleHidden !== '' ? titleHidden : title) + (expanded ? ':' : '')}</a>\n\t\t\t{:else}{title + ':'}{/if}\n\t\t</p>\n\t{/if}\n\t{#if expanded}\n\t\t<slot />\n\t{/if}\n</div>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { IconifyIconCustomisations } from '@iconify/svelte';\n\timport IconComponent from '@iconify/svelte';\n\timport type { Icon, FullRoute } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type { WrappedRegistry } from '../../../../wrapper/registry';\n\timport { canShortenIconName } from '../../../../config/components';\n\timport { shortenIconName } from '../../../../footer/shorten-icon-name';\n\timport { phrases } from '../../../../config/phrases';\n\timport OptionsBlock from './OptionsBlock.svelte';\n\timport UIIcon from '../../../ui/UIIcon.svelte';\n\n\t// Selected icons\n\texport let icons: Icon[];\n\n\t// Current customisations\n\texport let customisations: IconCustomisations;\n\n\t// Current route\n\texport let route: FullRoute;\n\n\t// Selected icon\n\texport let selected: string = '';\n\n\t// Callback when new icon has been selected\n\texport let onSelect: ((icon: Icon) => void) | null = null;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Convert icons list to strings\n\tinterface ListItem {\n\t\ticon: Icon;\n\t\tname: string;\n\t\ttext: string;\n\t\tremoveTitle: string;\n\t\tselectTitle: string;\n\t\tselected: boolean;\n\t}\n\tlet items: ListItem[];\n\t$: {\n\t\titems = [];\n\t\ticons.forEach((icon) => {\n\t\t\t// Full name\n\t\t\tconst name = iconToString(icon);\n\n\t\t\t// Do not show prefix if viewing collection\n\t\t\tconst text = canShortenIconName\n\t\t\t\t? shortenIconName(route, icon, name)\n\t\t\t\t: name;\n\n\t\t\t// Hint\n\t\t\tconst removeTitle = phrases.footer.remove.replace('{name}', text);\n\t\t\tconst selectTitle = onSelect\n\t\t\t\t? phrases.footer.select.replace('{name}', text)\n\t\t\t\t: removeTitle;\n\n\t\t\t// Item\n\t\t\tconst item: ListItem = {\n\t\t\t\ticon,\n\t\t\t\tname,\n\t\t\t\ttext,\n\t\t\t\tremoveTitle,\n\t\t\t\tselectTitle,\n\t\t\t\tselected: name === selected,\n\t\t\t};\n\t\t\titems.push(item);\n\t\t});\n\t}\n\n\t// Copy customisations\n\tconst transformations: (keyof IconCustomisations)[] = [\n\t\t'rotate',\n\t\t'hFlip',\n\t\t'vFlip',\n\t];\n\tlet props: IconifyIconCustomisations;\n\tlet style: string;\n\t$: {\n\t\tprops = {};\n\n\t\t// Transformations\n\t\ttransformations.forEach((key) => {\n\t\t\tif (customisations[key]) {\n\t\t\t\t(props as Record<string, unknown>)[key] = customisations[key];\n\t\t\t}\n\t\t});\n\n\t\t// Height\n\t\tif (\n\t\t\ttypeof customisations.height === 'number' &&\n\t\t\tcustomisations.height < 32\n\t\t) {\n\t\t\tprops.height = customisations.height;\n\t\t\t// Width, but only if height is set\n\t\t\tif (customisations.width) {\n\t\t\t\tprops.width = customisations.width;\n\t\t\t}\n\t\t}\n\n\t\t// Color\n\t\tstyle = '';\n\t\tif (customisations.color !== '') {\n\t\t\tstyle = 'color: ' + customisations.color + ';';\n\t\t}\n\t}\n\n\t// Toggle icon\n\tfunction onClick(select: boolean, icon: Icon) {\n\t\tif (select && onSelect) {\n\t\t\tonSelect(icon);\n\t\t\treturn;\n\t\t}\n\t\tregistry.callback({\n\t\t\ttype: 'selection',\n\t\t\ticon,\n\t\t\tselected: false,\n\t\t});\n\t}\n</script>\n\n<OptionsBlock type=\"icons\">\n\t<ul class=\"iif-footer-icons\" {style}>\n\t\t{#each items as item, i (item.name)}\n\t\t\t<li>\n\t\t\t\t<a\n\t\t\t\t\thref=\"# \"\n\t\t\t\t\ton:click|preventDefault={() => {\n\t\t\t\t\t\tonClick(true, item.icon);\n\t\t\t\t\t}}\n\t\t\t\t\ttitle={item.selectTitle}>\n\t\t\t\t\t<IconComponent icon={item.name} {...props} />\n\t\t\t\t\t{#if !onSelect}\n\t\t\t\t\t\t<span class=\"iif-footer-icons-reset\">\n\t\t\t\t\t\t\t<UIIcon icon=\"reset\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{/if}\n\t\t\t\t</a>\n\t\t\t\t{#if onSelect}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"# \"\n\t\t\t\t\t\tclass=\"iif-footer-icons-reset\"\n\t\t\t\t\t\ton:click|preventDefault={() => {\n\t\t\t\t\t\t\tonClick(false, item.icon);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle={item.removeTitle}>\n\t\t\t\t\t\t<UIIcon icon=\"reset\" />\n\t\t\t\t\t</a>\n\t\t\t\t{/if}\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</OptionsBlock>\n","<script lang=\"typescript\">\n\timport { phrases } from '../../../../config/phrases';\n\n\t// Block type\n\texport let type: string;\n\n\tconst baseClass = 'iif-footer-options-block';\n\n\t// Get title\n\tlet title: string;\n\t$: {\n\t\tconst text = phrases.footerBlocks;\n\t\ttitle =\n\t\t\ttext[type] === void 0\n\t\t\t\t? type\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t(str) =>\n\t\t\t\t\t\t\t\tstr.slice(0, 1).toUpperCase() + str.slice(1)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join(' ')\n\t\t\t\t: text[type];\n\t}\n</script>\n\n<div class={baseClass + ' ' + baseClass + '--' + type}>\n\t<p>{title}</p>\n\t<div>\n\t\t<slot />\n\t</div>\n</div>\n","<script lang=\"typescript\">\n\timport type { Icon } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { phrases } from '../../../../config/phrases';\n\timport FooterBlock from './FooterBlock.svelte';\n\timport {\n\t\tshowFooterBlockTitles,\n\t\tcustomiseColor,\n\t\tcustomiseWidth,\n\t\tcustomiseHeight,\n\t\tcustomiseRotate,\n\t\tcustomiseFlip,\n\t\tcustomiseInline,\n\t} from '../../../../config/components';\n\timport ColorBlock from './props/Color.svelte';\n\timport SizeBlock from './props/Size.svelte';\n\timport RotateBlock from './props/Rotate.svelte';\n\timport FlipBlock from './props/Flip.svelte';\n\timport InlineBlock from './props/Inline.svelte';\n\n\t// Selected icons\n\texport let icons: Icon[];\n\n\t// Customisations\n\texport let customisations: IconCustomisations;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Title\n\tlet title: string;\n\t$: {\n\t\ttitle = showFooterBlockTitles\n\t\t\t? phrases.footerBlocks[icons.length > 1 ? 'title2' : 'title']\n\t\t\t: '';\n\t}\n</script>\n\n<FooterBlock name=\"props\" {title}>\n\t<div>\n\t\t{#if customiseColor}\n\t\t\t<ColorBlock\n\t\t\t\t{icons}\n\t\t\t\tvalue={typeof customisations.color === 'string' ? customisations.color : ''}\n\t\t\t\t{customise} />\n\t\t{/if}\n\t\t{#if customiseWidth || customiseHeight}\n\t\t\t<SizeBlock {icons} {customisations} {customise} />\n\t\t{/if}\n\t\t{#if customiseFlip}\n\t\t\t<FlipBlock {customisations} {customise} />\n\t\t{/if}\n\t\t{#if customiseRotate}\n\t\t\t<RotateBlock value={customisations.rotate} {customise} />\n\t\t{/if}\n\t\t{#if customiseInline && icons.length === 1}\n\t\t\t<InlineBlock value={customisations.inline} {customise} />\n\t\t{/if}\n\t</div>\n</FooterBlock>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type {\n\t\tCodeSampleAPIConfig,\n\t\tCodeSampleMode,\n\t} from '@iconify/search-core/lib/code-samples/types';\n\timport type { CodeOutput } from '@iconify/search-core/lib/code-samples/code';\n\timport {\n\t\tgetIconCode,\n\t\tcodeOutputComponentKeys,\n\t} from '@iconify/search-core/lib/code-samples/code';\n\timport { capitalizeCodeSampleTitle } from '@iconify/search-core/lib/code-samples/phrases';\n\timport { phrases } from '../../../../../config/phrases';\n\timport type { WrappedRegistry } from '../../../../../wrapper/registry';\n\timport UIIcon from '../../../../ui/UIIcon.svelte';\n\timport SampleInput from './Sample.svelte';\n\n\t// Selected icon\n\texport let icon: Icon;\n\n\t// Customisations\n\texport let customisations: IconCustomisations;\n\n\t// API provider config\n\texport let providerConfig: CodeSampleAPIConfig;\n\n\t// Mode\n\texport let mode: CodeSampleMode;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Callback for external link\n\tconst onExternalClick = registry.link;\n\n\t// Get text\n\tconst codePhrases = phrases.codeSamples;\n\n\t// Get mode specific data and text\n\t/*\n\t\tActual type: \"CodeOutput | null\", but Svelte language tools cannot handle nested conditional\n\t\tstatements in template, so intentionally using wrong type to get rid of warnings.\n\t*/\n\tlet output: Required<CodeOutput>;\n\tlet docsText: string;\n\t$: {\n\t\toutput = getIconCode(\n\t\t\tmode,\n\t\t\ticon,\n\t\t\tcustomisations,\n\t\t\tproviderConfig\n\t\t) as Required<CodeOutput>;\n\n\t\t// Get title for docs\n\t\tif (output && output.docs) {\n\t\t\tconst docsType = output.docs.type;\n\t\t\tdocsText = codePhrases.docs[docsType]\n\t\t\t\t? codePhrases.docs[docsType]!\n\t\t\t\t: codePhrases.docsDefault.replace(\n\t\t\t\t\t\t'{title}',\n\t\t\t\t\t\tcapitalizeCodeSampleTitle(docsType)\n\t\t\t\t  );\n\t\t} else {\n\t\t\tdocsText = '';\n\t\t}\n\t}\n</script>\n\n{#if output}\n\t{#if output.header}\n\t\t{#if output.header.text}\n\t\t\t<p>{output.header.text}</p>\n\t\t{/if}\n\t\t{#if output.header.code}\n\t\t\t<SampleInput content={output.header.code} />\n\t\t{/if}\n\t{/if}\n\n\t{#if codePhrases.intro[mode]}\n\t\t<p>{codePhrases.intro[mode]}</p>\n\t{/if}\n\n\t{#if output.iconify}\n\t\t<p>{codePhrases.iconify.intro1.replace('{name}', icon.name)}</p>\n\t\t<SampleInput content={output.iconify.html} />\n\t\t<p>{codePhrases.iconify.intro2}</p>\n\t\t<p>{codePhrases.iconify.head}</p>\n\t\t<SampleInput content={output.iconify.head} />\n\t{/if}\n\n\t{#if output.raw}\n\t\t{#each output.raw as code}\n\t\t\t<SampleInput content={code} />\n\t\t{/each}\n\t{/if}\n\n\t{#if output.component}\n\t\t{#each codeOutputComponentKeys as key}\n\t\t\t{#if output.component[key]}\n\t\t\t\t{#if codePhrases.component[key]}\n\t\t\t\t\t<p>{codePhrases.component[key]}</p>\n\t\t\t\t{/if}\n\t\t\t\t<SampleInput content={output.component[key]} />\n\t\t\t{/if}\n\t\t{/each}\n\t{/if}\n\n\t{#if output.footer}\n\t\t{#if output.footer.text}\n\t\t\t<p>{output.footer.text}</p>\n\t\t{/if}\n\t\t{#if output.footer.code}\n\t\t\t<SampleInput content={output.footer.code} />\n\t\t{/if}\n\t{/if}\n\n\t{#if output.docs}\n\t\t<p class=\"iif-code-docs\">\n\t\t\t<UIIcon icon=\"docs\" />\n\t\t\t<a\n\t\t\t\thref={output.docs.href}\n\t\t\t\ton:click={onExternalClick}\n\t\t\t\ttarget=\"_blank\">\n\t\t\t\t{docsText}\n\t\t\t\t<UIIcon icon=\"link\" />\n\t\t\t</a>\n\t\t</p>\n\t{/if}\n{/if}\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { FiltersBlock, Icon } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type {\n\t\tCodeSampleAPIConfig,\n\t\tCodeSampleKey,\n\t} from '@iconify/search-core/lib/code-samples/types';\n\timport type {\n\t\tCodeSamplesTree,\n\t\tCodeSamplesTreeItem,\n\t\tCodeSamplesTreeChildItem,\n\t} from '@iconify/search-core/lib/code-samples/tree';\n\timport { getCodeSamplesTree } from '@iconify/search-core/lib/code-samples/tree';\n\timport type { WrappedRegistry } from '../../../../../wrapper/registry';\n\timport { phrases } from '../../../../../config/phrases';\n\timport { codeConfig } from '../../../../../config/code';\n\timport FooterBlock from '../FooterBlock.svelte';\n\timport FiltersComponent from '../../../blocks/Filters.svelte';\n\timport CodeComponent from './Code.svelte';\n\n\t// Selected icon\n\texport let icon: Icon;\n\n\t// Icon customisations\n\texport let customisations: IconCustomisations;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\tconst codePhrases = phrases.codeSamples;\n\tconst componentsConfig = registry.config.components;\n\n\t// Internal types\n\ttype CurrentTab = CodeSampleKey | '';\n\n\tinterface CurrentTabData {\n\t\ttab: CurrentTab;\n\t\tparent: CodeSamplesTreeItem | null;\n\t\tparentIndex: number;\n\t\tchild: CodeSamplesTreeChildItem | null;\n\t}\n\n\tinterface DataCache {\n\t\tlastProvider: string | null;\n\t\tlastParent: CodeSamplesTreeItem | null;\n\t\tlastChild: CodeSamplesTreeChildItem | null;\n\t}\n\n\tinterface ProviderCache {\n\t\tconfig: CodeSampleAPIConfig;\n\t\ttree: CodeSamplesTree;\n\t}\n\n\t// Cache\n\tconst providerCache: Record<string, ProviderCache> = Object.create(null);\n\tconst data: DataCache = {\n\t\tlastProvider: null,\n\t\tlastParent: null,\n\t\tlastChild: null,\n\t};\n\n\t// Currently selected tab\n\tlet currentTab: CurrentTab;\n\n\t// Filters\n\tlet parentFilters: FiltersBlock | null = null;\n\tlet childFilters: FiltersBlock | null = null;\n\tlet childTabsTitle: string = '';\n\n\t// API provider for current icon\n\t$: {\n\t\tconst provider = icon.provider;\n\t\tif (provider !== data.lastProvider) {\n\t\t\t// Changed API provider\n\t\t\tdata.lastProvider = provider;\n\t\t\tgetProviderData(provider);\n\n\t\t\t// Get current tab\n\t\t\tlet tab = (typeof currentTab !== 'string'\n\t\t\t\t? componentsConfig.codeTab\n\t\t\t\t: currentTab) as CurrentTab;\n\n\t\t\t// Update current tab\n\t\t\tupdateCurrentTab(checkCurrentTab(tab, true));\n\t\t}\n\t}\n\n\t/**\n\t * Get data for provider\n\t */\n\tfunction getProviderData(provider: string): ProviderCache {\n\t\tif (providerCache[provider] === void 0) {\n\t\t\t// Update cached data\n\t\t\tconst config =\n\t\t\t\tcodeConfig.providers[provider] === void 0\n\t\t\t\t\t? codeConfig.defaultProvider\n\t\t\t\t\t: codeConfig.providers[provider];\n\t\t\tproviderCache[provider] = {\n\t\t\t\tconfig,\n\t\t\t\ttree: getCodeSamplesTree(config),\n\t\t\t};\n\t\t}\n\t\treturn providerCache[provider];\n\t}\n\n\t/**\n\t * Update current tab\n\t */\n\tfunction updateCurrentTab(item: CurrentTabData) {\n\t\tfunction createFilters(\n\t\t\titems: CodeSamplesTree,\n\t\t\tactive: CodeSampleKey,\n\t\t\tstartIndex = 0\n\t\t): FiltersBlock | null {\n\t\t\tif (items.length < 2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst block: FiltersBlock = {\n\t\t\t\ttype: 'filters',\n\t\t\t\tfilterType: 'code-tabs',\n\t\t\t\tactive,\n\t\t\t\tfilters: Object.create(null),\n\t\t\t};\n\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tconst item = items[i];\n\t\t\t\tconst key = item.tab ? item.tab : item.mode!;\n\t\t\t\tblock.filters[key] = {\n\t\t\t\t\ttitle: item.title,\n\t\t\t\t\tindex: i + startIndex,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn block;\n\t\t}\n\n\t\tconst tab = item.tab;\n\t\tif (currentTab !== tab) {\n\t\t\t// Change tab\n\t\t\tcurrentTab = componentsConfig.codeTab = tab;\n\n\t\t\t// UIConfigEvent\n\t\t\tregistry.callback({\n\t\t\t\ttype: 'config',\n\t\t\t});\n\t\t} else if (\n\t\t\tdata.lastParent === item.parent &&\n\t\t\tdata.lastParent === item.child\n\t\t) {\n\t\t\t// Nothing to change\n\t\t\treturn;\n\t\t}\n\n\t\tif (tab === '') {\n\t\t\t// Nothing to display\n\t\t\tparentFilters = childFilters = data.lastChild = data.lastParent = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// Update filters\n\t\tconst providerData = getProviderData(icon.provider);\n\t\tconst tree = providerData.tree;\n\t\tconst parent = item.parent!; // Cannot be empty\n\t\tconst child = item.child;\n\t\tif (data.lastParent === parent) {\n\t\t\t// Only change active tab\n\t\t\tif (parentFilters) {\n\t\t\t\tparentFilters.active = parent.tab ? parent.tab : parent.mode!;\n\t\t\t}\n\t\t} else {\n\t\t\t// Create new filters\n\t\t\tparentFilters = createFilters(\n\t\t\t\ttree,\n\t\t\t\tparent.tab ? parent.tab : parent.mode!\n\t\t\t);\n\t\t}\n\n\t\t// Child filters\n\t\tif (data.lastChild === child) {\n\t\t\t// Only change active tab\n\t\t\tif (childFilters) {\n\t\t\t\tchildFilters.active = child!.mode;\n\t\t\t}\n\t\t} else {\n\t\t\t// Create new child filters\n\t\t\tchildFilters = child\n\t\t\t\t? createFilters(\n\t\t\t\t\t\tparent.children!,\n\t\t\t\t\t\tchild!.mode,\n\t\t\t\t\t\titem.parentIndex + 1\n\t\t\t\t  )\n\t\t\t\t: null;\n\t\t}\n\n\t\t// Update text\n\t\tif (childFilters && parentFilters) {\n\t\t\tconst key = parent.tab!;\n\t\t\tchildTabsTitle =\n\t\t\t\tcodePhrases.childTabTitles[key] === void 0\n\t\t\t\t\t? codePhrases.childTabTitle.replace('{key}', key)\n\t\t\t\t\t: codePhrases.childTabTitles[key]!;\n\t\t} else {\n\t\t\tchildTabsTitle = '';\n\t\t}\n\n\t\t// Store last items to avoid re-rendering if items do not change\n\t\tdata.lastParent = parent;\n\t\tdata.lastChild = child;\n\t}\n\n\t/**\n\t * Check currentTab, return new value\n\t */\n\tfunction checkCurrentTab(\n\t\ttab: CurrentTab,\n\t\tuseDefault: boolean\n\t): CurrentTabData {\n\t\tconst providerData = getProviderData(icon.provider);\n\t\tconst tree = providerData.tree;\n\n\t\tif (typeof tab === 'string') {\n\t\t\tfor (\n\t\t\t\tlet parentIndex = 0;\n\t\t\t\tparentIndex < tree.length;\n\t\t\t\tparentIndex++\n\t\t\t) {\n\t\t\t\tconst parent = tree[parentIndex];\n\t\t\t\tif (parent.mode === tab || parent.tab === tab) {\n\t\t\t\t\tif (parent.children) {\n\t\t\t\t\t\t// Has children: return first child\n\t\t\t\t\t\tconst child = parent.children[0];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttab: child.mode,\n\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\tparentIndex,\n\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// No children, must have mode\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttab: parent.mode!,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\tparentIndex,\n\t\t\t\t\t\tchild: null,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Check children\n\t\t\t\tif (parent.children) {\n\t\t\t\t\tfor (let j = 0; j < parent.children.length; j++) {\n\t\t\t\t\t\tconst child = parent.children[j];\n\t\t\t\t\t\tif (child.mode === tab) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttab,\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\tparentIndex,\n\t\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// No match: use first item\n\t\tif (useDefault) {\n\t\t\tconst parent = tree[0];\n\t\t\tif (!parent) {\n\t\t\t\t// No modes available\n\t\t\t\treturn {\n\t\t\t\t\ttab: '',\n\t\t\t\t\tparent: null,\n\t\t\t\t\tparentIndex: 0,\n\t\t\t\t\tchild: null,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (parent.children) {\n\t\t\t\t// Has child items: use first item\n\t\t\t\tconst child = parent.children[0];\n\t\t\t\treturn {\n\t\t\t\t\ttab: child.mode,\n\t\t\t\t\tparent,\n\t\t\t\t\tparentIndex: 0,\n\t\t\t\t\tchild,\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Tab without children\n\t\t\treturn {\n\t\t\t\ttab: parent.mode!, // Must have mode\n\t\t\t\tparent,\n\t\t\t\tparentIndex: 0,\n\t\t\t\tchild: null,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttab: '',\n\t\t\tparent: null,\n\t\t\tparentIndex: 0,\n\t\t\tchild: null,\n\t\t};\n\t}\n\n\t// Change current tab\n\tfunction changeTab(tab: string) {\n\t\tconst item = checkCurrentTab(tab as CurrentTab, false);\n\t\tif (item.tab === currentTab || (item.tab === '' && currentTab !== '')) {\n\t\t\t// Do not change tab if it wasn't changed or if it doesn't exist\n\t\t\treturn;\n\t\t}\n\n\t\tupdateCurrentTab(item);\n\t}\n</script>\n\n{#if currentTab}\n\t<FooterBlock\n\t\tname=\"code\"\n\t\ttitle={codePhrases.heading.replace('{name}', icon.name)}\n\t\ttitleHidden={codePhrases.headingHidden.replace('{name}', icon.name)}>\n\t\t<div class=\"iif-code\">\n\t\t\t<div class=\"iif-filters\">\n\t\t\t\t{#if parentFilters}\n\t\t\t\t\t<FiltersComponent\n\t\t\t\t\t\tname=\"code\"\n\t\t\t\t\t\tblock={parentFilters}\n\t\t\t\t\t\tonClick={changeTab} />\n\t\t\t\t{/if}\n\t\t\t\t{#if childFilters}\n\t\t\t\t\t<FiltersComponent\n\t\t\t\t\t\tname=\"code\"\n\t\t\t\t\t\tblock={childFilters}\n\t\t\t\t\t\tonClick={changeTab}\n\t\t\t\t\t\ttitle={childTabsTitle} />\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<CodeComponent\n\t\t\t\tmode={currentTab}\n\t\t\t\t{icon}\n\t\t\t\t{customisations}\n\t\t\t\tproviderConfig={getProviderData(icon.provider).config} />\n\t\t</div>\n\t</FooterBlock>\n{/if}\n","<script lang=\"typescript\">\n\timport { onMount } from 'svelte';\n\timport { phrases } from '../../../../../config/phrases';\n\timport UIIcon from '../../../../ui/UIIcon.svelte';\n\n\t// Code sample to show\n\texport let content: string;\n\n\tconst text = phrases.codeSamples;\n\n\t// Notice counter\n\tlet notice = 0;\n\n\t// Generate class name\n\tconst baseClassName = 'iif-input-sample';\n\tlet className: string = baseClassName;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClassName +\n\t\t\t(notice > 0 ? ' ' + baseClassName + '--with-notice' : '');\n\t}\n\n\t/**\n\t * Copy code to clipboard\n\t */\n\tfunction copy() {\n\t\tconst node = document.body;\n\t\tconst textarea = document.createElement('textarea');\n\t\tconst style = textarea.style;\n\t\ttextarea.value = content;\n\t\tstyle.position = 'absolute';\n\t\ttry {\n\t\t\tstyle.left = window.pageXOffset + 'px';\n\t\t\tstyle.top = window.pageYOffset + 'px';\n\t\t} catch (err) {}\n\t\tstyle.height = '0';\n\t\tnode.appendChild(textarea);\n\n\t\ttextarea.focus();\n\t\ttextarea.select();\n\n\t\tlet copied = false;\n\t\ttry {\n\t\t\t// Modern way\n\t\t\tif (!document.execCommand || !document.execCommand('copy')) {\n\t\t\t\t// Ancient way\n\t\t\t\tinterface AncientWindow {\n\t\t\t\t\tclipboardData?: {\n\t\t\t\t\t\tsetData: (a: string, b: string) => void;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst w = (window as unknown) as AncientWindow;\n\t\t\t\tif (w.clipboardData) {\n\t\t\t\t\tw.clipboardData.setData('Text', content);\n\t\t\t\t\tcopied = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcopied = true;\n\t\t\t}\n\t\t} catch (err) {}\n\n\t\t// Remove textarea on next tick\n\t\tsetTimeout(() => {\n\t\t\tnode.removeChild(textarea);\n\t\t});\n\n\t\tif (copied) {\n\t\t\t// Show notice\n\t\t\tnotice++;\n\n\t\t\t// Remove notice after 2 seconds\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (notice) {\n\t\t\t\t\tnotice--;\n\t\t\t\t}\n\t\t\t}, 2000);\n\t\t}\n\t}\n\n\t// SSR render\n\tlet mounted = false;\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n</script>\n\n<div class={className}>\n\t<div class={baseClassName + '-content'}>{content}</div>\n\t{#if mounted}\n\t\t<a title={text.copy} href=\"# \" on:click|preventDefault={copy}><UIIcon\n\t\t\t\ticon=\"clipboard\" /></a>\n\t{/if}\n\t{#if mounted && notice > 0}\n\t\t<div class={baseClassName + '-notice'}>\n\t\t\t<UIIcon icon=\"confirm\" />\n\t\t\t{text.copied}\n\t\t</div>\n\t{/if}\n</div>\n","<script lang=\"typescript\">\n\timport type { FullRoute, Icon } from '@iconify/search-core';\n\timport IconComponent from '@iconify/svelte';\n\timport { iconToString } from '@iconify/search-core';\n\timport { canShortenIconName } from '../../../../../config/components';\n\timport { shortenIconName } from '../../../../../footer/shorten-icon-name';\n\timport { phrases } from '../../../../../config/phrases';\n\n\t// Icon name\n\texport let icon: Icon;\n\n\t// Current route\n\texport let route: FullRoute;\n\n\t// Get icon name\n\tlet iconName: string;\n\tlet text: string;\n\t$: {\n\t\t// Full name\n\t\ticonName = iconToString(icon);\n\n\t\t// Do not show prefix if viewing collection\n\t\ttext = canShortenIconName\n\t\t\t? shortenIconName(route, icon, iconName)\n\t\t\t: iconName;\n\t}\n</script>\n\n<div class=\"iif-footer-icon-name iif-footer-icon-name--simple\">\n\t<dl>\n\t\t<dt>{phrases.footer.iconName}</dt>\n\t\t<dd>\n\t\t\t{#each [iconName] as iconName (iconName)}\n\t\t\t\t<IconComponent icon={iconName} />\n\t\t\t{/each}\n\t\t\t<div class=\"iif-footer-icon-name-input\"><span>{text}</span></div>\n\t\t</dd>\n\t</dl>\n</div>\n","<script lang=\"typescript\">\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport type { Icon } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport { Iconify } from '@iconify/search-core/lib/iconify';\n\timport {\n\t\tstringToColor,\n\t\tcolorToString,\n\t} from '@iconify/search-core/lib/misc/colors';\n\timport { phrases } from '../../../../../config/phrases';\n\timport { defaultColor } from '../../../../../config/components';\n\timport Input from '../../../../ui/Input.svelte';\n\timport OptionsBlock from '../OptionsBlock.svelte';\n\n\t// Selected icons\n\texport let icons: Icon[];\n\n\t// Current value\n\texport let value: string;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Check if at least one icon has color\n\tlet hasColor: boolean;\n\t$: {\n\t\thasColor = false;\n\t\tfor (let i = 0; i < icons.length; i++) {\n\t\t\tconst data = Iconify.getIcon?.(iconToString(icons[i]));\n\t\t\tif (data && data.body.indexOf('currentColor') !== -1) {\n\t\t\t\thasColor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst title = phrases.footerBlocks.color;\n\n\tlet lastValue = value;\n\tlet inputValue = value;\n\t$: {\n\t\t// Change inputValue when value changes\n\t\tif (lastValue !== value) {\n\t\t\tlastValue = value;\n\t\t\tinputValue = value;\n\t\t}\n\t}\n\n\t// Convert color to valid string\n\tfunction getColor(value: string, defaultValue: string | null) {\n\t\tconst color = stringToColor(value);\n\t\tif (!color) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\tconst cleanColor = colorToString(color);\n\t\treturn cleanColor === '' ? defaultValue : cleanColor;\n\t}\n\n\t// Check input\n\tfunction onInput(newValue: string) {\n\t\tinputValue = newValue;\n\n\t\t// Check for valid color\n\t\tif (newValue === '') {\n\t\t\tcustomise('color', '');\n\t\t\treturn;\n\t\t}\n\n\t\tconst validatedValue = getColor(newValue, null);\n\t\tif (validatedValue !== null) {\n\t\t\t// Change lastValue to avoid triggering component refresh\n\t\t\tlastValue = value = validatedValue;\n\t\t\tcustomise('color', validatedValue);\n\t\t}\n\t}\n\n\t// Reset to last valid value\n\tfunction onBlur() {\n\t\t// Set last value as input value\n\t\tinputValue = value;\n\t}\n</script>\n\n{#if hasColor}\n\t<OptionsBlock type=\"color\">\n\t\t<Input\n\t\t\tvalue={inputValue}\n\t\t\tplaceholder={defaultColor}\n\t\t\t{title}\n\t\t\t{onInput}\n\t\t\t{onBlur}\n\t\t\ticon={value === void 0 || value === '' ? 'color' : 'color-filled'}\n\t\t\textra={value === void 0 ? '' : value}\n\t\t\ttype=\"color\" />\n\t</OptionsBlock>\n{/if}\n","<script lang=\"typescript\">\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { phrases } from '../../../../../config/phrases';\n\timport OptionsBlock from '../OptionsBlock.svelte';\n\timport Button from '../../../../ui/OptionButton.svelte';\n\n\t// Icon customisations\n\texport let customisations: IconCustomisations;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Dynamically generate list of icons, using keys to force redrawing button, triggering css animation\n\tinterface ListItem {\n\t\tprop: keyof IconCustomisations;\n\t\ticon: string;\n\t\tkey: string;\n\t\ttitle: string;\n\t}\n\tlet list: ListItem[];\n\t$: {\n\t\tlist = [\n\t\t\taddItem('h', customisations.hFlip),\n\t\t\taddItem('v', customisations.vFlip),\n\t\t];\n\t}\n\n\tfunction addItem(key: string, selected: boolean): ListItem {\n\t\tconst prop = (key + 'Flip') as keyof IconCustomisations;\n\t\treturn {\n\t\t\tprop,\n\t\t\ticon: key + '-flip',\n\t\t\tkey: key + 'Flip' + (selected ? '!' : ''),\n\t\t\ttitle: (phrases.footerOptionButtons as Record<string, string>)[\n\t\t\t\tprop\n\t\t\t],\n\t\t};\n\t}\n\n\t// Toggle\n\tfunction flipClicked(type: keyof IconCustomisations) {\n\t\tcustomise(type, !customisations[type]);\n\t}\n</script>\n\n<OptionsBlock type=\"flip\">\n\t{#each list as item, i (item.key)}\n\t\t<Button\n\t\t\ticon={item.icon}\n\t\t\ttitle={item.title}\n\t\t\tstatus={customisations[item.prop] ? 'checked' : 'unchecked'}\n\t\t\tonClick={() => flipClicked(item.prop)} />\n\t{/each}\n</OptionsBlock>\n","<script lang=\"typescript\">\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { phrases } from '../../../../../config/phrases';\n\timport OptionsBlock from '../OptionsBlock.svelte';\n\timport Button from '../../../../ui/OptionButton.svelte';\n\n\t// Current value\n\texport let value: boolean;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Phrases\n\tconst buttonPhrases = phrases.footerOptionButtons as Record<string, string>;\n\n\t// Dynamically generate list of icons, using keys to force redrawing button, triggering css animation\n\tinterface ListItem {\n\t\tkey: string;\n\t\tinline: boolean;\n\t\tmode: string;\n\t\tselected: boolean;\n\t\ttemp: number;\n\t}\n\tlet list: ListItem[];\n\t$: {\n\t\tconst newList = [];\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst inline = !!i;\n\t\t\tif (list && list[i] && value !== inline) {\n\t\t\t\t// Not selected and exists: keep old item to avoid re-render\n\t\t\t\tconst oldItem = list[i];\n\t\t\t\toldItem.selected = false;\n\t\t\t\tnewList.push(oldItem);\n\t\t\t} else {\n\t\t\t\t// Update key to force re-render\n\t\t\t\tnewList.push(\n\t\t\t\t\taddItem(\n\t\t\t\t\t\tinline,\n\t\t\t\t\t\tvalue === inline,\n\t\t\t\t\t\tlist && list[i] ? list[i].temp + 1 : 0\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlist = newList;\n\t}\n\n\tfunction addItem(\n\t\tinline: boolean,\n\t\tselected: boolean,\n\t\ttemp: number\n\t): ListItem {\n\t\tconst mode = inline ? 'inline' : 'block';\n\t\treturn {\n\t\t\tmode,\n\t\t\tinline,\n\t\t\tkey: mode + temp,\n\t\t\tselected,\n\t\t\ttemp,\n\t\t};\n\t}\n\n\tfunction inlineClicked() {\n\t\tcustomise('inline', !value);\n\t}\n</script>\n\n<OptionsBlock type=\"mode\">\n\t{#each list as { mode, inline, key }, i (key)}\n\t\t<Button\n\t\t\ticon={'mode-' + mode}\n\t\t\ttext={buttonPhrases[mode]}\n\t\t\ttitle={buttonPhrases[mode + 'Hint']}\n\t\t\tstatus={value === inline ? 'checked' : 'unchecked'}\n\t\t\ttextOptional={true}\n\t\t\tonClick={inlineClicked} />\n\t{/each}\n</OptionsBlock>\n","<script lang=\"typescript\">\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { phrases } from '../../../../../config/phrases';\n\timport OptionsBlock from '../OptionsBlock.svelte';\n\timport Button from '../../../../ui/OptionButton.svelte';\n\n\t// Current value\n\texport let value: number;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Get text\n\tconst buttonPhrases = phrases.footerOptionButtons as Record<string, string>;\n\n\t// Dynamically generate list of icons, using keys to force redrawing button, triggering css animation\n\tinterface ListItem {\n\t\tkey: string;\n\t\tcount: number;\n\t\tselected: boolean;\n\t\ttemp: number;\n\t}\n\tlet list: ListItem[];\n\t$: {\n\t\tconst newList = [];\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tif (list && list[i] && value !== i) {\n\t\t\t\t// Not selected and exists: keep old item to avoid re-render\n\t\t\t\tconst oldItem = list[i];\n\t\t\t\toldItem.selected = false;\n\t\t\t\tnewList.push(oldItem);\n\t\t\t} else {\n\t\t\t\t// Update key to force re-render\n\t\t\t\tnewList.push(\n\t\t\t\t\taddItem(\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tvalue === i,\n\t\t\t\t\t\tlist && list[i] ? list[i].temp + 1 : 0\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlist = newList;\n\t}\n\n\tfunction addItem(count: number, selected: boolean, temp: number): ListItem {\n\t\treturn {\n\t\t\tcount,\n\t\t\tkey: count + '-' + temp,\n\t\t\tselected,\n\t\t\ttemp,\n\t\t};\n\t}\n\n\tfunction rotateClicked(count: number) {\n\t\tif (!count && !value) {\n\t\t\treturn;\n\t\t}\n\t\tcustomise('rotate', count === value ? 0 : count);\n\t}\n</script>\n\n<OptionsBlock type=\"rotate\">\n\t{#each list as { count, key }, i (key)}\n\t\t<Button\n\t\t\ticon={'rotate' + count}\n\t\t\ttitle={buttonPhrases.rotateTitle.replace('{num}', count * 90 + '')}\n\t\t\ttext={buttonPhrases.rotate.replace('{num}', count * 90 + '')}\n\t\t\tstatus={value === count ? 'checked' : 'unchecked'}\n\t\t\tonClick={() => rotateClicked(count)} />\n\t{/each}\n</OptionsBlock>\n","<script lang=\"typescript\">\n\timport { calculateSize } from '@iconify/svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport { Iconify } from '@iconify/search-core/lib/iconify';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport {\n\t\tcustomiseWidth,\n\t\tcustomiseHeight,\n\t\tdefaultWidth,\n\t\tdefaultHeight,\n\t} from '../../../../../config/components';\n\timport OptionsBlock from '../OptionsBlock.svelte';\n\timport SizeInput from './SizeInput.svelte';\n\n\t// Data for selected icon\n\texport let icons: Icon[];\n\n\t// Icon customisations\n\texport let customisations: IconCustomisations;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Get customisation type (constants because they cannot be changed at run time)\n\tconst type =\n\t\tcustomiseWidth && customiseHeight\n\t\t\t? 'size'\n\t\t\t: customiseWidth\n\t\t\t? 'width'\n\t\t\t: 'height';\n\n\ttype Props = 'width' | 'height';\n\tconst props: Props[] =\n\t\tcustomiseWidth && customiseHeight\n\t\t\t? ['width', 'height']\n\t\t\t: [customiseWidth ? 'width' : 'height'];\n\n\tconst defaultSize = {\n\t\twidth: defaultWidth,\n\t\theight: defaultHeight,\n\t};\n\n\t// Get data\n\tinterface IconData {\n\t\twidth: number;\n\t\theight: number;\n\t\tratio: number;\n\t}\n\tlet data: IconData;\n\t$: {\n\t\t// Get common width and height\n\t\tlet width: number = 0;\n\t\tlet height: number = 0;\n\t\tlet hasWidth: boolean = true;\n\t\tlet hasHeight: boolean = true;\n\t\tlet ratio: number = 1;\n\t\tlet hasRatio: boolean = true;\n\t\ticons.forEach((icon) => {\n\t\t\tif (!hasWidth && !hasHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst name = iconToString(icon);\n\t\t\tconst data = Iconify.getIcon?.(name);\n\t\t\tif (!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!width) {\n\t\t\t\t// First icon\n\t\t\t\twidth = data.width!;\n\t\t\t\theight = data.height!;\n\t\t\t\tratio = width / height;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Compare\n\t\t\tif (hasWidth && width !== data.width) {\n\t\t\t\thasWidth = false;\n\t\t\t}\n\t\t\tif (hasHeight && height !== data.height) {\n\t\t\t\thasHeight = false;\n\t\t\t}\n\t\t\tif (hasRatio && data.width! / data.height! !== ratio) {\n\t\t\t\thasRatio = false;\n\t\t\t}\n\t\t});\n\n\t\t// Set data\n\t\tdata = {\n\t\t\twidth: hasWidth ? width : 0,\n\t\t\theight: hasHeight ? height : 0,\n\t\t\tratio: hasRatio ? ratio : 0,\n\t\t};\n\t}\n\n\t// Get placeholders\n\tinterface Placeholders {\n\t\twidth: string;\n\t\theight: string;\n\t}\n\tlet placeholders: Placeholders;\n\t$: {\n\t\tplaceholders = {\n\t\t\twidth: '',\n\t\t\theight: '',\n\t\t};\n\n\t\t// Check if icon is rotated\n\t\tconst rotated = !!(\n\t\t\tcustomisations.rotate && customisations.rotate % 2 === 1\n\t\t);\n\n\t\t// Get placeholder for both sides\n\t\tif (data.ratio !== 0) {\n\t\t\tconst keys: (keyof Placeholders)[] = ['width', 'height'];\n\t\t\tkeys.forEach((key, index) => {\n\t\t\t\tconst altKey = keys[1 - index];\n\t\t\t\tconst placeholderKey = rotated ? altKey : key;\n\n\t\t\t\tlet size: number | string = '';\n\t\t\t\tlet scale = false;\n\t\t\t\tconst customised2 = customisations[rotated ? key : altKey];\n\t\t\t\tif (customised2) {\n\t\t\t\t\t// Another property is customised, use it for ratio\n\t\t\t\t\tsize = customised2;\n\t\t\t\t\tscale = true;\n\t\t\t\t} else if (defaultSize[key] !== '') {\n\t\t\t\t\t// Use default size, do not scale\n\t\t\t\t\tsize = defaultSize[key];\n\t\t\t\t} else if (defaultSize[altKey] !== '') {\n\t\t\t\t\t// Use default size for other property\n\t\t\t\t\tsize = defaultSize[altKey];\n\t\t\t\t\tscale = true;\n\t\t\t\t} else if (data[key]) {\n\t\t\t\t\t// Use icon size\n\t\t\t\t\tsize = data[key];\n\t\t\t\t}\n\n\t\t\t\t// Scale placeholder using size ratio\n\t\t\t\t// console.log(`Size for ${key} is ${size}`);\n\t\t\t\tif (size !== '') {\n\t\t\t\t\tplaceholders[placeholderKey] =\n\t\t\t\t\t\t(scale\n\t\t\t\t\t\t\t? calculateSize(\n\t\t\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\t\t\tkey === 'width'\n\t\t\t\t\t\t\t\t\t\t? data.ratio\n\t\t\t\t\t\t\t\t\t\t: 1 / data.ratio\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: size) + '';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// console.log('Placeholders:', JSON.stringify(placeholders));\n\t}\n</script>\n\n<OptionsBlock {type}>\n\t{#each props as prop, i (prop)}\n\t\t<SizeInput\n\t\t\t{prop}\n\t\t\tvalue={customisations[prop] === null ? '' : customisations[prop] + ''}\n\t\t\tplaceholder={placeholders[prop]}\n\t\t\t{customise} />\n\t{/each}\n</OptionsBlock>\n","<script lang=\"typescript\">\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { phrases } from '../../../../../config/phrases';\n\timport Input from '../../../../ui/Input.svelte';\n\n\t// Input property: width or height\n\ttype Props = 'width' | 'height';\n\texport let prop: Props;\n\n\t// Value\n\texport let value: string;\n\n\t// Placeholder text\n\texport let placeholder: string;\n\n\t// Callback\n\texport let customise: (\n\t\tkey: keyof IconCustomisations,\n\t\tvalue: unknown\n\t) => void;\n\n\t// Get title\n\tlet title: string;\n\t$: {\n\t\ttitle = phrases.footerBlocks[prop];\n\t}\n\n\tlet lastValue = value;\n\tlet inputValue = value;\n\t$: {\n\t\t// Change inputValue when value changes\n\t\tif (lastValue !== value) {\n\t\t\tlastValue = value;\n\t\t\tinputValue = value;\n\t\t}\n\t}\n\n\t// Check input\n\tfunction onInput(newValue: string) {\n\t\tinputValue = newValue;\n\n\t\t// Clean up number: make sure it is empty or complete\n\t\tlet cleanValue = newValue;\n\t\tif (newValue !== '') {\n\t\t\tconst num = parseFloat(newValue);\n\t\t\tcleanValue = '' + num;\n\t\t\tif (isNaN(num) || cleanValue !== newValue || num <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tcustomise(prop, cleanValue);\n\t}\n\n\t// Reset to last valid value\n\tfunction onBlur() {\n\t\tinputValue = value;\n\t}\n</script>\n\n<Input\n\tvalue={inputValue}\n\t{placeholder}\n\t{title}\n\t{onInput}\n\t{onBlur}\n\ticon={'icon-' + prop}\n\ttype=\"number\" />\n","<script lang=\"typescript\">\n\timport type { IconifyIcon } from '@iconify/svelte';\n\timport IconComponent from '@iconify/svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport { Iconify } from '@iconify/search-core/lib/iconify';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { getDimensions } from '../../../../../footer/icon-size';\n\timport {\n\t\ticonSampleSize,\n\t\tdefaultColor,\n\t\tdefaultWidth,\n\t\tdefaultHeight,\n\t} from '../../../../../config/components';\n\n\t// Icon name\n\texport let icon: Icon;\n\n\t// Current customisations\n\texport let customisations: IconCustomisations;\n\n\tconst divisions = [2.5, 3, 3.5];\n\n\t// Get maximum width/height from options\n\tconst maxWidth = iconSampleSize.width;\n\tconst maxHeight = iconSampleSize.height;\n\n\tconst minWidth = Math.floor(maxWidth / 2);\n\tconst minHeight = Math.floor(maxHeight / 2);\n\n\t/**\n\t * Scale sample\n\t */\n\tinterface NumericIconDimensions {\n\t\twidth: number;\n\t\theight: number;\n\t}\n\tfunction scaleSample(size: NumericIconDimensions, canScaleUp: boolean) {\n\t\t// Scale\n\t\twhile (size.width > maxWidth || size.height > maxHeight) {\n\t\t\t// Attempt to divide by 2\n\t\t\tlet newWidth = size.width / 2;\n\t\t\tlet newHeight = size.height / 2;\n\n\t\t\tif (\n\t\t\t\tMath.round(newWidth) !== newWidth ||\n\t\t\t\tMath.round(newHeight) !== newHeight\n\t\t\t) {\n\t\t\t\t// Try to divide by a different number\n\t\t\t\tfor (let i = 0; i < divisions.length; i++) {\n\t\t\t\t\tlet div = divisions[i];\n\t\t\t\t\tlet newWidth2 = size.width / div;\n\t\t\t\t\tlet newHeight2 = size.height / div;\n\t\t\t\t\tif (\n\t\t\t\t\t\tMath.round(newWidth2) === newWidth2 &&\n\t\t\t\t\t\tMath.round(newHeight2) === newHeight2\n\t\t\t\t\t) {\n\t\t\t\t\t\tnewWidth = newWidth2;\n\t\t\t\t\t\tnewHeight = newHeight2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsize.width = newWidth;\n\t\t\tsize.height = newHeight;\n\t\t}\n\n\t\tif (canScaleUp) {\n\t\t\twhile (size.width < minWidth && size.height < minHeight) {\n\t\t\t\tsize.width *= 2;\n\t\t\t\tsize.height *= 2;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Get icon name, data, check data\n\tinterface IconData {\n\t\tname: string;\n\t\tdata: IconifyIcon;\n\t\trotated: boolean;\n\t\tratio: number;\n\t}\n\tlet data: IconData;\n\t$: {\n\t\t// Get name\n\t\tconst name = iconToString(icon);\n\n\t\t// Get data (both getIcon and icon data are available: check is done in footer)\n\t\tconst iconData = Iconify.getIcon!(name)!;\n\n\t\t// Check if icon is rotated (for width/height calculations)\n\t\tconst rotated = !!(\n\t\t\ticonData.width !== iconData.height &&\n\t\t\tcustomisations.rotate &&\n\t\t\tcustomisations.rotate % 2 === 1\n\t\t);\n\n\t\t// Width / height ratio\n\t\tconst ratio = iconData.width! / iconData.height!;\n\n\t\tdata = {\n\t\t\tname,\n\t\t\tdata: iconData,\n\t\t\trotated,\n\t\t\tratio,\n\t\t};\n\t}\n\n\t// Calculate style\n\tlet style: string;\n\t$: {\n\t\tstyle = '';\n\n\t\t// Add color\n\t\tif (customisations.color) {\n\t\t\tstyle += 'color: ' + customisations.color + ';';\n\t\t} else if (defaultColor) {\n\t\t\tstyle += 'color: ' + defaultColor + ';';\n\t\t}\n\n\t\t// Set dimensions\n\t\tif (!customisations.width && !customisations.height) {\n\t\t\t// Calculate size\n\t\t\tlet size: NumericIconDimensions;\n\n\t\t\tif (defaultWidth || defaultHeight) {\n\t\t\t\tsize = getDimensions(\n\t\t\t\t\tdefaultWidth,\n\t\t\t\t\tdefaultHeight,\n\t\t\t\t\tdata.ratio,\n\t\t\t\t\tdata.rotated\n\t\t\t\t) as NumericIconDimensions;\n\t\t\t} else {\n\t\t\t\tsize = getDimensions(\n\t\t\t\t\tdata.data.width!,\n\t\t\t\t\tdata.data.height!,\n\t\t\t\t\tdata.ratio,\n\t\t\t\t\tdata.rotated\n\t\t\t\t) as NumericIconDimensions;\n\t\t\t}\n\n\t\t\t// Scale\n\t\t\tscaleSample(size, true);\n\t\t\tstyle += 'font-size: ' + size.height + 'px;';\n\t\t}\n\t}\n\n\t// Scale sample\n\tlet props: Partial<IconCustomisations>;\n\t$: {\n\t\tprops = {};\n\t\t['hFlip', 'vFlip', 'rotate'].forEach((key) => {\n\t\t\tconst prop = key as keyof IconCustomisations;\n\t\t\tif (customisations[prop]) {\n\t\t\t\t(props as Record<string, unknown>)[prop] = customisations[prop];\n\t\t\t}\n\t\t});\n\n\t\tlet size: NumericIconDimensions | undefined;\n\t\tconst customisedWidth = customisations.width;\n\t\tconst customisedHeight = customisations.height;\n\t\tif (customisedWidth || customisedHeight) {\n\t\t\tsize = getDimensions(\n\t\t\t\tcustomisedWidth ? customisedWidth : '',\n\t\t\t\tcustomisedHeight ? customisedHeight : '',\n\t\t\t\tdata.ratio,\n\t\t\t\tdata.rotated\n\t\t\t) as NumericIconDimensions;\n\t\t} else if (defaultWidth || defaultHeight) {\n\t\t\tsize = getDimensions(\n\t\t\t\tdefaultWidth,\n\t\t\t\tdefaultHeight,\n\t\t\t\tdata.ratio,\n\t\t\t\tdata.rotated\n\t\t\t) as NumericIconDimensions;\n\t\t}\n\n\t\tif (size !== void 0) {\n\t\t\tscaleSample(size, false);\n\t\t\tprops.width = size.width + '';\n\t\t\tprops.height = size.height + '';\n\t\t}\n\t}\n</script>\n\n<div\n\tclass=\"iif-foote\n\tr-sample iif-footer-sample--block iif-footer-sample--loaded\"\n\t{style}>\n\t{#each [data] as icon (icon.name)}\n\t\t<IconComponent icon={icon.name} {...props} />\n\t{/each}\n</div>\n","<script lang=\"typescript\">\n\timport IconComponent from '@iconify/svelte';\n\timport type { IconProps } from '@iconify/svelte';\n\timport type { Icon } from '@iconify/search-core';\n\timport { iconToString } from '@iconify/search-core';\n\timport type { IconCustomisations } from '@iconify/search-core/lib/misc/customisations';\n\timport { phrases } from '../../../../../config/phrases';\n\timport { iconSampleSize } from '../../../../../config/components';\n\n\t// Icon\n\texport let icon: Icon;\n\n\t// Current customisations\n\texport let customisations: IconCustomisations;\n\n\tconst samplePhrases = phrases.footer.inlineSample;\n\n\t// Get maximum width/height from options\n\tconst maxWidth = iconSampleSize.width;\n\tconst maxHeight = iconSampleSize.height;\n\n\t// Get HTML\n\tlet props: IconProps;\n\tlet style: string;\n\t$: {\n\t\tprops = {\n\t\t\ticon: iconToString(icon),\n\t\t};\n\t\tstyle = '';\n\n\t\t// Customisations\n\t\tObject.keys(customisations).forEach((key) => {\n\t\t\tconst attr = key as keyof IconCustomisations;\n\t\t\tconst value = customisations[attr];\n\t\t\tif (\n\t\t\t\tvalue !== void 0 &&\n\t\t\t\tvalue !== '' &&\n\t\t\t\tvalue !== 0 &&\n\t\t\t\tvalue !== false\n\t\t\t) {\n\t\t\t\tif (attr === 'color') {\n\t\t\t\t\tstyle = 'color: ' + value + ';';\n\t\t\t\t} else {\n\t\t\t\t\t((props as unknown) as Record<string, unknown>)[\n\t\t\t\t\t\tattr\n\t\t\t\t\t] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Adjust width and height\n\t\tif (props.width || props.height) {\n\t\t\tconst rotated = !!(customisations.rotate % 2);\n\n\t\t\t// Check maxWidth\n\t\t\tlet key: keyof IconProps = rotated ? 'height' : 'width';\n\t\t\tif (props[key] && (props[key] as number) > maxWidth) {\n\t\t\t\tprops[key] = maxWidth;\n\t\t\t}\n\n\t\t\t// Check maxHeight\n\t\t\tkey = !rotated ? 'height' : 'width';\n\t\t\tif (props[key] && (props[key] as number) > maxHeight) {\n\t\t\t\tprops[key] = maxHeight;\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<div\n\tclass=\"iif-footer-sample iif-footer-sample--inline iif-footer-sample--loaded\">\n\t<p>\n\t\t{samplePhrases.before}\n\t\t<span {style}>\n\t\t\t{#each [props] as iconProps (iconProps.icon)}\n\t\t\t\t<IconComponent {...iconProps} />\n\t\t\t{/each}\n\t\t</span>\n\t\t{samplePhrases.after}\n\t</p>\n</div>\n","<script lang=\"typescript\">\n\timport type {\n\t\tCollectionViewBlocks,\n\t\tFullCollectionRoute,\n\t\tCollectionInfo,\n\t\tFiltersBlock,\n\t} from '@iconify/search-core';\n\timport { getProvider } from '@iconify/search-core';\n\timport type { SelectedIcons } from '../../../wrapper/icons';\n\timport { showCollectionInfoBlock } from '../../../config/components';\n\timport Filters from '../blocks/Filters.svelte';\n\timport CollectionInfoBlock from '../blocks/CollectionInfo.svelte';\n\timport IconsWithPages from '../blocks/IconsWithPages.svelte';\n\timport SearchBlock from '../blocks/Search.svelte';\n\n\t// Selected icons\n\texport let selection: SelectedIcons;\n\n\t// Blocks\n\texport let blocks: CollectionViewBlocks;\n\n\t// Current route\n\texport let route: FullCollectionRoute;\n\n\t// Filter blocks\n\tconst filterBlockKeys: (keyof CollectionViewBlocks)[] = [\n\t\t'tags',\n\t\t'themePrefixes',\n\t\t'themeSuffixes',\n\t];\n\tconst baseClass = 'iif-view--collection';\n\n\t// Provider and prefix from route\n\tlet provider: string;\n\tlet prefix: string;\n\n\t// Collection info\n\tlet info: CollectionInfo | null;\n\n\t// Collection link\n\tlet collectionsLink: string;\n\n\t$: {\n\t\tprovider = route.params.provider;\n\t\tif (typeof provider !== 'string') {\n\t\t\tprovider = '';\n\t\t}\n\t\tprefix = route.params.prefix;\n\t\tinfo = blocks.info === null ? null : blocks.info.info;\n\n\t\t// Get collection link\n\t\tconst providerData = getProvider(provider);\n\t\tif (providerData) {\n\t\t\tcollectionsLink = providerData.links.collection;\n\t\t} else {\n\t\t\tcollectionsLink = '';\n\t\t}\n\t}\n\n\t// Check for filters\n\tinterface FiltersListItem {\n\t\tkey: string;\n\t\titem: FiltersBlock;\n\t}\n\tlet filterBlocks: FiltersListItem[];\n\t$: {\n\t\tfilterBlocks = filterBlockKeys\n\t\t\t.filter((key) => !!blocks[key])\n\t\t\t.map((key) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey,\n\t\t\t\t\titem: (blocks[key] as unknown) as FiltersBlock,\n\t\t\t\t} as FiltersListItem;\n\t\t\t});\n\t}\n</script>\n\n<div\n\tclass=\"iif-view {baseClass}\n\t\t{baseClass}--prefix--{prefix + (provider === '' ? '' : ' ' + baseClass + '--provider--' + provider)}\">\n\t{#if blocks.collections}\n\t\t<div class=\"iff-filters\">\n\t\t\t<Filters\n\t\t\t\tname=\"collections\"\n\t\t\t\tparent={route.parent ? route.parent.type : 'collections'}\n\t\t\t\tlink={collectionsLink}\n\t\t\t\tblock={blocks.collections} />\n\t\t</div>\n\t{/if}\n\n\t{#if showCollectionInfoBlock && info !== null}\n\t\t<CollectionInfoBlock name=\"info\" block={blocks.info} />\n\t{/if}\n\n\t<SearchBlock name=\"filter\" block={blocks.filter} {info} />\n\n\t{#if filterBlocks.length > 0}\n\t\t<div class=\"iff-filters\">\n\t\t\t{#each filterBlocks as item, i (item.key)}\n\t\t\t\t<Filters name={item.key} block={item.item} />\n\t\t\t{/each}\n\t\t</div>\n\t{/if}\n\n\t<IconsWithPages {blocks} {selection} {route} />\n</div>\n","<script lang=\"typescript\">\n\timport type {\n\t\tCollectionsViewBlocks,\n\t\tFullCollectionsRoute,\n\t} from '@iconify/search-core';\n\timport FiltersBlock from '../blocks/Filters.svelte';\n\timport CollectionsFilterBlock from '../blocks/CollectionsFilter.svelte';\n\timport CollectionsListBlock from '../blocks/CollectionsList.svelte';\n\n\t// Blocks\n\texport let blocks: CollectionsViewBlocks;\n\n\t// Route\n\texport let route: FullCollectionsRoute;\n</script>\n\n<div class=\"iif-view iif-view--collections\">\n\t<div class=\"iif-collections-header\">\n\t\t{#if blocks.categories}\n\t\t\t<FiltersBlock name=\"categories\" block={blocks.categories} />\n\t\t{/if}\n\t\t<CollectionsFilterBlock name=\"filter\" block={blocks.filter} />\n\t</div>\n\t<CollectionsListBlock\n\t\tprovider={route.params.provider}\n\t\tname=\"collections\"\n\t\tblock={blocks.collections} />\n</div>\n","<script lang=\"typescript\">\n\timport type {\n\t\tCollectionViewBlocks,\n\t\tFullCustomRoute,\n\t} from '@iconify/search-core';\n\timport type { SelectedIcons } from '../../../wrapper/icons';\n\timport IconsWithPages from '../blocks/IconsWithPages.svelte';\n\timport SearchBlock from '../blocks/Search.svelte';\n\n\t// Route\n\texport let route: FullCustomRoute;\n\n\t// Selected icons\n\texport let selection: SelectedIcons;\n\n\t// Blocks\n\texport let blocks: CollectionViewBlocks;\n</script>\n\n<div\n\tclass=\"iif-view iif-view--custom iif-view--custom--{route.params.customType}\">\n\t<SearchBlock\n\t\tname=\"filter\"\n\t\tblock={blocks.filter}\n\t\tcustomType={route.params.customType} />\n\t<IconsWithPages {blocks} {selection} {route} />\n</div>\n","<script lang=\"typescript\">\n\timport { getContext } from 'svelte';\n\timport type { FullRoute } from '@iconify/search-core';\n\timport type { WrappedRegistry } from '../../../wrapper/registry';\n\timport { phrases } from '../../../config/phrases';\n\timport Block from '../Block.svelte';\n\timport UIIcon from '../../ui/UIIcon.svelte';\n\n\t// Error\n\texport let error: string;\n\n\t// Current route\n\texport let route: FullRoute | null;\n\n\t// Registry\n\tconst registry = getContext('registry') as WrappedRegistry;\n\n\t// Get text and check if can return\n\tconst errorPhrases = phrases.errors;\n\tlet text: string;\n\tlet canReturn: boolean;\n\t$: {\n\t\tcanReturn = !!(\n\t\t\troute &&\n\t\t\t(route.type !== 'collections' ||\n\t\t\t\troute.parent ||\n\t\t\t\t(route.params && route.params.provider)) &&\n\t\t\terrorPhrases.custom.home !== void 0\n\t\t);\n\t\ttext =\n\t\t\terrorPhrases.custom[error] === void 0\n\t\t\t\t? errorPhrases.defaultError\n\t\t\t\t: errorPhrases.custom[error];\n\n\t\tswitch (error) {\n\t\t\tcase 'not_found':\n\t\t\t\ttext = text.replace(\n\t\t\t\t\t'{prefix}',\n\t\t\t\t\troute && route.type === 'collection'\n\t\t\t\t\t\t? '\"' + route.params.prefix + '\"'\n\t\t\t\t\t\t: ''\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase 'bad_route':\n\t\t\t\tcanReturn = errorPhrases.custom.home !== void 0;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction handleReturn() {\n\t\tconst router = registry.router;\n\t\tif (route && route.type === 'collections') {\n\t\t\t// Return to default provider\n\t\t\trouter.home('');\n\t\t} else {\n\t\t\trouter.home();\n\t\t}\n\t}\n</script>\n\n{#each [error] as type (type)}\n\t<Block type=\"error\" extra={'error--' + type}>\n\t\t<UIIcon icon={'error-' + type} />\n\t\t<p>\n\t\t\t{text}\n\t\t\t{#if canReturn}\n\t\t\t\t<br />\n\t\t\t\t<a href=\"# \" on:click|preventDefault={handleReturn}>\n\t\t\t\t\t{errorPhrases.custom.home}\n\t\t\t\t</a>\n\t\t\t{/if}\n\t\t</p>\n\t</Block>\n{/each}\n","<script lang=\"typescript\">\n\timport type {\n\t\tFullSearchRoute,\n\t\tSearchViewBlocks,\n\t} from '@iconify/search-core';\n\timport { getProvider } from '@iconify/search-core';\n\timport type { SelectedIcons } from '../../../wrapper/icons';\n\timport FiltersBlock from '../blocks/Filters.svelte';\n\timport IconsWithPages from '../blocks/IconsWithPages.svelte';\n\n\t// Route\n\texport let route: FullSearchRoute;\n\n\t// Selected icons\n\texport let selection: SelectedIcons;\n\n\t// Blocks\n\texport let blocks: SearchViewBlocks;\n\n\t// Get collection link\n\tlet collectionsLink: string;\n\t$: {\n\t\tlet provider = route.params.provider;\n\t\tif (typeof provider !== 'string') {\n\t\t\tprovider = '';\n\t\t}\n\n\t\t// Get collection link\n\t\tconst providerData = getProvider(provider);\n\t\tif (providerData) {\n\t\t\tcollectionsLink = providerData.links.collection;\n\t\t} else {\n\t\t\tcollectionsLink = '';\n\t\t}\n\t}\n</script>\n\n<div class=\"iif-view iif-view--search\">\n\t{#if blocks.collections}\n\t\t<FiltersBlock\n\t\t\tname=\"collections\"\n\t\t\tblock={blocks.collections}\n\t\t\tlink={collectionsLink} />\n\t{/if}\n\n\t<IconsWithPages {blocks} {selection} {route} />\n</div>\n","<script lang=\"typescript\">\n\timport type { UITranslationAddForm } from '../../phrases/types';\n\timport Input from './Input.svelte';\n\timport UIIcon from './UIIcon.svelte';\n\n\t// Phrases\n\texport let phrases: UITranslationAddForm;\n\n\t// Show icon in button?\n\texport let buttonIcon: boolean = false;\n\n\t// Icon to show for input\n\texport let inputIcon: string = '';\n\n\t// Default value\n\texport let value: string;\n\n\t// Callback\n\texport let onSubmit: (value: string) => void;\n\n\t// Value validation callback\n\texport let onValidate: ((value: string) => boolean) | null = null;\n\n\t// Status to show\n\texport let status: string = '';\n\n\t// Validate value\n\tlet valid: boolean;\n\t$: {\n\t\tvalid = validateValue(value);\n\t}\n\n\t// Get class for button\n\tlet buttonClass: string;\n\t$: {\n\t\tbuttonClass =\n\t\t\t'iif-form-button iif-form-button--primary' +\n\t\t\t(buttonIcon ? ' iif-form-button--with-icon' : '');\n\t}\n\n\t/**\n\t * Validate current value\n\t */\n\tfunction validateValue(value: string): boolean {\n\t\tif (typeof onValidate === 'function') {\n\t\t\treturn onValidate(value);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Submit form\n\t */\n\tfunction submitForm() {\n\t\tonSubmit(value);\n\t}\n</script>\n\n<div class=\"iif-block--add-form\">\n\t{#if phrases.title}\n\t\t<div class=\"iif-block--add-form-title\">{phrases.title}</div>\n\t{/if}\n\t<form\n\t\ton:submit|preventDefault={submitForm}\n\t\tclass=\"iif-block--add-form-form\">\n\t\t<Input\n\t\t\ttype=\"text\"\n\t\t\tbind:value\n\t\t\tplaceholder={phrases.placeholder}\n\t\t\ticon={inputIcon} />\n\t\t<button class={buttonClass} type=\"submit\">\n\t\t\t{#if buttonIcon}\n\t\t\t\t<UIIcon icon=\"plus\" />\n\t\t\t{/if}\n\t\t\t{phrases.submit}\n\t\t</button>\n\t</form>\n\t{#if status}\n\t\t<div class=\"iif-block--add-form-status\">{status}</div>\n\t{/if}\n\t{#if !valid && phrases.invalid}\n\t\t<div class=\"iif-block--add-form-invalid\">{phrases.invalid}</div>\n\t{/if}\n</div>\n","<script lang=\"typescript\">\n\texport let error: string;\n</script>\n\n<div class=\"iif-content-error\">{error}</div>\n","<script lang=\"typescript\">\n\timport type { FiltersFilter } from '@iconify/search-core';\n\timport { maxIndex } from '../../config/theme';\n\n\t// True if filter is active\n\texport let active: boolean = false;\n\n\t// True if at least one filter in block is active\n\texport let hasActive: boolean = false;\n\n\t// Filter data\n\texport let filter: FiltersFilter;\n\n\t// Title\n\texport let title: string;\n\n\t// Callback\n\texport let onClick: () => void;\n\n\t// Link\n\texport let link: string = '# ';\n\n\t// Get class name\n\tconst baseClass = 'iif-filter';\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t(active\n\t\t\t\t? ' ' + baseClass + '--selected'\n\t\t\t\t: hasActive\n\t\t\t\t? ' ' + baseClass + '--unselected'\n\t\t\t\t: '') +\n\t\t\t(filter.index\n\t\t\t\t? ' ' + baseClass + '--' + (filter.index % maxIndex)\n\t\t\t\t: '');\n\t}\n</script>\n\n{#if link}\n\t<a\n\t\tclass={className}\n\t\ton:click|preventDefault={onClick}\n\t\thref={link}>{title}</a>\n{:else}\n\t<button\n\t\tclass={className}\n\t\tdisabled={filter.disabled}\n\t\ton:click|preventDefault={onClick}>\n\t\t{title}\n\t</button>\n{/if}\n","<script lang=\"typescript\">\n\timport UIIcon from './UIIcon.svelte';\n\n\t// Icon\n\texport let icon: string;\n\n\t// Title\n\texport let title: string;\n\n\t// Callback\n\texport let onClick: () => void;\n</script>\n\n<button class=\"iif-icon-button\" {title} on:click={onClick}>\n\t<UIIcon {icon} />\n</button>\n","<script lang=\"typescript\">\n\timport { onMount } from 'svelte';\n\timport UIIcon from './UIIcon.svelte';\n\n\t// Placeholder text\n\texport let placeholder: string = '';\n\n\t// Hint\n\texport let title: string = '';\n\n\t// Default value\n\texport let value: string = '';\n\n\t// True if input should be disabled\n\texport let disabled: boolean = false;\n\n\t// Optional icon to show before input\n\texport let icon: string = '';\n\n\t// Values to add extra classes for styling\n\texport let type: string = '';\n\texport let extra: string = '';\n\n\t// Callback to call when value has changed\n\texport let onInput: ((value: string) => void) | null = null;\n\n\t// Callback to call when input loses focus\n\texport let onBlur: ((value: string) => void) | null = null;\n\n\t// True if input should automatically focus\n\texport let autofocus: boolean = false;\n\n\t// Icon status\n\tlet hasIcon: boolean = false;\n\tfunction iconLoaded() {\n\t\thasIcon = true;\n\t}\n\n\t// Base class name\n\tconst baseClass = 'iif-input';\n\n\t// Get wrapper class name\n\tlet wrapperClassName: string;\n\t$: {\n\t\twrapperClassName = baseClass + '-wrapper';\n\t\t// Add states\n\t\twrapperClassName +=\n\t\t\t// Content?\n\t\t\t' ' +\n\t\t\twrapperClassName +\n\t\t\t(value === '' ? '--empty' : '--has-content') +\n\t\t\t// Disabled\n\t\t\t(disabled ? ' ' + wrapperClassName + '--disabled' : '');\n\t}\n\n\t// Get container class name\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t// Placeholder\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t'--with' +\n\t\t\t(placeholder === '' ? 'out' : '') +\n\t\t\t'-placeholder' +\n\t\t\t// Icon\n\t\t\t(hasIcon ? ' ' + baseClass + '--with-icon' : '') +\n\t\t\t// Type\n\t\t\t(type !== '' ? ' ' + baseClass + '--' + type : '') +\n\t\t\t// Disabled\n\t\t\t(disabled ? ' ' + baseClass + '--disabled' : '');\n\t}\n\n\t// Get icon style\n\tlet iconStyle: string;\n\t$: {\n\t\ticonStyle = '';\n\t\tif (type === 'color' && extra !== '') {\n\t\t\ticonStyle = 'opacity: 1; color: ' + extra;\n\t\t}\n\t}\n\n\t// Reset value\n\tfunction resetValue() {\n\t\tvalue = '';\n\t\thandleInput();\n\t}\n\n\t// on:input binding as onInput\n\tfunction handleInput() {\n\t\tif (onInput) {\n\t\t\tonInput(value);\n\t\t}\n\t}\n\n\t// on:blur binding as onBlur\n\tfunction handleBlur() {\n\t\tif (onBlur) {\n\t\t\tonBlur(value);\n\t\t}\n\t}\n\n\t// Focus\n\tlet inputRef: HTMLElement;\n\tlet mounted = false;\n\tonMount(() => {\n\t\tmounted = true;\n\t\tif (autofocus) {\n\t\t\tinputRef.focus();\n\t\t}\n\t});\n</script>\n\n<div class={wrapperClassName}>\n\t<div class={className}>\n\t\t{#if mounted && icon !== ''}\n\t\t\t<div class=\"iif-input-icon\" style={iconStyle}>\n\t\t\t\t<UIIcon {icon} onLoad={iconLoaded} />\n\t\t\t</div>\n\t\t{/if}\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\ttitle={title ? title : placeholder}\n\t\t\tbind:value\n\t\t\ton:input={handleInput}\n\t\t\ton:blur={handleBlur}\n\t\t\tspellcheck={false}\n\t\t\tautocomplete=\"off\"\n\t\t\tautocorrect=\"off\"\n\t\t\tautocapitalize=\"off\"\n\t\t\tinputmode={type === 'number' ? 'decimal' : 'text'}\n\t\t\t{disabled}\n\t\t\tbind:this={inputRef} />\n\t\t{#if mounted && value === '' && placeholder !== ''}\n\t\t\t<div class=\"iif-input-placeholder\">{placeholder}</div>\n\t\t{/if}\n\t\t{#if mounted && value !== ''}\n\t\t\t<a\n\t\t\t\tclass=\"iif-input-reset\"\n\t\t\t\thref=\"# \"\n\t\t\t\ton:click|preventDefault={resetValue}>\n\t\t\t\t<UIIcon icon=\"reset\">x</UIIcon>\n\t\t\t</a>\n\t\t{/if}\n\t</div>\n</div>\n","<script lang=\"typescript\">\n\timport UIIcon from './UIIcon.svelte';\n\n\t// Optional icon to show before button\n\texport let icon: string = '';\n\n\t// Event to trigger\n\texport let onClick: () => void;\n\n\t// Title\n\texport let title: string;\n\n\t// Text (using title if missing)\n\texport let text: string | null = null;\n\n\t// If true, text is shown only if icon is missing\n\texport let textOptional: boolean = false;\n\n\t// Status to add to class\n\texport let status: string = '';\n\n\t// Get class name\n\tconst baseClass = 'iif-option-button';\n\tlet className: string;\n\t$: {\n\t\tclassName =\n\t\t\tbaseClass +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t(icon ? '--with-icon' : '--without-icon') +\n\t\t\t' ' +\n\t\t\tbaseClass +\n\t\t\t((text && !textOptional) || !icon\n\t\t\t\t? '--with-text'\n\t\t\t\t: '--without-text') +\n\t\t\t(status === '' ? '' : ' ' + baseClass + '--' + status);\n\t}\n</script>\n\n<button class={className} {title} on:click={onClick}>\n\t{#if icon}\n\t\t<UIIcon {icon} />\n\t{/if}\n\t<span>{text ? text : title}</span>\n</button>\n","<script lang=\"typescript\">\n\timport { maxIndex } from '../../config/theme';\n\timport type { Tab } from '../types';\n\timport UIIcon from './UIIcon.svelte';\n\n\texport let tabs: Tab[];\n\texport let selected: string;\n\texport let onClick: (key: string) => void;\n\n\tconst baseClass = 'iif-tabs';\n\tconst baseItemClass = 'iif-tab';\n\n\t// Cleaned up tab data\n\tinterface CleanedTab {\n\t\tkey: string;\n\t\tclassName: string;\n\t\ttitle: string;\n\t\tindex: number;\n\t\thref: string;\n\t\thint?: string;\n\t\ticon?: string;\n\t\tonClick: () => void;\n\t}\n\n\t// Generated tabs list\n\tinterface TabsList {\n\t\tside: 'left' | 'right';\n\t\titems: CleanedTab[];\n\t\tempty: boolean;\n\t}\n\n\t// Generate tabs list\n\tlet list: TabsList[] = [];\n\t$: {\n\t\tconst leftList: CleanedTab[] = [];\n\t\tconst rightList: CleanedTab[] = [];\n\t\ttabs.forEach((tab) => {\n\t\t\tconst key = tab.key;\n\t\t\tconst index =\n\t\t\t\t(tab.index === void 0 ? list.length : tab.index) % maxIndex;\n\n\t\t\t// Generate class name\n\t\t\tconst className =\n\t\t\t\tbaseItemClass +\n\t\t\t\t' ' +\n\t\t\t\tbaseItemClass +\n\t\t\t\t'--' +\n\t\t\t\tindex +\n\t\t\t\t(key === selected ? ' ' + baseItemClass + '--selected' : '') +\n\t\t\t\t(tab.type ? ' ' + baseItemClass + '--' + tab.type : '');\n\n\t\t\t// Generate item\n\t\t\tconst item: CleanedTab = {\n\t\t\t\tkey,\n\t\t\t\tclassName,\n\t\t\t\ttitle: tab.title,\n\t\t\t\tindex,\n\t\t\t\thref: tab.href === void 0 ? '# ' : tab.href,\n\t\t\t\ticon: tab.icon,\n\t\t\t\thint: tab.hint,\n\t\t\t\tonClick:\n\t\t\t\t\ttab.onClick === void 0 ? () => onClick(key) : tab.onClick,\n\t\t\t};\n\n\t\t\tif (tab.right) {\n\t\t\t\trightList.push(item);\n\t\t\t} else {\n\t\t\t\tleftList.push(item);\n\t\t\t}\n\t\t});\n\n\t\tlist = [\n\t\t\t{\n\t\t\t\tside: 'left',\n\t\t\t\titems: leftList,\n\t\t\t\tempty: !leftList.length,\n\t\t\t},\n\t\t\t{\n\t\t\t\tside: 'right',\n\t\t\t\titems: rightList,\n\t\t\t\tempty: !rightList.length,\n\t\t\t},\n\t\t];\n\t}\n</script>\n\n<div class={baseClass}>\n\t{#each list as listItem, i (listItem.side)}\n\t\t{#if !listItem.empty}\n\t\t\t<div class={baseClass + '-' + listItem.side}>\n\t\t\t\t{#each listItem.items as tab, j (tab.key)}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={tab.href}\n\t\t\t\t\t\tclass={tab.className}\n\t\t\t\t\t\ttitle={tab.hint}\n\t\t\t\t\t\ton:click|preventDefault={tab.onClick}>\n\t\t\t\t\t\t{#if tab.icon}\n\t\t\t\t\t\t\t<UIIcon icon={tab.icon} />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if tab.title !== ''}{tab.title}{/if}\n\t\t\t\t\t</a>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t{/if}\n\t{/each}\n</div>\n","<script context=\"module\" lang=\"typescript\">\n\tlet firstMount: boolean = true;\n</script>\n\n<script lang=\"typescript\">\n\timport Icon, { loadIcons } from '@iconify/svelte';\n\timport { onMount } from 'svelte';\n\timport { icons, iconsClass } from '../../config/theme';\n\n\t// Icon to render\n\texport let icon: string;\n\n\t// Optional event to trigger when icon has loaded\n\texport let onLoad: (() => void) | null = null;\n\n\t// Loaded status\n\tlet loaded = false;\n\n\tfunction loadCallback() {\n\t\tloaded = true;\n\t\tif (onLoad) {\n\t\t\tonLoad();\n\t\t}\n\t}\n\n\t// Preload icons only after mount, which is not used in SSR\n\tonMount(() => {\n\t\tif (firstMount) {\n\t\t\tfirstMount = false;\n\t\t\tloadIcons(\n\t\t\t\tObject.values(icons).filter((name) => !!name) as string[]\n\t\t\t);\n\t\t}\n\t});\n\n\t// Resolve icon name\n\tlet iconName: string | null;\n\t$: {\n\t\ticonName =\n\t\t\ttypeof icons[icon] === 'string'\n\t\t\t\t? icons[icon]\n\t\t\t\t: icon.indexOf(':') === -1\n\t\t\t\t? null\n\t\t\t\t: icon;\n\t}\n</script>\n\n{#if iconName !== null}\n\t<Icon\n\t\ticon={iconName}\n\t\tclass={iconsClass}\n\t\tonLoad={loadCallback} />{#if !loaded}\n\t\t<slot />\n\t{/if}\n{:else}\n\t<slot />\n{/if}\n"],"names":["convertProviderData","addProvider","customProviders","addCustomAPIProviders","registry","length","forEach","item","converted","provider","codeConfig","providers","Object","create","defaultProvider","api","raw","npmES","file","npmCJS","svg","showProviders","canAddProviders","canFocusSearch","showCollectionInfoBlock","canShortenIconName","showFooterBlockTitles","canToggleFooterBlocks","showInfoInFooter","showCustomisatons","customiseColor","customiseWidth","customiseHeight","customiseRotate","customiseFlip","customiseInline","defaultColor","defaultWidth","defaultHeight","iconSampleSize","width","height","showButtons","footerButtons","submit","type","display","cancel","showCode","phrases","addCollection","maxIndex","showCollectionAuthorLink","collectionClickable","customIconsPrefix","importThemeIcons","prefix","icons","body","iconsClass","defaultComponentsConfig","list","toggleList","codeTab","multiSelect","propsVisible","infoVisible","codeVisible","calculateSize","getDimensions","ratio","rotated","shortenIconName","route","icon","fullName","params","name","Wrapper","container","document","getElementById","wrapper","callback","event","console","log","lang","search","placeholder","collection","collections","defaultPlaceholder","button","errors","noCollections","noIconsFound","defaultError","custom","loading","timeout","invalid_data","empty","not_found","bad_route","home","header","full","more","modes","grid","select","headerWithCount","tooltip","size","colorless","colorful","moreAsNumber","pagination","prev","next","filters","collectionInfo","total","author","license","palette","link","parent","by","section","add","addForm","title","invalid","status","error","exists","unsupported","footer","iconName","iconNamePlaceholder","inlineSample","before","after","remove","about","change","close","footerBlocks","title2","color","flip","hFlip","vFlip","rotate","alignment","mode","footerOptionButtons","String","fromCharCode","rotateTitle","inline","block","inlineHint","blockHint","codeSamples","copy","copied","headingHidden","heading","childTabTitle","childTabTitles","react","docsDefault","docs","iconify","css","intro","component","intro1","intro2","head","listProviders","validateProvider","url","parts","toLowerCase","split","protocol","shift","host","hostParts","domain","match","port","retrieveProvider","sendQuery","data","providerData","convertedData","indexOf","getActiveProvider","getIcon","_api","addAPIProvider","disableCache","setIconify","compareObjects","stringToIcon","validateIcon","customisedConfig","IconFinderCore","setComponentsConfig","objectToRoute","defaultCustomisations","filterCustomisations","mergeCustomisations","addToSelection","removeFromSelection","isIconSelected","selectionToArray","Container","assertNever","s","functions","getAPI","customisations","_params","customState","state","coreParams","_coreCallback","bind","config","iconSets","Array","core","_core","_registry","setCustom","_internalCallback","_externalLinkCallback","_state","partialRoute","iconValue","_selection","_selectionLength","setTimeout","_status","newStatus","_container","$set","hidden","_hide","destroy","props","viewChanged","blocks","selection","selectionLength","target","_initContainer","_triggerEvent","_setRoute","fullRoute","$$","selectionEvent","_selectIcon","selected","_setCustomisations","href","getAttribute","router","loadRoute","updateContainer","done","update","components","changed","slice","providerIcons","push","oldCount","matches","aliases","concat","filter","found","keys","i","result"],"sourceRoot":""}