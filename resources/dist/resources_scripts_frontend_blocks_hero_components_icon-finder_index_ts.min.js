"use strict";
(self["webpackChunkgameplay_blocks"] = self["webpackChunkgameplay_blocks"] || []).push([["resources_scripts_frontend_blocks_hero_components_icon-finder_index_ts"],{

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/api.ts":
/*!*************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/config/api.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addCustomAPIProviders": () => (/* binding */ addCustomAPIProviders)
/* harmony export */ });
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");


/**
 * List of custom API providers
 *
 * Each array item must have:
 *  provider: unique provider key, similar to icon set prefix
 *  title: title to show in API providers tabs (used if showProviders is enabled in ./components.ts)
 *  api: host name(s) as string or array of strings
 */
var customProviders = [
  /*
  {
  	provider: 'local',
  	title: 'Local Test',
  	api: 'http://localhost:3100',
     },
     */
];
/**
 * Add custom API providers
 */

function addCustomAPIProviders(registry) {
  if (customProviders.length) {
    customProviders.forEach(function (item) {
      var converted = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_0__.convertProviderData)('', item);

      if (converted) {
        (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_0__.addProvider)(item.provider, converted);
      }
    }); // Set default API provider in router
    // registry.router.defaultProvider = customProviders[0].provider;
  }
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/code.ts":
/*!**************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/config/code.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "codeConfig": () => (/* binding */ codeConfig)
/* harmony export */ });
/**
 * Configuration for API providers for code samples
 */
var codeConfig = {
  providers: Object.create(null),
  // Default configuration
  defaultProvider: {
    api: true,
    raw: true
  }
}; // Add default provider

codeConfig.providers[''] = {
  // Show packages that use API
  api: true,
  // NPM packages for React, Vue, Svelte components
  npmES: {
    "package": '@iconify-icons/{prefix}',
    file: '/{name}'
  },
  npmCJS: {
    "package": '@iconify/icons-{prefix}',
    file: '/{name}'
  },
  // Allow generating SVG
  raw: true,
  // Remote SVGs
  svg: 'https://api.iconify.design/{prefix}/{name}.svg'
};

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts":
/*!********************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "showProviders": () => (/* binding */ showProviders),
/* harmony export */   "canAddProviders": () => (/* binding */ canAddProviders),
/* harmony export */   "canFocusSearch": () => (/* binding */ canFocusSearch),
/* harmony export */   "showCollectionInfoBlock": () => (/* binding */ showCollectionInfoBlock),
/* harmony export */   "canShortenIconName": () => (/* binding */ canShortenIconName),
/* harmony export */   "showFooterBlockTitles": () => (/* binding */ showFooterBlockTitles),
/* harmony export */   "canToggleFooterBlocks": () => (/* binding */ canToggleFooterBlocks),
/* harmony export */   "showInfoInFooter": () => (/* binding */ showInfoInFooter),
/* harmony export */   "showCustomisatons": () => (/* binding */ showCustomisatons),
/* harmony export */   "customiseColor": () => (/* binding */ customiseColor),
/* harmony export */   "customiseWidth": () => (/* binding */ customiseWidth),
/* harmony export */   "customiseHeight": () => (/* binding */ customiseHeight),
/* harmony export */   "customiseRotate": () => (/* binding */ customiseRotate),
/* harmony export */   "customiseFlip": () => (/* binding */ customiseFlip),
/* harmony export */   "customiseInline": () => (/* binding */ customiseInline),
/* harmony export */   "defaultColor": () => (/* binding */ defaultColor),
/* harmony export */   "defaultWidth": () => (/* binding */ defaultWidth),
/* harmony export */   "defaultHeight": () => (/* binding */ defaultHeight),
/* harmony export */   "iconSampleSize": () => (/* binding */ iconSampleSize),
/* harmony export */   "showButtons": () => (/* binding */ showButtons),
/* harmony export */   "footerButtons": () => (/* binding */ footerButtons),
/* harmony export */   "showCode": () => (/* binding */ showCode)
/* harmony export */ });
/**
 * Can show and add API providers?
 */
var showProviders = false;
var canAddProviders = false;
/**
 * Automatically focus search
 *
 * Do not change value to true, comment out code below it. It checks for mobile devices
 */

var canFocusSearch = false;
/*
export const canFocusSearch = (() => {
	try {
		return (
			window.matchMedia('(min-width: 600px) and (min-height: 600px)')
				.matches &&
			// Do not focus if touch device is detected
			!('ontouchstart' in window)
		);
	} catch (err) {
		return false;
	}
})();
*/

/**
 * Show collection information block (author, license, etc...) when browsing collection
 *
 * Also see showInfoInFooter below (need to set both to false to disable icon set info block)
 */

var showCollectionInfoBlock = true;
/**
 * Can shorten icon name in footer?
 */

var canShortenIconName = true;
/**
 * Show title for footer blocks?
 */

var showFooterBlockTitles = false;
/**
 * Toggle footer blocks?
 */

var canToggleFooterBlocks = false;
/**
 * Show info block in footer?
 *
 * Block will show information about icon set for selected icon.
 *
 * When multiple icons are selected, block will be shown only when all icons have the same prefix.
 *
 * When browsing icon set, block will be shown only if block above icons
 * list is not shown or when prefix is different or showCollectionInfoBlock is disabled.
 */

var showInfoInFooter = true;
/**
 * List of properties to customise
 */
// Global toggle: disables all properties

var showCustomisatons = true; // Color

var customiseColor = true; // Size

var customiseWidth = true;
var customiseHeight = true; // Rotation

var customiseRotate = true; // Flip

var customiseFlip = true; // Inline / block

var customiseInline = false;
/**
 * Default values for color, width and height
 */

var defaultColor = '#000';
var defaultWidth = '';
var defaultHeight = '';
/**
 * Limits for sample icon in footer
 */

var iconSampleSize = {
  width: 200,
  height: 300
};
/**
 * Footer buttons
 */

var showButtons = true;
var footerButtons = {
  submit: {
    type: 'primary',
    display: 'icons' // Show only when icon(s) have been selected

  },
  cancel: {
    type: 'secondary'
  }
};
/**
 * Sample code
 */
// To disable code block, also change link for CodeBlock to Empty.svelte in ../components/footer/*.svelte (it will remove component from bundle)

var showCode = false;

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts":
/*!*****************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "phrases": () => (/* reexport safe */ _phrases_en__WEBPACK_IMPORTED_MODULE_0__.phrases)
/* harmony export */ });
/* harmony import */ var _phrases_en__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../phrases/en */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/phrases/en.ts");
/**
 * Language pack
 *
 * Change import to swap language pack
 */


/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts":
/*!***************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "maxIndex": () => (/* binding */ maxIndex),
/* harmony export */   "showCollectionAuthorLink": () => (/* binding */ showCollectionAuthorLink),
/* harmony export */   "collectionClickable": () => (/* binding */ collectionClickable),
/* harmony export */   "importThemeIcons": () => (/* binding */ importThemeIcons),
/* harmony export */   "icons": () => (/* binding */ icons),
/* harmony export */   "iconsClass": () => (/* binding */ iconsClass)
/* harmony export */ });
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");

/**
 * Maximum color index (number of colors in rotation - 1)
 *
 * See _rotation.scss in style directory
 */

var maxIndex = 11;
/**
 * Collections list options
 */
// Show author link. Disable if whole block should be clickable

var showCollectionAuthorLink = true; // True if entire collection block should be clickable

var collectionClickable = false;
/**
 * Import custom icons
 */

var customIconsPrefix = 'icon-finder-theme';
function importThemeIcons() {
  (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_0__.addCollection)({
    prefix: customIconsPrefix,
    icons: {
      'error-loading': {
        body: '<g clip-path="url(#clip0)"><path d="M9.9.2l-.2 1C12.7 2 15 4.7 15 8c0 3.9-3.1 7-7 7s-7-3.1-7-7c0-3.3 2.3-6 5.3-6.8l-.2-1C2.6 1.1 0 4.3 0 8c0 4.4 3.6 8 8 8s8-3.6 8-8c0-3.7-2.6-6.9-6.1-7.8z" fill="currentColor"/></g><defs><clipPath id="clip0"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs>'
      },
      'empty': {
        body: ''
      }
    },
    width: 16,
    height: 16
  });
}
/**
 * Icons used by UI
 */

var icons = {
  'reset': 'line-md:close',
  'search': 'line-md:search',
  'down': 'line-md:chevron-down',
  'left': 'line-md:chevron-left',
  'right': 'line-md:chevron-right',
  'parent': 'line-md:chevron-small-left',
  'expand': 'line-md:chevron-small-right',
  'grid': 'line-md:grid-3-solid',
  'list': 'line-md:list-3-solid',
  'check-list': 'line-md:check-list-3-solid',
  'check-list-checked': 'line-md:check-list-3-twotone',
  'error-loading': customIconsPrefix + ':error-loading',
  'icon-width': 'line-md:double-arrow-horizontal',
  'icon-height': 'line-md:double-arrow-vertical',
  'color': 'line-md:paint-drop-half-twotone',
  'color-filled': 'line-md:paint-drop-filled',
  'rotate0': 'line-md:close',
  'rotate1': 'line-md:rotate-90',
  'rotate2': 'line-md:rotate-180',
  'rotate3': 'line-md:rotate-270',
  'h-flip': 'line-md:double-arrow-horizontal',
  'v-flip': 'line-md:double-arrow-vertical',
  'plus': 'line-md:plus',
  'link': 'line-md:external-link',
  'clipboard': 'line-md:clipboard-arrow-twotone',
  'confirm': 'line-md:confirm',
  'docs': 'line-md:document-list-twotone',
  'mode-block': 'line-md:valign-baseline',
  'mode-inline': 'line-md:valign-middle',
  'selecting-selected': 'line-md:confirm',
  'selecting-unselected': customIconsPrefix + ':empty'
};
/**
 * Class to add to icons
 */

var iconsClass = 'iconify--line-md';

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/wrapper.ts":
/*!*****************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/config/wrapper.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultComponentsConfig": () => (/* binding */ defaultComponentsConfig)
/* harmony export */ });
/**
 * Components config
 */

/**
 * Default values
 */
var defaultComponentsConfig = {
  // Icons list mode.
  list: false,
  // True if icons list mode can be changed.
  toggleList: true,
  // Active code tab
  codeTab: '',
  // Can select multiple icons
  multiSelect: false,
  // Toggle footer blocks
  propsVisible: true,
  infoVisible: false,
  codeVisible: false
};

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/icon-size.ts":
/*!*******************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/icon-size.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDimensions": () => (/* binding */ getDimensions)
/* harmony export */ });
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");


/**
 * Calculate both dimensions
 */
function getDimensions(width, height, ratio, rotated) {
  if (width && height) {
    return {
      width: rotated ? height : width,
      height: rotated ? width : height
    };
  }

  if (!height) {
    height = (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_0__.calculateSize)(width, rotated ? ratio : 1 / ratio);
  } else {
    width = (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_0__.calculateSize)(height, rotated ? 1 / ratio : ratio);
  }

  return {
    width: width,
    height: height
  };
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/shorten-icon-name.ts":
/*!***************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/shorten-icon-name.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "shortenIconName": () => (/* binding */ shortenIconName)
/* harmony export */ });
function shortenIconName(route, icon, fullName) {
  if (!route) {
    return fullName;
  }

  switch (route.type) {
    case 'collections':
    case 'search':
    case 'collection':
      break;

    default:
      return fullName;
  }

  var params = route.params; // Get and check provider

  var provider = params && typeof params.provider === 'string' ? params.provider : '';

  if (icon.provider !== provider) {
    return fullName;
  } // Check if icon has same prefix (only for collection)


  if (route.type === 'collection' && icon.prefix === route.params.prefix) {
    return icon.name;
  } // Remove only provider


  return icon.prefix + ':' + icon.name;
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/index.ts":
/*!********************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/index.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapper */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper.ts");

var container = document.getElementById('container');

if (container) {
  var wrapper = new _wrapper__WEBPACK_IMPORTED_MODULE_0__.Wrapper({
    container: container,
    callback: function callback(event) {
      console.log('Event:', event);
    }
  });
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/phrases/en.ts":
/*!*************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/phrases/en.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "phrases": () => (/* binding */ phrases)
/* harmony export */ });
/**
 * Phrases.
 *
 * Do not import phrases from this file, use ../config/phrases.ts instead
 */
var phrases = {
  lang: 'English',
  search: {
    placeholder: {
      collection: 'Search {name}',
      collections: 'Filter collections'
    },
    defaultPlaceholder: 'Search all icons',
    button: 'Search Icons'
  },
  errors: {
    noCollections: 'No matching icon sets found.',
    noIconsFound: 'No icons found.',
    defaultError: 'Error loading Iconify Icon Finder.',
    custom: {
      loading: 'Loading...',
      timeout: 'Could not connect to Iconify API.',
      invalid_data: 'Invalid response from Iconify API.',
      empty: 'Nothing to show.',
      not_found: 'Collection {prefix} does not exist.',
      bad_route: 'Invalid route.',
      home: 'Click here to return to main page.'
    }
  },
  icons: {
    header: {
      full: 'Displaying {count} icons:',
      more: 'Displaying {count} icons (click second page to load more results):',
      modes: {
        list: 'Display icons as list',
        grid: 'Display icons as grid'
      },
      select: 'Select multiple icons'
    },
    headerWithCount: {
      0: 'No icons to display.',
      1: 'Displaying 1 icon:'
    },
    tooltip: {
      size: '\nSize: {size}',
      colorless: '',
      colorful: '\nHas palette',
      "char": '\nIcon font character: {char}',
      length: '' //'\nContent: {length} bytes',

    },
    more: 'Find more icons',
    // '3 ...',
    moreAsNumber: false // True if text above refers to third page, false if text above shows "Find more icons" or similar text

  },
  pagination: {
    prev: 'Previous page',
    next: 'Next page'
  },
  filters: {
    'uncategorised': 'Uncategorised',
    'collections': 'Filter search results by icon set:',
    'collections-collections': '',
    'tags': 'Filter by category:',
    'themePrefixes': 'Icon type:',
    'themeSuffixes': 'Icon type:'
  },
  collectionInfo: {
    total: 'Number of icons:',
    height: 'Height of icons:',
    author: 'Author:',
    license: 'License:',
    palette: 'Palette:',
    colorless: 'Colorless',
    colorful: 'Has colors',
    link: 'Show all icons'
  },
  parent: {
    "default": 'Return to previous page',
    collections: 'Return to collections list',
    collection: 'Return to {name}',
    search: 'Return to search results'
  },
  collection: {
    by: 'by '
  },
  providers: {
    section: 'Icons source:',
    add: 'Add Provider',
    addForm: {
      title: "Enter API provider's host name:",
      placeholder: 'https://api.iconify.design',
      submit: 'Add API Provider',
      invalid: 'Example of a valid API host name: https://api.iconify.design'
    },
    status: {
      loading: 'Checking {host}...',
      error: '{host} is not a valid Iconify API.',
      exists: 'API from {host} is already available or API has wrong configuration.',
      unsupported: 'API from {host} does not support icon search.'
    }
  },
  footer: {
    iconName: 'Selected icon:',
    iconNamePlaceholder: 'Enter icon by name...',
    inlineSample: {
      before: 'Text with icon sample',
      after: 'to show icon alignment in text.'
    },
    remove: 'Remove {name}',
    select: 'Select {name}',
    about: 'Aboout {title}'
  },
  footerButtons: {
    submit: 'Submit',
    change: 'Change',
    select: 'Select',
    cancel: 'Cancel',
    close: 'Close'
  },
  footerBlocks: {
    title: 'Customize icon',
    title2: 'Customize icons',
    color: 'Color',
    flip: 'Flip',
    hFlip: 'Horizontal',
    vFlip: 'Vertical',
    rotate: 'Rotate',
    width: 'Width',
    height: 'Height',
    size: 'Size',
    // Width + height in one block
    alignment: 'Alignment',
    mode: 'Mode',
    icons: 'Selected icons'
  },
  footerOptionButtons: {
    hFlip: 'Horizontal',
    vFlip: 'Vertical',
    rotate: '{num}' + String.fromCharCode(0x00b0),
    rotateTitle: 'Rotate {num}' + String.fromCharCode(0x00b0),
    inline: 'Inline',
    block: 'Block',
    inlineHint: 'Icon is vertically aligned slightly below baseline, like icon font, fitting perfectly in text.',
    blockHint: 'Icon is rendered as is, without custom vertical alignment.'
  },
  codeSamples: {
    copy: 'Copy to clipboard',
    copied: 'Copied to clipboard.',
    headingHidden: 'Show code for "{name}" for developers',
    heading: 'Code for "{name}" for developers',
    childTabTitle: '{key} versions:',
    childTabTitles: {
      react: 'React component versions:',
      svg: 'SVG options:'
    },
    docsDefault: 'Click here for more information about {title} component.',
    docs: {
      iconify: 'Click here for more information about Iconify SVG framework.',
      css: 'Click here for more code examples.'
    },
    intro: {
      'svg-box': 'This SVG contains extra empty rectangle that matches viewBox. It is needed to keep icon dimensions when importing icon in software that ignores viewBox attribute.',
      'svg-uri': 'You can use this as background image or as content for pseudo element in stylesheet.',
      'css': "Add code below to your stylesheet to use icon as background image or as pseudo element's content:"
    },
    component: {
      'install-offline': 'Install component and icon set:',
      'install-simple': 'Install component:',
      'install-addon': 'Install addon:',
      'import-offline': 'Import component and icon data:',
      'import-simple': 'Import component:',
      'vue-offline': 'Add icon data and icon component to your component:',
      'vue-simple': 'Add icon component to your component:',
      'use-in-code': 'Use it in your code:',
      'use-in-html': 'Use it in HTML code:',
      'use-in-template': 'Use component in template:',
      'use-generic': ''
    },
    iconify: {
      intro1: 'Iconify SVG framework makes using icons as easy as icon fonts. To use "{name}" in HTML, add this code to the document:',
      intro2: 'Iconify SVG framework will load icon data from Iconify API and replace that placeholder with SVG.',
      head: 'Make sure you import Iconify SVG framework:'
    }
  }
};

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/add-provider.ts":
/*!************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/add-provider.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateProvider": () => (/* binding */ validateProvider),
/* harmony export */   "retrieveProvider": () => (/* binding */ retrieveProvider)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");

 // Errors

/**
 * Validate API provider host
 */
function validateProvider(url) {
  var parts = url.toLowerCase().split('/'); // Check protocol

  var protocol = parts.shift();

  switch (protocol) {
    case 'http:':
    case 'https:':
      break;

    default:
      return null;
  } // Double '/'


  if (parts.shift() !== '') {
    return null;
  } // Host


  var host = parts.shift();

  if (typeof host !== 'string') {
    return null;
  }

  var hostParts = host.split(':');

  if (hostParts.length > 2) {
    return null;
  } // Validate domain


  var domain = hostParts.shift();

  if (!domain || !domain.match(/^[a-z0-9.-]+$/)) {
    return null;
  } // Validate port


  var port = hostParts.shift();

  if (port !== void 0 && !port.match(/^[0-9]+$/)) {
    return null;
  } // Return protocol + host, ignore the rest


  return protocol + '//' + host;
}
/**
 * Type for callback
 */

/**
 * Retrieve API provider data
 */
function retrieveProvider(registry, host, callback) {
  // console.log('retrieveProvider:', host);
  var api = registry.api;
  api.sendQuery(host, '/provider', function (status, data) {
    var providerData = data;
    var convertedData;
    var error = 'error';

    switch (status) {
      case 'success':
        // Validate
        if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__["default"])(providerData) !== 'object') {
          break;
        } // Check if API supports provider


        if (typeof providerData.provider !== 'string') {
          error = 'unsupported';
          break;
        } // Convert data


        convertedData = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.convertProviderData)(host, providerData);

        if (!convertedData) {
          // console.log('Failed to convert data');
          break;
        }

        var _provider = providerData.provider; // Check if provider exists

        var list = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.listProviders)();

        if (list.indexOf(_provider) !== -1) {
          error = 'exists';
          break;
        } // Add provider


        (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.addProvider)(_provider, convertedData);
        callback(host, true, _provider);
        return;
    }

    callback(host, false, error);
  });
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/get-provider.ts":
/*!************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/get-provider.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getActiveProvider": () => (/* binding */ getActiveProvider)
/* harmony export */ });
/**
 * Get active provider from route
 */
function getActiveProvider(route) {
  if (!route) {
    return '';
  }

  var params = route.params;

  if (params && typeof params.provider === 'string') {
    return params.provider;
  }

  if (route.parent) {
    return getActiveProvider(route.parent);
  }

  return '';
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper.ts":
/*!**********************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Wrapper": () => (/* binding */ Wrapper)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @iconify/search-core/lib/misc/customisations */ "./node_modules/@iconify/search-core/lib/misc/customisations.js");
/* harmony import */ var _config_wrapper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config/wrapper */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/wrapper.ts");
/* harmony import */ var _wrapper_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./wrapper/icons */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper/icons.ts");
/* harmony import */ var _config_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./config/api */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/api.ts");
/* harmony import */ var _config_theme__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./config/theme */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts");
/* harmony import */ var _components_Container_svelte__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/Container.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Container.svelte");









 // Change import to change container component

 // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-unused-vars-experimental, @typescript-eslint/no-empty-function

function assertNever(s) {} // Set SVG framework
// getVersion() will will use hardcoded version number generated when building core


var functions = {
  getIcon: _iconify_svelte__WEBPACK_IMPORTED_MODULE_3__.getIcon,
  addCollection: _iconify_svelte__WEBPACK_IMPORTED_MODULE_3__.addCollection,
  getAPI: _iconify_svelte__WEBPACK_IMPORTED_MODULE_3__._api.getAPI,
  addAPIProvider: _iconify_svelte__WEBPACK_IMPORTED_MODULE_3__.addAPIProvider
};
(0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.setIconify)(functions); // Import theme icons

(0,_config_theme__WEBPACK_IMPORTED_MODULE_9__.importThemeIcons)(); // Add components configuration to config object

(0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.setComponentsConfig)(_config_wrapper__WEBPACK_IMPORTED_MODULE_6__.defaultComponentsConfig);
/**
 * Wrapper class
 */

var Wrapper = /*#__PURE__*/function () {
  // Parameters
  // Current state, always up to date
  // Selected icons as nested object
  // Number of selected icons
  // Status
  // Core instance and registry
  // Container component, added on first render

  /**
   * Constructor
   */
  function Wrapper(params) {
    var _this = this;

    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Wrapper);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_params", void 0);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_state", {
      icons: [],
      customisations: {}
    });

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_selection", Object.create(null));

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_selectionLength", 0);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_status", 'loading');

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_core", void 0);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_registry", void 0);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__["default"])(this, "_container", null);

    this._params = params;
    var customState = params.state; // Set core parameters

    var coreParams = {
      callback: this._coreCallback.bind(this)
    };

    if (customState && customState.config) {
      coreParams.config = customState.config;
    }

    if (params.iconSets) {
      coreParams.iconSets = params.iconSets instanceof Array ? {
        iconSets: params.iconSets
      } : params.iconSets; // console.log('Params.iconSets:', coreParams.iconSets);
    } // Disable Iconify cache


    (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_3__.disableCache)('all'); // Init core

    var core = this._core = new _iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.IconFinderCore(coreParams);
    var registry = this._registry = core.registry; // Callback

    registry.setCustom('callback', this._internalCallback.bind(this)); // External link callback

    registry.setCustom('link', this._externalLinkCallback.bind(this)); // Add API providers

    (0,_config_api__WEBPACK_IMPORTED_MODULE_8__.addCustomAPIProviders)(registry); // Set initial state

    var state = this._state;
    state.config = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.customisedConfig)(registry.config); // Store partial route in state

    var route = registry.partialRoute;
    state.route = route ? route : void 0;

    if (customState) {
      // Set custom stuff
      if (customState.icons) {
        customState.icons.forEach(function (icon) {
          var iconValue = typeof icon === 'string' ? (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.stringToIcon)(icon) : icon;

          if ((0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.validateIcon)(iconValue)) {
            (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.addToSelection)(_this._selection, iconValue);
          }
        });
        state.icons = (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.selectionToArray)(this._selection);
        this._selectionLength = state.icons.length;
      }

      if (customState.customisations) {
        state.customisations = customState.customisations;
      }

      if (customState.route) {
        setTimeout(function () {
          // Set on next tick
          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
          registry.partialRoute = customState.route;
        });
      }
    }
  }
  /**
   * Get container status
   */


  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Wrapper, [{
    key: "getStatus",
    value: function getStatus() {
      return this._status;
    }
    /**
     * Get current state
     */

  }, {
    key: "getState",
    value: function getState() {
      return this._state;
    }
    /**
     * Hide or destroy
     */

  }, {
    key: "_hide",
    value: function _hide(newStatus) {
      switch (this._status) {
        case 'hidden':
        case 'destroyed':
          // Cannot hide
          return;

        case 'loading':
        case '':
          // Hide
          break;

        default:
          assertNever(this._status);
      }

      this._status = newStatus;

      if (this._container) {
        this._container.$set({
          hidden: true
        });
      }
    }
    /**
     * Hide
     */

  }, {
    key: "hide",
    value: function hide() {
      this._hide('hidden');
    }
    /**
     * Destroy
     */

  }, {
    key: "destroy",
    value: function destroy() {
      if (this._status !== 'destroyed') {
        this._hide('destroyed');

        this._container = null;

        this._registry.destroy();
      }
    }
    /**
     * Show
     */

  }, {
    key: "show",
    value: function show() {
      switch (this._status) {
        // Cannot show or loading
        case 'destroyed': // Already visible or loading

        case 'loading':
        case '':
          return;

        case 'hidden':
          // Show
          break;

        default:
          assertNever(this._status);
      }

      this._status = '';

      if (this._container) {
        this._container.$set({
          hidden: false
        });
      }
    }
    /**
     * Create Container component
     */

  }, {
    key: "_initContainer",
    value: function _initContainer(data) {
      var state = this._state; // Check if container should be visible

      var hidden = false;

      switch (this._status) {
        case 'hidden':
        case 'destroyed':
          hidden = true;

        case '':
        case 'loading':
          break;

        default:
          assertNever(this._status);
      } // Properties


      var props = {
        // From RouterEvent
        viewChanged: data.viewChanged,
        error: data.error,
        blocks: data.blocks,
        // Convert to full route
        route: data.route ? (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.objectToRoute)(data.route) : null,
        // Selected icons
        selection: this._selection,
        selectionLength: this._selectionLength,
        // Full icon customisations
        customisations: (0,_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.mergeCustomisations)(_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.defaultCustomisations, state.customisations ? state.customisations : {}),
        // Registry
        registry: this._core.registry,
        // Status
        hidden: hidden
      }; // Constructor parameters

      var params = {
        target: this._params.container,
        props: props
      };
      return new _components_Container_svelte__WEBPACK_IMPORTED_MODULE_10__["default"](params);
    }
    /**
     * Trigger event
     */

  }, {
    key: "_triggerEvent",
    value: function _triggerEvent(event) {
      if (this._status !== 'destroyed' && this._params.callback) {
        this._params.callback(event);
      }
    }
    /**
     * Callback from core
     */

  }, {
    key: "_coreCallback",
    value: function _coreCallback(data) {
      if (!this._container) {
        // Create new container on first render
        this._container = this._initContainer(data); // Mark as loaded

        if (this._status === 'loading') {
          this._status = '';

          this._triggerEvent({
            type: 'load'
          });
        } // Save route


        if (data.route) {
          this._setRoute(data.route);
        }

        return;
      } // Update container


      var container = this._container; // Convert partial route to full route.
      // Use full route in components, partial route in state and callback

      var partialRoute = data.route;
      var fullRoute = partialRoute ? (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.objectToRoute)(partialRoute) : null;
      data.route = fullRoute; // Check for changes

      if (data.viewChanged || !(0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.compareObjects)(data.route, container.$$.props.route)) {
        // Change everything
        container.$set(data); // Save route

        if (partialRoute) {
          this._setRoute(partialRoute);
        }
      } else {
        // Route is the same, so if error has changed, only error and blocks need update
        if (data.error === '' || data.error !== container.$$.props.error) {
          container.$set({
            error: data.error,
            blocks: data.blocks
          });
        }
      }
    }
    /**
     * Select icon
     */

  }, {
    key: "_internalCallback",
    value: function _internalCallback(event) {
      // console.log('Internal event:', event);
      var icon;
      var selectionEvent;
      var type = event.type;

      switch (type) {
        case 'selection':
          // Selected icon changed: trigger event and update container (this event does not automatically update container)
          selectionEvent = event;

          if (typeof selectionEvent.icon === 'string') {
            icon = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.stringToIcon)(selectionEvent.icon);
          } else {
            icon = selectionEvent.icon;
          }

          this._selectIcon(icon, typeof selectionEvent.selected === 'boolean' ? selectionEvent.selected : 'force', true);

          return;

        case 'customisation':
          // Customisation was clicked: trigger event
          this._setCustomisations(event.customisations);

          return;

        case 'button':
          // Button was clicked: trigger event
          this._triggerEvent({
            type: 'button',
            button: event.button,
            state: this._state
          });

          return;

        case 'config':
          // Configuration changed: trigger event
          this._state.config = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.customisedConfig)(this._registry.config);

          this._triggerEvent({
            type: 'config',
            config: this._state.config
          });

          return;

        default:
          // Should never reach this code
          assertNever(type);
      }
    }
    /**
     * External link was clicked
     */

  }, {
    key: "_externalLinkCallback",
    value: function _externalLinkCallback(event) {
      if (event && event.target) {
        var target = event.target;
        var href = target.getAttribute('href');

        if (typeof href === 'string') {
          this._triggerEvent({
            type: 'link',
            href: href,
            event: event
          });
        }
      }
    }
    /**
     * Set route
     */

  }, {
    key: "_setRoute",
    value: function _setRoute(route) {
      var state = this._state; // Check if route has changed

      if (state.route === void 0 || !(0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.compareObjects)(route, state.route)) {
        state.route = route;

        this._triggerEvent({
          type: 'route',
          route: route
        });

        return true;
      }

      return false;
    }
    /**
     * Set route
     */

  }, {
    key: "setRoute",
    value: function setRoute(route) {
      if (this._status === 'destroyed') {
        return;
      }

      var router = this._core.router;

      function loadRoute() {
        router.partialRoute = route;
      }

      if (!this._container) {
        // Load on next tick
        setTimeout(loadRoute);
      } else {
        loadRoute();
      }
    }
    /**
     * Select icon
     */

  }, {
    key: "_selectIcon",
    value: function _selectIcon(icon, select, updateContainer) {
      var _this2 = this;

      var state = this._state;

      var done = function done() {
        _this2._selectionLength = state.icons.length;

        if (updateContainer && _this2._container) {
          var update = {
            selection: _this2._selection,
            selectionLength: _this2._selectionLength
          };

          _this2._container.$set(update);
        }

        _this2._triggerEvent({
          type: 'selection',
          icons: state.icons
        });
      };

      if (!icon) {
        // De-select everything?
        if (select === true || state.icons.length !== 1) {
          return false;
        } // Reset selection


        this._selection = Object.create(null);
        state.icons = [];
        done();
        return true;
      } // Check if icon is selected


      var selected = !!this._selectionLength && (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.isIconSelected)(this._selection, icon);

      if (selected === select || selected && select === 'force') {
        return false;
      }

      if (!selected && select === 'force' || !this._registry.config.components.multiSelect) {
        // Clear selection if multiple icons cannot be selected and icon is not selected
        this._selection = Object.create(null);
      } // Toggle icon


      if (selected) {
        (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.removeFromSelection)(this._selection, icon);
      } else {
        (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.addToSelection)(this._selection, icon);
      } // Update stuff


      state.icons = (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.selectionToArray)(this._selection);
      done(); // Reset customisations for multiple icons

      if (state.icons.length > 1) {
        var changed = false;
        var customisations = (0,_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.mergeCustomisations)(_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.defaultCustomisations, state.customisations);

        if (customisations.inline) {
          customisations.inline = false;
          changed = true;
        }

        if (changed) {
          this._setCustomisations(customisations);
        }
      }

      return true;
    }
    /**
     * Select icon(s)
     */

  }, {
    key: "selectIcons",
    value: function selectIcons(icons) {
      if (this._status === 'destroyed') {
        return;
      }

      var state = this._state; // Reset icons

      this._selection = Object.create(null);
      var selection = this._selection; // Add all icons (only last icon if multiple icons cannot be selected)

      if (icons) {
        (this._registry.config.components.multiSelect ? icons : icons.slice(-1)).forEach(function (icon) {
          var converted = typeof icon === 'string' ? (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.stringToIcon)(icon) : icon;

          if (converted) {
            (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.addToSelection)(selection, converted);
          }
        });
      } // Update variables


      state.icons = (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_7__.selectionToArray)(selection);
      this._selectionLength = state.icons.length; // Update container

      if (this._container) {
        var update = {
          selection: selection,
          selectionLength: this._selectionLength
        };

        this._container.$set(update);
      } // Trigger event


      this._triggerEvent({
        type: 'selection',
        icons: state.icons
      });
    }
    /**
     * Change customisations
     */

  }, {
    key: "_setCustomisations",
    value: function _setCustomisations(customisations) {
      var state = this._state;

      if (state.customisations !== void 0 && (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_4__.compareObjects)(state.customisations, customisations)) {
        return false;
      } // Save partial customisations in state


      state.customisations = (0,_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.filterCustomisations)(customisations); // Update container

      if (this._container) {
        this._container.$set({
          customisations: customisations
        });
      } else {
        if (!this._params.state) {
          this._params.state = {};
        }

        this._params.state.customisations = customisations;
      } // Trigger evemt


      this._triggerEvent({
        type: 'customisations',
        customisations: customisations
      });

      return true;
    }
    /**
     * Change customisations
     */

  }, {
    key: "setCustomisations",
    value: function setCustomisations(customisations) {
      if (this._status === 'destroyed') {
        return;
      }

      this._setCustomisations((0,_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.mergeCustomisations)(_iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__.defaultCustomisations, customisations));
    }
  }]);

  return Wrapper;
}();

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper/icons.ts":
/*!****************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper/icons.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addToSelection": () => (/* binding */ addToSelection),
/* harmony export */   "removeFromSelection": () => (/* binding */ removeFromSelection),
/* harmony export */   "isIconSelected": () => (/* binding */ isIconSelected),
/* harmony export */   "selectionToArray": () => (/* binding */ selectionToArray)
/* harmony export */ });
/**
 * Type of icon selection:
 *
 * boolean = select/deselect
 * 'toggle' = toggle
 * 'force' = force selection: deselect other icons
 */

/**
 * Selected icons: [provider][prefix] = array of names
 */

/**
 * Add icon to selection
 */
function addToSelection(icons, icon) {
  if (icons[icon.provider] === void 0) {
    icons[icon.provider] = Object.create(null);
  }

  var providerIcons = icons[icon.provider];

  if (providerIcons[icon.prefix] === void 0) {
    providerIcons[icon.prefix] = [];
  }

  var list = providerIcons[icon.prefix];

  if (list.indexOf(icon.name) === -1) {
    list.push(icon.name);
    return true;
  }

  return false;
}
/**
 * Remove icon from selection
 */

function removeFromSelection(icons, icon) {
  if (icons[icon.provider] === void 0 || icons[icon.provider][icon.prefix] === void 0) {
    return false;
  }

  var providerIcons = icons[icon.provider];
  var oldCount = providerIcons[icon.prefix].length;
  var matches = icon.aliases ? icon.aliases.concat([icon.name]) : [icon.name];
  providerIcons[icon.prefix] = providerIcons[icon.prefix].filter(function (name) {
    return matches.indexOf(name) === -1;
  });
  var found = oldCount !== providerIcons[icon.prefix].length;

  if (!providerIcons[icon.prefix].length) {
    // Clean up
    delete providerIcons[icon.prefix];

    if (!Object.keys(providerIcons).length) {
      delete icons[icon.provider];
    }
  }

  return found;
}
/**
 * Check if icon is selected
 */

function isIconSelected(icons, icon) {
  // Check if provider and prefix exist
  if (icons[icon.provider] === void 0) {
    return false;
  }

  var provider = icons[icon.provider];

  if (provider[icon.prefix] === void 0) {
    return false;
  } // Check name and aliases


  var list = provider[icon.prefix];

  if (list.indexOf(icon.name) !== -1) {
    return true;
  }

  if (icon.aliases) {
    for (var i = 0; i < icon.aliases.length; i++) {
      if (list.indexOf(icon.aliases[i]) !== -1) {
        return true;
      }
    }
  }

  return false;
}
/**
 * Convert selection to array
 */

function selectionToArray(icons) {
  var result = [];
  Object.keys(icons).forEach(function (provider) {
    Object.keys(icons[provider]).forEach(function (prefix) {
      icons[provider][prefix].forEach(function (name) {
        result.push({
          provider: provider,
          prefix: prefix,
          name: name
        });
      });
    });
  });
  return result;
}

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Container.svelte":
/*!***************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Container.svelte ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _Wrapper_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Wrapper.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Wrapper.svelte");
/* harmony import */ var _content_Content_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content/Content.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Content.svelte");
/* harmony import */ var _content_Footer_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./content/Footer.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Footer.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/Container.svelte generated by Svelte v3.43.1 */






const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/Container.svelte";

// (17:0) {#if hidden !== true}
function create_if_block(ctx) {
	let wrapper;
	let current;

	wrapper = new _Wrapper_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(wrapper.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(wrapper, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const wrapper_changes = {};

			if (dirty & /*$$scope, selection, selectionLength, route, customisations, viewChanged, error, blocks*/ 759) {
				wrapper_changes.$$scope = { dirty, ctx };
			}

			wrapper.$set(wrapper_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(wrapper.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(wrapper.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(wrapper, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(17:0) {#if hidden !== true}",
		ctx
	});

	return block;
}

// (18:1) <Wrapper>
function create_default_slot(ctx) {
	let content;
	let t;
	let footer;
	let current;

	content = new _content_Content_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				selection: /*selection*/ ctx[0],
				viewChanged: /*viewChanged*/ ctx[4],
				error: /*error*/ ctx[5],
				route: /*route*/ ctx[6],
				blocks: /*blocks*/ ctx[7]
			},
			$$inline: true
		});

	footer = new _content_Footer_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				selection: /*selection*/ ctx[0],
				selectionLength: /*selectionLength*/ ctx[1],
				route: /*route*/ ctx[6],
				customisations: /*customisations*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(content.$$.fragment);
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(footer.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(content, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(footer, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const content_changes = {};
			if (dirty & /*selection*/ 1) content_changes.selection = /*selection*/ ctx[0];
			if (dirty & /*viewChanged*/ 16) content_changes.viewChanged = /*viewChanged*/ ctx[4];
			if (dirty & /*error*/ 32) content_changes.error = /*error*/ ctx[5];
			if (dirty & /*route*/ 64) content_changes.route = /*route*/ ctx[6];
			if (dirty & /*blocks*/ 128) content_changes.blocks = /*blocks*/ ctx[7];
			content.$set(content_changes);
			const footer_changes = {};
			if (dirty & /*selection*/ 1) footer_changes.selection = /*selection*/ ctx[0];
			if (dirty & /*selectionLength*/ 2) footer_changes.selectionLength = /*selectionLength*/ ctx[1];
			if (dirty & /*route*/ 64) footer_changes.route = /*route*/ ctx[6];
			if (dirty & /*customisations*/ 4) footer_changes.customisations = /*customisations*/ ctx[2];
			footer.$set(footer_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(content.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(footer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(content.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(footer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(content, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(footer, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(18:1) <Wrapper>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*hidden*/ ctx[3] !== true && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*hidden*/ ctx[3] !== true) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*hidden*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Container', slots, []);
	let { registry } = $$props;
	let { selection } = $$props;
	let { selectionLength } = $$props;
	let { customisations } = $$props;
	let { hidden } = $$props;
	let { viewChanged } = $$props;
	let { error } = $$props;
	let { route } = $$props;
	let { blocks } = $$props;
	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.setContext)('registry', registry);

	const writable_props = [
		'registry',
		'selection',
		'selectionLength',
		'customisations',
		'hidden',
		'viewChanged',
		'error',
		'route',
		'blocks'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Container> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('registry' in $$props) $$invalidate(8, registry = $$props.registry);
		if ('selection' in $$props) $$invalidate(0, selection = $$props.selection);
		if ('selectionLength' in $$props) $$invalidate(1, selectionLength = $$props.selectionLength);
		if ('customisations' in $$props) $$invalidate(2, customisations = $$props.customisations);
		if ('hidden' in $$props) $$invalidate(3, hidden = $$props.hidden);
		if ('viewChanged' in $$props) $$invalidate(4, viewChanged = $$props.viewChanged);
		if ('error' in $$props) $$invalidate(5, error = $$props.error);
		if ('route' in $$props) $$invalidate(6, route = $$props.route);
		if ('blocks' in $$props) $$invalidate(7, blocks = $$props.blocks);
	};

	$$self.$capture_state = () => ({
		setContext: svelte__WEBPACK_IMPORTED_MODULE_1__.setContext,
		Wrapper: _Wrapper_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		Content: _content_Content_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		Footer: _content_Footer_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		registry,
		selection,
		selectionLength,
		customisations,
		hidden,
		viewChanged,
		error,
		route,
		blocks
	});

	$$self.$inject_state = $$props => {
		if ('registry' in $$props) $$invalidate(8, registry = $$props.registry);
		if ('selection' in $$props) $$invalidate(0, selection = $$props.selection);
		if ('selectionLength' in $$props) $$invalidate(1, selectionLength = $$props.selectionLength);
		if ('customisations' in $$props) $$invalidate(2, customisations = $$props.customisations);
		if ('hidden' in $$props) $$invalidate(3, hidden = $$props.hidden);
		if ('viewChanged' in $$props) $$invalidate(4, viewChanged = $$props.viewChanged);
		if ('error' in $$props) $$invalidate(5, error = $$props.error);
		if ('route' in $$props) $$invalidate(6, route = $$props.route);
		if ('blocks' in $$props) $$invalidate(7, blocks = $$props.blocks);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		selection,
		selectionLength,
		customisations,
		hidden,
		viewChanged,
		error,
		route,
		blocks,
		registry
	];
}

class Container extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			registry: 8,
			selection: 0,
			selectionLength: 1,
			customisations: 2,
			hidden: 3,
			viewChanged: 4,
			error: 5,
			route: 6,
			blocks: 7
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Container",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*registry*/ ctx[8] === undefined && !('registry' in props)) {
			console.warn("<Container> was created without expected prop 'registry'");
		}

		if (/*selection*/ ctx[0] === undefined && !('selection' in props)) {
			console.warn("<Container> was created without expected prop 'selection'");
		}

		if (/*selectionLength*/ ctx[1] === undefined && !('selectionLength' in props)) {
			console.warn("<Container> was created without expected prop 'selectionLength'");
		}

		if (/*customisations*/ ctx[2] === undefined && !('customisations' in props)) {
			console.warn("<Container> was created without expected prop 'customisations'");
		}

		if (/*hidden*/ ctx[3] === undefined && !('hidden' in props)) {
			console.warn("<Container> was created without expected prop 'hidden'");
		}

		if (/*viewChanged*/ ctx[4] === undefined && !('viewChanged' in props)) {
			console.warn("<Container> was created without expected prop 'viewChanged'");
		}

		if (/*error*/ ctx[5] === undefined && !('error' in props)) {
			console.warn("<Container> was created without expected prop 'error'");
		}

		if (/*route*/ ctx[6] === undefined && !('route' in props)) {
			console.warn("<Container> was created without expected prop 'route'");
		}

		if (/*blocks*/ ctx[7] === undefined && !('blocks' in props)) {
			console.warn("<Container> was created without expected prop 'blocks'");
		}
	}

	get registry() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set registry(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selection() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectionLength() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectionLength(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get hidden() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set hidden(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get viewChanged() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set viewChanged(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Container);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Wrapper.svelte":
/*!*************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/Wrapper.svelte ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/Wrapper.svelte generated by Svelte v3.43.1 */


const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/Wrapper.svelte";

function create_fragment(ctx) {
	let div;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_slot)(default_slot_template, ctx, /*$$scope*/ ctx[0], null);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (default_slot) default_slot.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-wrapper");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 0, 0, 0);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 1)) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_slot_base)(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[0],
						!current
						? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_all_dirty_from_scope)(/*$$scope*/ ctx[0])
						: (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_slot_changes)(default_slot_template, /*$$scope*/ ctx[0], dirty, null),
						null
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (default_slot) default_slot.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Wrapper', slots, ['default']);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Wrapper> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('$$scope' in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	return [$$scope, slots];
}

class Wrapper extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Wrapper",
			options,
			id: create_fragment.name
		});
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Wrapper);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte":
/*!*******************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte generated by Svelte v3.43.1 */


const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte";

function create_fragment(ctx) {
	let div;
	let current;
	const default_slot_template = /*#slots*/ ctx[5].default;
	const default_slot = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_slot)(default_slot_template, ctx, /*$$scope*/ ctx[4], null);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (default_slot) default_slot.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", /*className*/ ctx[0]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 20, 0, 467);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 16)) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_slot_base)(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[4],
						!current
						? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_all_dirty_from_scope)(/*$$scope*/ ctx[4])
						: (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_slot_changes)(default_slot_template, /*$$scope*/ ctx[4], dirty, null),
						null
					);
				}
			}

			if (!current || dirty & /*className*/ 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", /*className*/ ctx[0]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (default_slot) default_slot.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-block';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Block', slots, ['default']);
	let { type = '' } = $$props;
	let { name = '' } = $$props;
	let { extra = '' } = $$props;
	let className;
	const writable_props = ['type', 'name', 'extra'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Block> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('type' in $$props) $$invalidate(1, type = $$props.type);
		if ('name' in $$props) $$invalidate(2, name = $$props.name);
		if ('extra' in $$props) $$invalidate(3, extra = $$props.extra);
		if ('$$scope' in $$props) $$invalidate(4, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({ type, name, extra, baseClass, className });

	$$self.$inject_state = $$props => {
		if ('type' in $$props) $$invalidate(1, type = $$props.type);
		if ('name' in $$props) $$invalidate(2, name = $$props.name);
		if ('extra' in $$props) $$invalidate(3, extra = $$props.extra);
		if ('className' in $$props) $$invalidate(0, className = $$props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*type, className, name, extra*/ 15) {
			$: {
				$$invalidate(0, className = baseClass);

				if (type !== '') {
					let typeBase = ' ' + baseClass + '--' + type;
					$$invalidate(0, className += typeBase);

					if (name !== '') {
						$$invalidate(0, className += typeBase + '--' + name);
					}
				}

				if (extra !== '') {
					$$invalidate(0, className += ' ' + baseClass + '--' + extra);
				}
			}
		}
	};

	return [className, type, name, extra, $$scope, slots];
}

class Block extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { type: 1, name: 2, extra: 3 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Block",
			options,
			id: create_fragment.name
		});
	}

	get type() {
		throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set type(value) {
		throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get name() {
		throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get extra() {
		throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set extra(value) {
		throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Block);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Content.svelte":
/*!*********************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Content.svelte ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _provider_get_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../provider/get-provider */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/get-provider.ts");
/* harmony import */ var _blocks_GlobalSearch_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blocks/GlobalSearch.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/GlobalSearch.svelte");
/* harmony import */ var _blocks_Parent_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blocks/Parent.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Parent.svelte");
/* harmony import */ var _blocks_Providers_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blocks/Providers.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Providers.svelte");
/* harmony import */ var _views_Collections_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./views/Collections.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collections.svelte");
/* harmony import */ var _views_Collection_svelte__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./views/Collection.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collection.svelte");
/* harmony import */ var _views_Search_svelte__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./views/Search.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Search.svelte");
/* harmony import */ var _views_Custom_svelte__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./views/Custom.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Custom.svelte");
/* harmony import */ var _views_Error_svelte__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./views/Error.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Error.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Content.svelte generated by Svelte v3.43.1 */













const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Content.svelte";

// (108:1) {#if providersVisible}
function create_if_block_8(ctx) {
	let providersblock;
	let current;

	providersblock = new _blocks_Providers_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				providers: /*providers*/ ctx[6],
				activeProvider: /*activeProvider*/ ctx[9]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(providersblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(providersblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const providersblock_changes = {};
			if (dirty & /*providers*/ 64) providersblock_changes.providers = /*providers*/ ctx[6];
			if (dirty & /*activeProvider*/ 512) providersblock_changes.activeProvider = /*activeProvider*/ ctx[9];
			providersblock.$set(providersblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(providersblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(providersblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(providersblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_8.name,
		type: "if",
		source: "(108:1) {#if providersVisible}",
		ctx
	});

	return block;
}

// (112:1) {#if showGlobalSearch}
function create_if_block_7(ctx) {
	let searchblock;
	let current;

	searchblock = new _blocks_GlobalSearch_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				viewChanged: /*viewChanged*/ ctx[1],
				route: /*route*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(searchblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(searchblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const searchblock_changes = {};
			if (dirty & /*viewChanged*/ 2) searchblock_changes.viewChanged = /*viewChanged*/ ctx[1];
			if (dirty & /*route*/ 8) searchblock_changes.route = /*route*/ ctx[3];
			searchblock.$set(searchblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(searchblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(searchblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(searchblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_7.name,
		type: "if",
		source: "(112:1) {#if showGlobalSearch}",
		ctx
	});

	return block;
}

// (116:1) {#if route?.parent}
function create_if_block_6(ctx) {
	let parentblock;
	let current;

	parentblock = new _blocks_Parent_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: { route: /*route*/ ctx[3] },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(parentblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(parentblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const parentblock_changes = {};
			if (dirty & /*route*/ 8) parentblock_changes.route = /*route*/ ctx[3];
			parentblock.$set(parentblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(parentblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(parentblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(parentblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_6.name,
		type: "if",
		source: "(116:1) {#if route?.parent}",
		ctx
	});

	return block;
}

// (120:1) {#if !route || route.type !== 'empty'}
function create_if_block(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;

	const if_block_creators = [
		create_if_block_1,
		create_if_block_2,
		create_if_block_3,
		create_if_block_4,
		create_if_block_5,
		create_else_block
	];

	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*error*/ ctx[2] !== '' || !/*route*/ ctx[3]) return 0;
		if (/*route*/ ctx[3].type === 'collections') return 1;
		if (/*route*/ ctx[3].type === 'collection') return 2;
		if (/*route*/ ctx[3].type === 'search') return 3;
		if (/*route*/ ctx[3].type === 'custom') return 4;
		return 5;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(120:1) {#if !route || route.type !== 'empty'}",
		ctx
	});

	return block;
}

// (131:2) {:else}
function create_else_block(ctx) {
	let viewerror;
	let current;

	viewerror = new _views_Error_svelte__WEBPACK_IMPORTED_MODULE_11__["default"]({
			props: {
				error: "bad_route",
				route: /*route*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(viewerror.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(viewerror, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const viewerror_changes = {};
			if (dirty & /*route*/ 8) viewerror_changes.route = /*route*/ ctx[3];
			viewerror.$set(viewerror_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(viewerror.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(viewerror.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(viewerror, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(131:2) {:else}",
		ctx
	});

	return block;
}

// (129:36) 
function create_if_block_5(ctx) {
	let customview;
	let current;

	customview = new _views_Custom_svelte__WEBPACK_IMPORTED_MODULE_10__["default"]({
			props: {
				route: /*route*/ ctx[3],
				blocks: /*blocks*/ ctx[4],
				selection: /*selection*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(customview.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(customview, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const customview_changes = {};
			if (dirty & /*route*/ 8) customview_changes.route = /*route*/ ctx[3];
			if (dirty & /*blocks*/ 16) customview_changes.blocks = /*blocks*/ ctx[4];
			if (dirty & /*selection*/ 1) customview_changes.selection = /*selection*/ ctx[0];
			customview.$set(customview_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(customview.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(customview.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(customview, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_5.name,
		type: "if",
		source: "(129:36) ",
		ctx
	});

	return block;
}

// (127:36) 
function create_if_block_4(ctx) {
	let searchview;
	let current;

	searchview = new _views_Search_svelte__WEBPACK_IMPORTED_MODULE_9__["default"]({
			props: {
				route: /*route*/ ctx[3],
				blocks: /*blocks*/ ctx[4],
				selection: /*selection*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(searchview.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(searchview, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const searchview_changes = {};
			if (dirty & /*route*/ 8) searchview_changes.route = /*route*/ ctx[3];
			if (dirty & /*blocks*/ 16) searchview_changes.blocks = /*blocks*/ ctx[4];
			if (dirty & /*selection*/ 1) searchview_changes.selection = /*selection*/ ctx[0];
			searchview.$set(searchview_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(searchview.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(searchview.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(searchview, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(127:36) ",
		ctx
	});

	return block;
}

// (125:40) 
function create_if_block_3(ctx) {
	let collectionview;
	let current;

	collectionview = new _views_Collection_svelte__WEBPACK_IMPORTED_MODULE_8__["default"]({
			props: {
				route: /*route*/ ctx[3],
				blocks: /*blocks*/ ctx[4],
				selection: /*selection*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(collectionview.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(collectionview, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const collectionview_changes = {};
			if (dirty & /*route*/ 8) collectionview_changes.route = /*route*/ ctx[3];
			if (dirty & /*blocks*/ 16) collectionview_changes.blocks = /*blocks*/ ctx[4];
			if (dirty & /*selection*/ 1) collectionview_changes.selection = /*selection*/ ctx[0];
			collectionview.$set(collectionview_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(collectionview.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(collectionview.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(collectionview, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(125:40) ",
		ctx
	});

	return block;
}

// (123:41) 
function create_if_block_2(ctx) {
	let collectionsview;
	let current;

	collectionsview = new _views_Collections_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				route: /*route*/ ctx[3],
				blocks: /*blocks*/ ctx[4]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(collectionsview.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(collectionsview, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const collectionsview_changes = {};
			if (dirty & /*route*/ 8) collectionsview_changes.route = /*route*/ ctx[3];
			if (dirty & /*blocks*/ 16) collectionsview_changes.blocks = /*blocks*/ ctx[4];
			collectionsview.$set(collectionsview_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(collectionsview.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(collectionsview.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(collectionsview, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(123:41) ",
		ctx
	});

	return block;
}

// (121:2) {#if error !== '' || !route}
function create_if_block_1(ctx) {
	let viewerror;
	let current;

	viewerror = new _views_Error_svelte__WEBPACK_IMPORTED_MODULE_11__["default"]({
			props: {
				error: /*error*/ ctx[2] !== '' ? /*error*/ ctx[2] : 'bad_route',
				route: /*route*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(viewerror.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(viewerror, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const viewerror_changes = {};
			if (dirty & /*error*/ 4) viewerror_changes.error = /*error*/ ctx[2] !== '' ? /*error*/ ctx[2] : 'bad_route';
			if (dirty & /*route*/ 8) viewerror_changes.route = /*route*/ ctx[3];
			viewerror.$set(viewerror_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(viewerror.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(viewerror.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(viewerror, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(121:2) {#if error !== '' || !route}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t0;
	let t1;
	let t2;
	let current;
	let if_block0 = /*providersVisible*/ ctx[8] && create_if_block_8(ctx);
	let if_block1 = /*showGlobalSearch*/ ctx[5] && create_if_block_7(ctx);
	let if_block2 = /*route*/ ctx[3]?.parent && create_if_block_6(ctx);
	let if_block3 = (!/*route*/ ctx[3] || /*route*/ ctx[3].type !== 'empty') && create_if_block(ctx);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block3) if_block3.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", /*className*/ ctx[7]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 106, 0, 3163);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			if (if_block1) if_block1.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
			if (if_block2) if_block2.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t2);
			if (if_block3) if_block3.m(div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*providersVisible*/ ctx[8]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*providersVisible*/ 256) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_8(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*showGlobalSearch*/ ctx[5]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*showGlobalSearch*/ 32) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_7(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div, t1);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*route*/ ctx[3]?.parent) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*route*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block_6(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div, t2);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!/*route*/ ctx[3] || /*route*/ ctx[3].type !== 'empty') {
				if (if_block3) {
					if_block3.p(ctx, dirty);

					if (dirty & /*route*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3, 1);
					}
				} else {
					if_block3 = create_if_block(ctx);
					if_block3.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3, 1);
					if_block3.m(div, null);
				}
			} else if (if_block3) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3, 1, 1, () => {
					if_block3 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*className*/ 128) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", /*className*/ ctx[7]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-content';

function isProviderEnabledRoute(route) {
	switch (route.type) {
		case 'collections':
		case 'collection':
		case 'search':
			return true;
	}

	return route.parent
	? isProviderEnabledRoute(route.parent)
	: false;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Content', slots, []);
	let { selection } = $$props;
	let { viewChanged } = $$props;
	let { error } = $$props;
	let { route } = $$props;
	let { blocks } = $$props;
	let className;
	let showGlobalSearch;
	let providersVisible = _config_components__WEBPACK_IMPORTED_MODULE_2__.canAddProviders;
	let activeProvider = '';
	let providers = [''];
	const writable_props = ['selection', 'viewChanged', 'error', 'route', 'blocks'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Content> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('selection' in $$props) $$invalidate(0, selection = $$props.selection);
		if ('viewChanged' in $$props) $$invalidate(1, viewChanged = $$props.viewChanged);
		if ('error' in $$props) $$invalidate(2, error = $$props.error);
		if ('route' in $$props) $$invalidate(3, route = $$props.route);
		if ('blocks' in $$props) $$invalidate(4, blocks = $$props.blocks);
	};

	$$self.$capture_state = () => ({
		listProviders: _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.listProviders,
		showProviders: _config_components__WEBPACK_IMPORTED_MODULE_2__.showProviders,
		canAddProviders: _config_components__WEBPACK_IMPORTED_MODULE_2__.canAddProviders,
		getActiveProvider: _provider_get_provider__WEBPACK_IMPORTED_MODULE_3__.getActiveProvider,
		SearchBlock: _blocks_GlobalSearch_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		ParentBlock: _blocks_Parent_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		ProvidersBlock: _blocks_Providers_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		CollectionsView: _views_Collections_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		CollectionView: _views_Collection_svelte__WEBPACK_IMPORTED_MODULE_8__["default"],
		SearchView: _views_Search_svelte__WEBPACK_IMPORTED_MODULE_9__["default"],
		CustomView: _views_Custom_svelte__WEBPACK_IMPORTED_MODULE_10__["default"],
		ViewError: _views_Error_svelte__WEBPACK_IMPORTED_MODULE_11__["default"],
		selection,
		viewChanged,
		error,
		route,
		blocks,
		baseClass,
		className,
		showGlobalSearch,
		isProviderEnabledRoute,
		providersVisible,
		activeProvider,
		providers
	});

	$$self.$inject_state = $$props => {
		if ('selection' in $$props) $$invalidate(0, selection = $$props.selection);
		if ('viewChanged' in $$props) $$invalidate(1, viewChanged = $$props.viewChanged);
		if ('error' in $$props) $$invalidate(2, error = $$props.error);
		if ('route' in $$props) $$invalidate(3, route = $$props.route);
		if ('blocks' in $$props) $$invalidate(4, blocks = $$props.blocks);
		if ('className' in $$props) $$invalidate(7, className = $$props.className);
		if ('showGlobalSearch' in $$props) $$invalidate(5, showGlobalSearch = $$props.showGlobalSearch);
		if ('providersVisible' in $$props) $$invalidate(8, providersVisible = $$props.providersVisible);
		if ('activeProvider' in $$props) $$invalidate(9, activeProvider = $$props.activeProvider);
		if ('providers' in $$props) $$invalidate(6, providers = $$props.providers);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*error, className, route*/ 140) {
			$: {
				$$invalidate(7, className = baseClass);

				if (error !== '') {
					$$invalidate(7, className += ' ' + baseClass + '--error ' + baseClass + '--error--' + error);
				} else {
					$$invalidate(7, className += ' ' + baseClass + '--view ' + baseClass + '--view--' + route.type);

					if (route.params && (route.type === 'search' || route.type === 'collections' || route.type === 'collection') && route.params.provider) {
						$$invalidate(7, className += ' ' + baseClass + '--view--' + route.type + '--provider--' + route.params.provider);
					}

					if (route.type === 'collection') {
						$$invalidate(7, className += ' ' + baseClass + '--view--collection--prefix--' + route.params.prefix);
					} else if (route.type === 'custom') {
						$$invalidate(7, className += ' ' + baseClass + '--view--custom--' + route.params.customType);
					}
				}
			}
		}

		if ($$self.$$.dirty & /*route, showGlobalSearch*/ 40) {
			$: {
				$$invalidate(5, showGlobalSearch = false);
				let item = route;

				while (!showGlobalSearch && item) {
					if (item.type === 'collections') {
						$$invalidate(5, showGlobalSearch = true);
					} else {
						item = item.parent;
					}
				}
			}
		}

		if ($$self.$$.dirty & /*route, providers*/ 72) {
			$: {
				if (_config_components__WEBPACK_IMPORTED_MODULE_2__.showProviders && isProviderEnabledRoute(route)) {
					const providersList = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.listProviders)();

					if (providersList.length > 1) {
						$$invalidate(8, providersVisible = true);
						$$invalidate(9, activeProvider = (0,_provider_get_provider__WEBPACK_IMPORTED_MODULE_3__.getActiveProvider)(route));

						if (!providers || providers.length !== providersList.length) {
							$$invalidate(6, providers = providersList);
						}
					} else {
						$$invalidate(8, providersVisible = _config_components__WEBPACK_IMPORTED_MODULE_2__.canAddProviders);
					}
				} else {
					$$invalidate(8, providersVisible = false);
				}
			}
		}
	};

	return [
		selection,
		viewChanged,
		error,
		route,
		blocks,
		showGlobalSearch,
		providers,
		className,
		providersVisible,
		activeProvider
	];
}

class Content extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			selection: 0,
			viewChanged: 1,
			error: 2,
			route: 3,
			blocks: 4
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Content",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*selection*/ ctx[0] === undefined && !('selection' in props)) {
			console.warn("<Content> was created without expected prop 'selection'");
		}

		if (/*viewChanged*/ ctx[1] === undefined && !('viewChanged' in props)) {
			console.warn("<Content> was created without expected prop 'viewChanged'");
		}

		if (/*error*/ ctx[2] === undefined && !('error' in props)) {
			console.warn("<Content> was created without expected prop 'error'");
		}

		if (/*route*/ ctx[3] === undefined && !('route' in props)) {
			console.warn("<Content> was created without expected prop 'route'");
		}

		if (/*blocks*/ ctx[4] === undefined && !('blocks' in props)) {
			console.warn("<Content> was created without expected prop 'blocks'");
		}
	}

	get selection() {
		throw new Error("<Content>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Content>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get viewChanged() {
		throw new Error("<Content>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set viewChanged(value) {
		throw new Error("<Content>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error("<Content>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error("<Content>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Content>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Content>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<Content>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Content>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Content);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Footer.svelte":
/*!********************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Footer.svelte ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @iconify/search-core/lib/iconify */ "./node_modules/@iconify/search-core/lib/iconify/index.js");
/* harmony import */ var _iconify_search_core_lib_misc_customisations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @iconify/search-core/lib/misc/customisations */ "./node_modules/@iconify/search-core/lib/misc/customisations.js");
/* harmony import */ var _wrapper_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../wrapper/icons */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper/icons.ts");
/* harmony import */ var _footers_Full_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./footers/Full.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/Full.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Footer.svelte generated by Svelte v3.43.1 */









const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Footer.svelte";

function create_fragment(ctx) {
	let footer;
	let current;

	footer = new _footers_Full_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				icons: /*icons*/ ctx[2],
				customisations: /*customisations*/ ctx[0],
				route: /*route*/ ctx[1],
				customise: /*customise*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(footer.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(footer, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const footer_changes = {};
			if (dirty & /*icons*/ 4) footer_changes.icons = /*icons*/ ctx[2];
			if (dirty & /*customisations*/ 1) footer_changes.customisations = /*customisations*/ ctx[0];
			if (dirty & /*route*/ 2) footer_changes.route = /*route*/ ctx[1];
			footer.$set(footer_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(footer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(footer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(footer, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Footer', slots, []);
	let { selection } = $$props;
	let { selectionLength } = $$props;
	let { customisations } = $$props;
	let { route } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');

	function customise(prop, value) {
		switch (prop) {
			case 'width':
			case 'height':
				if (value === '' || value === 0) {
					value = null;
				}
				break;
		}

		if (customisations[prop] !== void 0 && customisations[prop] !== value) {
			const changed = { [prop]: value };

			registry.callback({
				type: 'customisation',
				changed,
				customisations: { ...customisations, ...changed }
			});
		}
	}

	let mounted = false;
	let updateCounter = 0;
	let abortLoader = null;

	function loadingEvent() {
		$$invalidate(7, updateCounter++, updateCounter);
	}

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onMount)(() => {
		$$invalidate(6, mounted = true);
	});

	let icons;
	let pending;

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onDestroy)(() => {
		if (abortLoader !== null) {
			abortLoader();
		}
	});

	const writable_props = ['selection', 'selectionLength', 'customisations', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Footer> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('selection' in $$props) $$invalidate(4, selection = $$props.selection);
		if ('selectionLength' in $$props) $$invalidate(5, selectionLength = $$props.selectionLength);
		if ('customisations' in $$props) $$invalidate(0, customisations = $$props.customisations);
		if ('route' in $$props) $$invalidate(1, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		onMount: svelte__WEBPACK_IMPORTED_MODULE_1__.onMount,
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		onDestroy: svelte__WEBPACK_IMPORTED_MODULE_1__.onDestroy,
		loadIcons: _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__.loadIcons,
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.iconToString,
		Iconify: _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_4__.Iconify,
		selectionToArray: _wrapper_icons__WEBPACK_IMPORTED_MODULE_6__.selectionToArray,
		Footer: _footers_Full_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		selection,
		selectionLength,
		customisations,
		route,
		registry,
		customise,
		mounted,
		updateCounter,
		abortLoader,
		loadingEvent,
		icons,
		pending
	});

	$$self.$inject_state = $$props => {
		if ('selection' in $$props) $$invalidate(4, selection = $$props.selection);
		if ('selectionLength' in $$props) $$invalidate(5, selectionLength = $$props.selectionLength);
		if ('customisations' in $$props) $$invalidate(0, customisations = $$props.customisations);
		if ('route' in $$props) $$invalidate(1, route = $$props.route);
		if ('mounted' in $$props) $$invalidate(6, mounted = $$props.mounted);
		if ('updateCounter' in $$props) $$invalidate(7, updateCounter = $$props.updateCounter);
		if ('abortLoader' in $$props) $$invalidate(8, abortLoader = $$props.abortLoader);
		if ('icons' in $$props) $$invalidate(2, icons = $$props.icons);
		if ('pending' in $$props) $$invalidate(9, pending = $$props.pending);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*updateCounter, selectionLength, selection, icons, abortLoader, pending, mounted*/ 1012) {
			$: {
				updateCounter;
				$$invalidate(2, icons = []);
				const newPending = [];
				const toLoad = [];
				const list = selectionLength ? (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_6__.selectionToArray)(selection) : [];

				list.forEach(icon => {
					const name = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.iconToString)(icon);

					if (_iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_4__.Iconify.getIcon?.(name)) {
						icons.push(icon);
						return;
					}

					if (abortLoader && pending && pending.indexOf(name) !== -1) {
						newPending.push(name);
						return;
					}

					newPending.push(name);
					toLoad.push(name);
				});

				$$invalidate(9, pending = newPending);

				if (toLoad.length && mounted) {
					if (abortLoader !== null) {
						abortLoader();
					}

					$$invalidate(8, abortLoader = (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_2__.loadIcons)(toLoad, loadingEvent));
				}
			}
		}
	};

	return [
		customisations,
		route,
		icons,
		customise,
		selection,
		selectionLength,
		mounted,
		updateCounter,
		abortLoader,
		pending
	];
}

class Footer_1 extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			selection: 4,
			selectionLength: 5,
			customisations: 0,
			route: 1
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Footer_1",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*selection*/ ctx[4] === undefined && !('selection' in props)) {
			console.warn("<Footer> was created without expected prop 'selection'");
		}

		if (/*selectionLength*/ ctx[5] === undefined && !('selectionLength' in props)) {
			console.warn("<Footer> was created without expected prop 'selectionLength'");
		}

		if (/*customisations*/ ctx[0] === undefined && !('customisations' in props)) {
			console.warn("<Footer> was created without expected prop 'customisations'");
		}

		if (/*route*/ ctx[1] === undefined && !('route' in props)) {
			console.warn("<Footer> was created without expected prop 'route'");
		}
	}

	get selection() {
		throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selectionLength() {
		throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selectionLength(value) {
		throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Footer_1);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte":
/*!***********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte";

// (17:0) {#if info}
function create_if_block(ctx) {
	let block_1;
	let current;

	block_1 = new _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				type: "collection-info",
				extra: /*name*/ ctx[0],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_2 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block_1.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block_1, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const block_1_changes = {};
			if (dirty & /*name*/ 1) block_1_changes.extra = /*name*/ ctx[0];

			if (dirty & /*$$scope, info, short, showTitle*/ 270) {
				block_1_changes.$$scope = { dirty, ctx };
			}

			block_1.$set(block_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block_1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_2,
		id: create_if_block.name,
		type: "if",
		source: "(17:0) {#if info}",
		ctx
	});

	return block_2;
}

// (19:2) {#if showTitle}
function create_if_block_7(ctx) {
	let div;
	let t_value = /*info*/ ctx[3].name + "";
	let t;

	const block_1 = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-collection-info-title");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 19, 3, 486);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t_value !== (t_value = /*info*/ ctx[3].name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_7.name,
		type: "if",
		source: "(19:2) {#if showTitle}",
		ctx
	});

	return block_1;
}

// (22:2) {#if info.author}
function create_if_block_5(ctx) {
	let dl;
	let dt;
	let dd;

	function select_block_type(ctx, dirty) {
		if (/*info*/ ctx[3].author.url) return create_if_block_6;
		return create_else_block_1;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);

	const block_1 = {
		c: function create() {
			dl = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dl");
			dt = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dt");
			dt.textContent = `${/*text*/ ctx[4].author}`;
			dd = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dd");
			if_block.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dt, file, 23, 4, 583);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dd, file, 24, 4, 610);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dl, file, 22, 3, 574);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, dl, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dt);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dd);
			if_block.m(dd, null);
		},
		p: function update(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(dd, null);
				}
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(dl);
			if_block.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_5.name,
		type: "if",
		source: "(22:2) {#if info.author}",
		ctx
	});

	return block_1;
}

// (31:5) {:else}
function create_else_block_1(ctx) {
	let t_value = /*info*/ ctx[3].author.name + "";
	let t;

	const block_1 = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t_value !== (t_value = /*info*/ ctx[3].author.name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_else_block_1.name,
		type: "else",
		source: "(31:5) {:else}",
		ctx
	});

	return block_1;
}

// (26:5) {#if info.author.url}
function create_if_block_6(ctx) {
	let a;
	let t_value = /*info*/ ctx[3].author.name + "";
	let t;
	let a_href_value;
	let mounted;
	let dispose;

	const block_1 = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value = /*info*/ ctx[3].author.url);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 26, 6, 648);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", /*onExternalClick*/ ctx[5], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t_value !== (t_value = /*info*/ ctx[3].author.name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);

			if (dirty & /*info*/ 8 && a_href_value !== (a_href_value = /*info*/ ctx[3].author.url)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_6.name,
		type: "if",
		source: "(26:5) {#if info.author.url}",
		ctx
	});

	return block_1;
}

// (35:2) {#if info.license}
function create_if_block_3(ctx) {
	let dl;
	let dt;
	let dd;

	function select_block_type_1(ctx, dirty) {
		if (/*info*/ ctx[3].license.url) return create_if_block_4;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx, -1);
	let if_block = current_block_type(ctx);

	const block_1 = {
		c: function create() {
			dl = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dl");
			dt = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dt");
			dt.textContent = `${/*text*/ ctx[4].license}`;
			dd = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dd");
			if_block.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dt, file, 36, 4, 857);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dd, file, 37, 4, 885);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dl, file, 35, 3, 848);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, dl, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dt);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dd);
			if_block.m(dd, null);
		},
		p: function update(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_1(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(dd, null);
				}
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(dl);
			if_block.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_3.name,
		type: "if",
		source: "(35:2) {#if info.license}",
		ctx
	});

	return block_1;
}

// (44:5) {:else}
function create_else_block(ctx) {
	let t_value = /*info*/ ctx[3].license.title + "";
	let t;

	const block_1 = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t_value !== (t_value = /*info*/ ctx[3].license.title + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_else_block.name,
		type: "else",
		source: "(44:5) {:else}",
		ctx
	});

	return block_1;
}

// (39:5) {#if info.license.url}
function create_if_block_4(ctx) {
	let a;
	let t_value = /*info*/ ctx[3].license.title + "";
	let t;
	let a_href_value;
	let mounted;
	let dispose;

	const block_1 = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value = /*info*/ ctx[3].license.url);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 39, 6, 924);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", /*onExternalClick*/ ctx[5], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t_value !== (t_value = /*info*/ ctx[3].license.title + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);

			if (dirty & /*info*/ 8 && a_href_value !== (a_href_value = /*info*/ ctx[3].license.url)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_4.name,
		type: "if",
		source: "(39:5) {#if info.license.url}",
		ctx
	});

	return block_1;
}

// (48:2) {#if !short}
function create_if_block_1(ctx) {
	let dl;
	let dt;
	let dd;
	let t1_value = /*info*/ ctx[3].total + "";
	let t1;
	let t2;
	let if_block_anchor;
	let if_block = /*info*/ ctx[3].height && create_if_block_2(ctx);

	const block_1 = {
		c: function create() {
			dl = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dl");
			dt = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dt");
			dt.textContent = `${/*text*/ ctx[4].total}`;
			dd = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dd");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dt, file, 49, 4, 1132);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dd, file, 50, 4, 1158);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dl, file, 48, 3, 1123);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, dl, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dt);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dd);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dd, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t2, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t1_value !== (t1_value = /*info*/ ctx[3].total + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);

			if (/*info*/ ctx[3].height) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_2(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(dl);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t2);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_1.name,
		type: "if",
		source: "(48:2) {#if !short}",
		ctx
	});

	return block_1;
}

// (53:3) {#if info.height}
function create_if_block_2(ctx) {
	let dl;
	let dt;
	let dd;

	let t1_value = (typeof /*info*/ ctx[3].height === 'object'
	? /*info*/ ctx[3].height.join(', ')
	: /*info*/ ctx[3].height) + "";

	let t1;

	const block_1 = {
		c: function create() {
			dl = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dl");
			dt = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dt");
			dt.textContent = `${/*text*/ ctx[4].height}`;
			dd = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dd");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dt, file, 54, 5, 1224);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dd, file, 55, 5, 1252);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dl, file, 53, 4, 1214);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, dl, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dt);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dd);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dd, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 8 && t1_value !== (t1_value = (typeof /*info*/ ctx[3].height === 'object'
			? /*info*/ ctx[3].height.join(', ')
			: /*info*/ ctx[3].height) + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(dl);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_2.name,
		type: "if",
		source: "(53:3) {#if info.height}",
		ctx
	});

	return block_1;
}

// (18:1) <Block type="collection-info" extra={name}>
function create_default_slot(ctx) {
	let t0;
	let t1;
	let t2;
	let if_block3_anchor;
	let if_block0 = /*showTitle*/ ctx[2] && create_if_block_7(ctx);
	let if_block1 = /*info*/ ctx[3].author && create_if_block_5(ctx);
	let if_block2 = /*info*/ ctx[3].license && create_if_block_3(ctx);
	let if_block3 = !/*short*/ ctx[1] && create_if_block_1(ctx);

	const block_1 = {
		c: function create() {
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block3) if_block3.c();
			if_block3_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
			if (if_block1) if_block1.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
			if (if_block2) if_block2.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t2, anchor);
			if (if_block3) if_block3.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block3_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*showTitle*/ ctx[2]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_7(ctx);
					if_block0.c();
					if_block0.m(t0.parentNode, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*info*/ ctx[3].author) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_5(ctx);
					if_block1.c();
					if_block1.m(t1.parentNode, t1);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*info*/ ctx[3].license) {
				if (if_block2) {
					if_block2.p(ctx, dirty);
				} else {
					if_block2 = create_if_block_3(ctx);
					if_block2.c();
					if_block2.m(t2.parentNode, t2);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (!/*short*/ ctx[1]) {
				if (if_block3) {
					if_block3.p(ctx, dirty);
				} else {
					if_block3 = create_if_block_1(ctx);
					if_block3.c();
					if_block3.m(if_block3_anchor.parentNode, if_block3_anchor);
				}
			} else if (if_block3) {
				if_block3.d(1);
				if_block3 = null;
			}
		},
		d: function destroy(detaching) {
			if (if_block0) if_block0.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
			if (if_block1) if_block1.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
			if (if_block2) if_block2.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t2);
			if (if_block3) if_block3.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block3_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot.name,
		type: "slot",
		source: "(18:1) <Block type=\\\"collection-info\\\" extra={name}>",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*info*/ ctx[3] && create_if_block(ctx);

	const block_1 = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*info*/ ctx[3]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*info*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_1;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('CollectionInfo', slots, []);
	let { name } = $$props;
	let { block } = $$props;
	let { short = false } = $$props;
	let { showTitle = true } = $$props;
	const text = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.collectionInfo;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const onExternalClick = registry.link;
	let info;
	const writable_props = ['name', 'block', 'short', 'showTitle'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<CollectionInfo> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('block' in $$props) $$invalidate(6, block = $$props.block);
		if ('short' in $$props) $$invalidate(1, short = $$props.short);
		if ('showTitle' in $$props) $$invalidate(2, showTitle = $$props.showTitle);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		name,
		block,
		short,
		showTitle,
		text,
		registry,
		onExternalClick,
		info
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('block' in $$props) $$invalidate(6, block = $$props.block);
		if ('short' in $$props) $$invalidate(1, short = $$props.short);
		if ('showTitle' in $$props) $$invalidate(2, showTitle = $$props.showTitle);
		if ('info' in $$props) $$invalidate(3, info = $$props.info);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*block*/ 64) {
			$: {
				$$invalidate(3, info = block.info);
			}
		}
	};

	return [name, short, showTitle, info, text, onExternalClick, block];
}

class CollectionInfo extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			name: 0,
			block: 6,
			short: 1,
			showTitle: 2
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "CollectionInfo",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !('name' in props)) {
			console.warn("<CollectionInfo> was created without expected prop 'name'");
		}

		if (/*block*/ ctx[6] === undefined && !('block' in props)) {
			console.warn("<CollectionInfo> was created without expected prop 'block'");
		}
	}

	get name() {
		throw new Error("<CollectionInfo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<CollectionInfo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get block() {
		throw new Error("<CollectionInfo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set block(value) {
		throw new Error("<CollectionInfo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get short() {
		throw new Error("<CollectionInfo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set short(value) {
		throw new Error("<CollectionInfo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get showTitle() {
		throw new Error("<CollectionInfo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showTitle(value) {
		throw new Error("<CollectionInfo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CollectionInfo);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsFilter.svelte":
/*!**************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsFilter.svelte ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/Input.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsFilter.svelte generated by Svelte v3.43.1 */






const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsFilter.svelte";

// (20:0) <Block type="filter">
function create_default_slot(ctx) {
	let input;
	let updating_value;
	let current;

	function input_value_binding(value) {
		/*input_value_binding*/ ctx[4](value);
	}

	let input_props = {
		type: "text",
		icon: "search",
		placeholder: /*placeholder*/ ctx[1]
	};

	if (/*value*/ ctx[0] !== void 0) {
		input_props.value = /*value*/ ctx[0];
	}

	input = new _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({ props: input_props, $$inline: true });
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks.push(() => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bind)(input, 'value', input_value_binding));

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(input.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(input, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const input_changes = {};

			if (!updating_value && dirty & /*value*/ 1) {
				updating_value = true;
				input_changes.value = /*value*/ ctx[0];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_flush_callback)(() => updating_value = false);
			}

			input.$set(input_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(input.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(input.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(input, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot.name,
		type: "slot",
		source: "(20:0) <Block type=\\\"filter\\\">",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let block_1;
	let current;

	block_1 = new _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				type: "filter",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_2 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block_1.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block_1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const block_1_changes = {};

			if (dirty & /*$$scope, value*/ 129) {
				block_1_changes.$$scope = { dirty, ctx };
			}

			block_1.$set(block_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block_1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_2,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_2;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('CollectionsFilter', slots, []);
	let { name } = $$props;
	let { block } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	let value = block.keyword;
	const text = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.search;

	const placeholder = text.placeholder.collections === void 0
	? text.defaultPlaceholder
	: text.placeholder.collections;

	const writable_props = ['name', 'block'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<CollectionsFilter> was created with unknown prop '${key}'`);
	});

	function input_value_binding(value$1) {
		value = value$1;
		$$invalidate(0, value);
	}

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(2, name = $$props.name);
		if ('block' in $$props) $$invalidate(3, block = $$props.block);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		Input: _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		name,
		block,
		registry,
		value,
		text,
		placeholder
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(2, name = $$props.name);
		if ('block' in $$props) $$invalidate(3, block = $$props.block);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*value, block, name*/ 13) {
			$: {
				if (value !== block.keyword) {
					registry.router.action(name, value);
				}
			}
		}
	};

	return [value, placeholder, name, block, input_value_binding];
}

class CollectionsFilter extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { name: 2, block: 3 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "CollectionsFilter",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[2] === undefined && !('name' in props)) {
			console.warn("<CollectionsFilter> was created without expected prop 'name'");
		}

		if (/*block*/ ctx[3] === undefined && !('block' in props)) {
			console.warn("<CollectionsFilter> was created without expected prop 'block'");
		}
	}

	get name() {
		throw new Error("<CollectionsFilter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<CollectionsFilter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get block() {
		throw new Error("<CollectionsFilter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set block(value) {
		throw new Error("<CollectionsFilter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CollectionsFilter);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsList.svelte":
/*!************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsList.svelte ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _collections_list_Category_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./collections-list/Category.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Category.svelte");
/* harmony import */ var _ui_ContentError_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ui/ContentError.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsList.svelte generated by Svelte v3.43.1 */


const { Error: Error_1, Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsList.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i][0];
	child_ctx[6] = list[i][1];
	child_ctx[8] = i;
	return child_ctx;
}

// (23:1) {:else}
function create_else_block(ctx) {
	let error;
	let current;

	error = new _ui_ContentError_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: { error: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.errors.noCollections },
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(error.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(error, target, anchor);
			current = true;
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(error.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(error.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(error, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_else_block.name,
		type: "else",
		source: "(23:1) {:else}",
		ctx
	});

	return block_1;
}

// (16:1) {#each Object.entries(block.collections) as [category, items], i (category)}
function create_each_block(key_1, ctx) {
	let first;
	let category;
	let current;

	category = new _collections_list_Category_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				onClick: /*onClick*/ ctx[2],
				showCategories: /*block*/ ctx[0].showCategories,
				category: /*category*/ ctx[5],
				provider: /*provider*/ ctx[1],
				items: /*items*/ ctx[6]
			},
			$$inline: true
		});

	const block_1 = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(category.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(category, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const category_changes = {};
			if (dirty & /*block*/ 1) category_changes.showCategories = /*block*/ ctx[0].showCategories;
			if (dirty & /*block*/ 1) category_changes.category = /*category*/ ctx[5];
			if (dirty & /*provider*/ 2) category_changes.provider = /*provider*/ ctx[1];
			if (dirty & /*block*/ 1) category_changes.items = /*items*/ ctx[6];
			category.$set(category_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(category.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(category.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(category, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_each_block.name,
		type: "each",
		source: "(16:1) {#each Object.entries(block.collections) as [category, items], i (category)}",
		ctx
	});

	return block_1;
}

// (15:0) <Block type="collections">
function create_default_slot(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = Object.entries(/*block*/ ctx[0].collections);
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*category*/ ctx[5];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	let each_1_else = null;

	if (!each_value.length) {
		each_1_else = create_else_block(ctx);
	}

	const block_1 = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();

			if (each_1_else) {
				each_1_else.c();
			}
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);

			if (each_1_else) {
				each_1_else.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*onClick, block, Object, provider, phrases*/ 7) {
				each_value = Object.entries(/*block*/ ctx[0].collections);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();

				if (!each_value.length && each_1_else) {
					each_1_else.p(ctx, dirty);
				} else if (!each_value.length) {
					each_1_else = create_else_block(ctx);
					each_1_else.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_1_else, 1);
					each_1_else.m(each_1_anchor.parentNode, each_1_anchor);
				} else if (each_1_else) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_1_else, 1, 1, () => {
						each_1_else = null;
					});

					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				}
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
			if (each_1_else) each_1_else.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot.name,
		type: "slot",
		source: "(15:0) <Block type=\\\"collections\\\">",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let block_1;
	let current;

	block_1 = new _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				type: "collections",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_2 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block_1.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error_1("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block_1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const block_1_changes = {};

			if (dirty & /*$$scope, block, provider*/ 515) {
				block_1_changes.$$scope = { dirty, ctx };
			}

			block_1.$set(block_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block_1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_2,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_2;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('CollectionsList', slots, []);
	let { name } = $$props;
	let { block } = $$props;
	let { provider } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');

	function onClick(prefix) {
		registry.router.action(name, prefix);
	}

	const writable_props = ['name', 'block', 'provider'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<CollectionsList> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(3, name = $$props.name);
		if ('block' in $$props) $$invalidate(0, block = $$props.block);
		if ('provider' in $$props) $$invalidate(1, provider = $$props.provider);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		Category: _collections_list_Category_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		Error: _ui_ContentError_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		name,
		block,
		provider,
		registry,
		onClick
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(3, name = $$props.name);
		if ('block' in $$props) $$invalidate(0, block = $$props.block);
		if ('provider' in $$props) $$invalidate(1, provider = $$props.provider);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [block, provider, onClick, name];
}

class CollectionsList extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { name: 3, block: 0, provider: 1 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "CollectionsList",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[3] === undefined && !('name' in props)) {
			console.warn("<CollectionsList> was created without expected prop 'name'");
		}

		if (/*block*/ ctx[0] === undefined && !('block' in props)) {
			console.warn("<CollectionsList> was created without expected prop 'block'");
		}

		if (/*provider*/ ctx[1] === undefined && !('provider' in props)) {
			console.warn("<CollectionsList> was created without expected prop 'provider'");
		}
	}

	get name() {
		throw new Error_1("<CollectionsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error_1("<CollectionsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get block() {
		throw new Error_1("<CollectionsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set block(value) {
		throw new Error_1("<CollectionsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get provider() {
		throw new Error_1("<CollectionsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set provider(value) {
		throw new Error_1("<CollectionsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CollectionsList);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte":
/*!****************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _ui_Filter_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/Filter.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[13] = list[i][0];
	child_ctx[14] = list[i][1];
	child_ctx[16] = i;
	return child_ctx;
}

// (51:0) {#if filters.length > 1}
function create_if_block(ctx) {
	let block_1;
	let current;

	block_1 = new _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				type: "filters",
				name: /*name*/ ctx[0],
				extra: /*extra*/ ctx[5],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_2 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block_1.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block_1, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const block_1_changes = {};
			if (dirty & /*name*/ 1) block_1_changes.name = /*name*/ ctx[0];
			if (dirty & /*extra*/ 32) block_1_changes.extra = /*extra*/ ctx[5];

			if (dirty & /*$$scope, block, link, header*/ 131086) {
				block_1_changes.$$scope = { dirty, ctx };
			}

			block_1.$set(block_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block_1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_2,
		id: create_if_block.name,
		type: "if",
		source: "(51:0) {#if filters.length > 1}",
		ctx
	});

	return block_2;
}

// (53:2) {#if header !== ''}
function create_if_block_1(ctx) {
	let div;
	let t;

	const block_1 = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*header*/ ctx[3]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-filters-header");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 53, 3, 1318);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*header*/ 8) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*header*/ ctx[3]);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_1.name,
		type: "if",
		source: "(53:2) {#if header !== ''}",
		ctx
	});

	return block_1;
}

// (57:3) {#each Object.entries(block.filters) as [key, filter], i (key)}
function create_each_block(key_1, ctx) {
	let first;
	let filter;
	let current;

	function func() {
		return /*func*/ ctx[11](/*key*/ ctx[13]);
	}

	filter = new _ui_Filter_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				active: /*key*/ ctx[13] === /*block*/ ctx[1].active,
				hasActive: /*block*/ ctx[1].active !== null,
				filter: /*filter*/ ctx[14],
				link: /*link*/ ctx[2]
				? /*link*/ ctx[2].replace('{prefix}', /*key*/ ctx[13])
				: void 0,
				title: /*filter*/ ctx[14].title === ''
				? _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters.uncategorised
				: /*filter*/ ctx[14].title,
				onClick: func
			},
			$$inline: true
		});

	const block_1 = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filter.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filter, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const filter_changes = {};
			if (dirty & /*block*/ 2) filter_changes.active = /*key*/ ctx[13] === /*block*/ ctx[1].active;
			if (dirty & /*block*/ 2) filter_changes.hasActive = /*block*/ ctx[1].active !== null;
			if (dirty & /*block*/ 2) filter_changes.filter = /*filter*/ ctx[14];

			if (dirty & /*link, block*/ 6) filter_changes.link = /*link*/ ctx[2]
			? /*link*/ ctx[2].replace('{prefix}', /*key*/ ctx[13])
			: void 0;

			if (dirty & /*block*/ 2) filter_changes.title = /*filter*/ ctx[14].title === ''
			? _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters.uncategorised
			: /*filter*/ ctx[14].title;

			if (dirty & /*block*/ 2) filter_changes.onClick = func;
			filter.$set(filter_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filter.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filter.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filter, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_each_block.name,
		type: "each",
		source: "(57:3) {#each Object.entries(block.filters) as [key, filter], i (key)}",
		ctx
	});

	return block_1;
}

// (52:1) <Block type="filters" {name} {extra}>
function create_default_slot(ctx) {
	let t;
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let if_block = /*header*/ ctx[3] !== '' && create_if_block_1(ctx);
	let each_value = Object.entries(/*block*/ ctx[1].filters);
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*key*/ ctx[13];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block_1 = {
		c: function create() {
			if (if_block) if_block.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-filters-list");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 55, 2, 1375);
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*header*/ ctx[3] !== '') {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(t.parentNode, t);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*Object, block, link, phrases, handleClick*/ 70) {
				each_value = Object.entries(/*block*/ ctx[1].filters);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot.name,
		type: "slot",
		source: "(52:1) <Block type=\\\"filters\\\" {name} {extra}>",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*filters*/ ctx[4].length > 1 && create_if_block(ctx);

	const block_1 = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*filters*/ ctx[4].length > 1) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*filters*/ 16) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_1;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Filters', slots, []);
	let { name } = $$props;
	let { block } = $$props;
	let { parent = '' } = $$props;
	let { link = '' } = $$props;
	let { onClick = null } = $$props;
	let { showTitle = false } = $$props;
	let { title = '' } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');

	function handleClick(key) {
		if (typeof onClick === 'function') {
			onClick(key);
		} else {
			registry.router.action(name, key === block.active ? null : key);
		}
	}

	let header;
	let filters;
	let extra;
	const writable_props = ['name', 'block', 'parent', 'link', 'onClick', 'showTitle', 'title'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Filters> was created with unknown prop '${key}'`);
	});

	const func = key => handleClick(key);

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('block' in $$props) $$invalidate(1, block = $$props.block);
		if ('parent' in $$props) $$invalidate(7, parent = $$props.parent);
		if ('link' in $$props) $$invalidate(2, link = $$props.link);
		if ('onClick' in $$props) $$invalidate(8, onClick = $$props.onClick);
		if ('showTitle' in $$props) $$invalidate(9, showTitle = $$props.showTitle);
		if ('title' in $$props) $$invalidate(10, title = $$props.title);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		Filter: _ui_Filter_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		name,
		block,
		parent,
		link,
		onClick,
		showTitle,
		title,
		registry,
		handleClick,
		header,
		filters,
		extra
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('block' in $$props) $$invalidate(1, block = $$props.block);
		if ('parent' in $$props) $$invalidate(7, parent = $$props.parent);
		if ('link' in $$props) $$invalidate(2, link = $$props.link);
		if ('onClick' in $$props) $$invalidate(8, onClick = $$props.onClick);
		if ('showTitle' in $$props) $$invalidate(9, showTitle = $$props.showTitle);
		if ('title' in $$props) $$invalidate(10, title = $$props.title);
		if ('header' in $$props) $$invalidate(3, header = $$props.header);
		if ('filters' in $$props) $$invalidate(4, filters = $$props.filters);
		if ('extra' in $$props) $$invalidate(5, extra = $$props.extra);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*showTitle, title, name, parent*/ 1665) {
			$: {
				if (showTitle === false) {
					$$invalidate(3, header = '');
				} else if (typeof title === 'string') {
					$$invalidate(3, header = title);
				} else {
					let key = name;

					if (parent !== '') {
						if (_config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters[name + '-' + parent] !== void 0) {
							key = name + '-' + parent;
						}
					}

					$$invalidate(3, header = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters[key] === void 0
					? ''
					: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters[key]);
				}
			}
		}

		if ($$self.$$.dirty & /*block*/ 2) {
			$: {
				$$invalidate(4, filters = block === null ? [] : Object.keys(block.filters));
			}
		}

		if ($$self.$$.dirty & /*block*/ 2) {
			$: {
				$$invalidate(5, extra = block === null || block.active === null
				? ''
				: 'filters--active');
			}
		}
	};

	return [
		name,
		block,
		link,
		header,
		filters,
		extra,
		handleClick,
		parent,
		onClick,
		showTitle,
		title,
		func
	];
}

class Filters extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			name: 0,
			block: 1,
			parent: 7,
			link: 2,
			onClick: 8,
			showTitle: 9,
			title: 10
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Filters",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !('name' in props)) {
			console.warn("<Filters> was created without expected prop 'name'");
		}

		if (/*block*/ ctx[1] === undefined && !('block' in props)) {
			console.warn("<Filters> was created without expected prop 'block'");
		}
	}

	get name() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get block() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set block(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get parent() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set parent(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get link() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set link(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get showTitle() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showTitle(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<Filters>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Filters>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Filters);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/GlobalSearch.svelte":
/*!*********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/GlobalSearch.svelte ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/Input.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/GlobalSearch.svelte generated by Svelte v3.43.1 */







const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/GlobalSearch.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[10] = list[i];
	child_ctx[12] = i;
	return child_ctx;
}

// (60:2) {#each [focusInput] as autofocus, i (autofocus)}
function create_each_block(key_1, ctx) {
	let first;
	let input;
	let updating_value;
	let current;

	function input_value_binding(value) {
		/*input_value_binding*/ ctx[6](value);
	}

	let input_props = {
		type: "text",
		placeholder: /*text*/ ctx[2].defaultPlaceholder,
		icon: "search",
		autofocus: /*autofocus*/ ctx[10]
	};

	if (/*keyword*/ ctx[0] !== void 0) {
		input_props.value = /*keyword*/ ctx[0];
	}

	input = new _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({ props: input_props, $$inline: true });
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks.push(() => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bind)(input, 'value', input_value_binding));

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(input.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(input, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const input_changes = {};
			if (dirty & /*focusInput*/ 2) input_changes.autofocus = /*autofocus*/ ctx[10];

			if (!updating_value && dirty & /*keyword*/ 1) {
				updating_value = true;
				input_changes.value = /*keyword*/ ctx[0];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_flush_callback)(() => updating_value = false);
			}

			input.$set(input_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(input.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(input.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(input, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(60:2) {#each [focusInput] as autofocus, i (autofocus)}",
		ctx
	});

	return block;
}

// (58:0) <Block type="search" name="global">
function create_default_slot(ctx) {
	let form;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let t0;
	let button;
	let current;
	let mounted;
	let dispose;
	let each_value = [/*focusInput*/ ctx[1]];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*autofocus*/ ctx[10];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < 1; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			form = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("form");

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].c();
			}

			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
			button.textContent = `${/*text*/ ctx[2].button}`;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", "iif-form-button iif-form-button--primary");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "type", "submit");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 67, 2, 1752);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(form, "class", "iif-block--search-form");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(form, file, 58, 1, 1483);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, form, anchor);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].m(form, null);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(form, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(form, button);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(form, "submit", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*submitForm*/ ctx[3]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*text, focusInput, keyword*/ 7) {
				each_value = [/*focusInput*/ ctx[1]];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, form, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, t0, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(form);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].d();
			}

			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(58:0) <Block type=\\\"search\\\" name=\\\"global\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let block;
	let current;

	block = new _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				type: "search",
				name: "global",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const block_changes = {};

			if (dirty & /*$$scope, focusInput, keyword*/ 8195) {
				block_changes.$$scope = { dirty, ctx };
			}

			block.$set(block_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_1;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('GlobalSearch', slots, []);
	let { viewChanged } = $$props;
	let { route } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const text = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.search;
	let keyword;
	let lastChange = '';

	function checkRoute(route) {
		if (route && route.type === 'search' && route.params && (lastChange === '' || lastChange !== route.params.search)) {
			$$invalidate(0, keyword = route.params.search);
			lastChange = keyword;
			return true;
		}

		return false;
	}

	function submitForm() {
		if (typeof keyword === 'string') {
			const value = keyword.trim().toLowerCase();

			if (value !== '') {
				lastChange = value;
				registry.router.action('search', value);
			}
		}
	}

	let focusInput = false;
	const writable_props = ['viewChanged', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<GlobalSearch> was created with unknown prop '${key}'`);
	});

	function input_value_binding(value) {
		keyword = value;
		(($$invalidate(0, keyword), $$invalidate(5, route)), $$invalidate(4, viewChanged));
	}

	$$self.$$set = $$props => {
		if ('viewChanged' in $$props) $$invalidate(4, viewChanged = $$props.viewChanged);
		if ('route' in $$props) $$invalidate(5, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		canFocusSearch: _config_components__WEBPACK_IMPORTED_MODULE_3__.canFocusSearch,
		Input: _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		viewChanged,
		route,
		registry,
		text,
		keyword,
		lastChange,
		checkRoute,
		submitForm,
		focusInput
	});

	$$self.$inject_state = $$props => {
		if ('viewChanged' in $$props) $$invalidate(4, viewChanged = $$props.viewChanged);
		if ('route' in $$props) $$invalidate(5, route = $$props.route);
		if ('keyword' in $$props) $$invalidate(0, keyword = $$props.keyword);
		if ('lastChange' in $$props) lastChange = $$props.lastChange;
		if ('focusInput' in $$props) $$invalidate(1, focusInput = $$props.focusInput);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*keyword, route, viewChanged*/ 49) {
			$: {
				if (keyword === null) {
					$$invalidate(0, keyword = '');

					if (route !== null) {
						if (!checkRoute(route) && route.parent) {
							checkRoute(route.parent);
						}
					}
				} else if (!viewChanged) {
					lastChange = '';
				} else {
					checkRoute(route);
				}
			}
		}

		if ($$self.$$.dirty & /*route*/ 32) {
			$: {
				if (_config_components__WEBPACK_IMPORTED_MODULE_3__.canFocusSearch) {
					$$invalidate(1, focusInput = route
					? route.type === 'collections' || route.type === 'search'
					: false);
				}
			}
		}
	};

	return [keyword, focusInput, text, submitForm, viewChanged, route, input_value_binding];
}

class GlobalSearch extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { viewChanged: 4, route: 5 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "GlobalSearch",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*viewChanged*/ ctx[4] === undefined && !('viewChanged' in props)) {
			console.warn("<GlobalSearch> was created without expected prop 'viewChanged'");
		}

		if (/*route*/ ctx[5] === undefined && !('route' in props)) {
			console.warn("<GlobalSearch> was created without expected prop 'route'");
		}
	}

	get viewChanged() {
		throw new Error("<GlobalSearch>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set viewChanged(value) {
		throw new Error("<GlobalSearch>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<GlobalSearch>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<GlobalSearch>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GlobalSearch);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte":
/*!***********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_ContentError_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ui/ContentError.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _icons_Container_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./icons/Container.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Container.svelte");
/* harmony import */ var _icons_Header_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icons/Header.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Header.svelte");
/* harmony import */ var _Pagination_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Pagination.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Pagination.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte generated by Svelte v3.43.1 */









const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte";

// (57:0) {:else}
function create_else_block(ctx) {
	let block;
	let current;

	block = new _Block_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				type: "icons",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const block_changes = {};

			if (dirty & /*$$scope, pagination, selection, blocks, route, isList, isSelecting, headerText*/ 33007) {
				block_changes.$$scope = { dirty, ctx };
			}

			block.$set(block_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_else_block.name,
		type: "else",
		source: "(57:0) {:else}",
		ctx
	});

	return block_1;
}

// (55:0) {#if isEmpty}
function create_if_block(ctx) {
	let contenterror;
	let current;

	contenterror = new _ui_ContentError_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: { error: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.errors.noIconsFound },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(contenterror.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(contenterror, target, anchor);
			current = true;
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(contenterror.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(contenterror.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(contenterror, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(55:0) {#if isEmpty}",
		ctx
	});

	return block;
}

// (58:1) <Block type="icons">
function create_default_slot(ctx) {
	let iconsheader;
	let t0;
	let iconscontainer;
	let t1;
	let pagination_1;
	let current;

	iconsheader = new _icons_Header_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				headerText: /*headerText*/ ctx[5],
				isList: /*isList*/ ctx[6],
				canChangeLayout: /*canChangeLayout*/ ctx[8],
				changeLayout: /*changeLayout*/ ctx[9],
				canSelectMultiple: /*canSelectMultiple*/ ctx[10],
				isSelecting: /*isSelecting*/ ctx[7],
				toggleSelection: /*toggleSelection*/ ctx[11]
			},
			$$inline: true
		});

	iconscontainer = new _icons_Container_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				selection: /*selection*/ ctx[1],
				blocks: /*blocks*/ ctx[2],
				route: /*route*/ ctx[0],
				isList: /*isList*/ ctx[6],
				isSelecting: /*isSelecting*/ ctx[7]
			},
			$$inline: true
		});

	pagination_1 = new _Pagination_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				name: "pagination",
				block: /*pagination*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconsheader.$$.fragment);
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconscontainer.$$.fragment);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(pagination_1.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconsheader, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconscontainer, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(pagination_1, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconsheader_changes = {};
			if (dirty & /*headerText*/ 32) iconsheader_changes.headerText = /*headerText*/ ctx[5];
			if (dirty & /*isList*/ 64) iconsheader_changes.isList = /*isList*/ ctx[6];
			if (dirty & /*isSelecting*/ 128) iconsheader_changes.isSelecting = /*isSelecting*/ ctx[7];
			iconsheader.$set(iconsheader_changes);
			const iconscontainer_changes = {};
			if (dirty & /*selection*/ 2) iconscontainer_changes.selection = /*selection*/ ctx[1];
			if (dirty & /*blocks*/ 4) iconscontainer_changes.blocks = /*blocks*/ ctx[2];
			if (dirty & /*route*/ 1) iconscontainer_changes.route = /*route*/ ctx[0];
			if (dirty & /*isList*/ 64) iconscontainer_changes.isList = /*isList*/ ctx[6];
			if (dirty & /*isSelecting*/ 128) iconscontainer_changes.isSelecting = /*isSelecting*/ ctx[7];
			iconscontainer.$set(iconscontainer_changes);
			const pagination_1_changes = {};
			if (dirty & /*pagination*/ 8) pagination_1_changes.block = /*pagination*/ ctx[3];
			pagination_1.$set(pagination_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconsheader.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconscontainer.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(pagination_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconsheader.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconscontainer.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(pagination_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconsheader, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconscontainer, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(pagination_1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(58:1) <Block type=\\\"icons\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*isEmpty*/ ctx[4]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('IconsWithPages', slots, []);
	let { route } = $$props;
	let { selection } = $$props;
	let { blocks } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const componentsConfig = registry.config.components;
	let pagination;

	function generateHeaderText() {
		const total = pagination.length, text = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.icons;

		if (pagination.more && total > 0) {
			return text.header.full;
		}

		if (text.headerWithCount[total] !== void 0) {
			return text.headerWithCount[total];
		}

		return text.header.full;
	}

	let isEmpty;
	let headerText;
	const canChangeLayout = componentsConfig.toggleList;
	let isList = componentsConfig.list;

	function changeLayout() {
		if (canChangeLayout) {
			$$invalidate(6, isList = componentsConfig.list = !componentsConfig.list);
			registry.callback({ type: 'config' });
		}
	}

	const canSelectMultiple = componentsConfig.multiSelect;
	let isSelecting = false;

	function toggleSelection() {
		$$invalidate(7, isSelecting = !isSelecting);
	}

	const writable_props = ['route', 'selection', 'blocks'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<IconsWithPages> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('route' in $$props) $$invalidate(0, route = $$props.route);
		if ('selection' in $$props) $$invalidate(1, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(2, blocks = $$props.blocks);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		ContentError: _ui_ContentError_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		IconsContainer: _icons_Container_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		IconsHeader: _icons_Header_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		Pagination: _Pagination_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		route,
		selection,
		blocks,
		registry,
		componentsConfig,
		pagination,
		generateHeaderText,
		isEmpty,
		headerText,
		canChangeLayout,
		isList,
		changeLayout,
		canSelectMultiple,
		isSelecting,
		toggleSelection
	});

	$$self.$inject_state = $$props => {
		if ('route' in $$props) $$invalidate(0, route = $$props.route);
		if ('selection' in $$props) $$invalidate(1, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(2, blocks = $$props.blocks);
		if ('pagination' in $$props) $$invalidate(3, pagination = $$props.pagination);
		if ('isEmpty' in $$props) $$invalidate(4, isEmpty = $$props.isEmpty);
		if ('headerText' in $$props) $$invalidate(5, headerText = $$props.headerText);
		if ('isList' in $$props) $$invalidate(6, isList = $$props.isList);
		if ('isSelecting' in $$props) $$invalidate(7, isSelecting = $$props.isSelecting);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*blocks*/ 4) {
			$: {
				$$invalidate(3, pagination = blocks.pagination);
			}
		}

		if ($$self.$$.dirty & /*pagination, blocks, isEmpty*/ 28) {
			$: {
				$$invalidate(4, isEmpty = !pagination || !blocks.icons || blocks.icons.icons.length < 1);

				if (!isEmpty) {
					$$invalidate(5, headerText = generateHeaderText().replace('{count}', pagination.length + ''));
				}
			}
		}
	};

	return [
		route,
		selection,
		blocks,
		pagination,
		isEmpty,
		headerText,
		isList,
		isSelecting,
		canChangeLayout,
		changeLayout,
		canSelectMultiple,
		toggleSelection
	];
}

class IconsWithPages extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { route: 0, selection: 1, blocks: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "IconsWithPages",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*route*/ ctx[0] === undefined && !('route' in props)) {
			console.warn("<IconsWithPages> was created without expected prop 'route'");
		}

		if (/*selection*/ ctx[1] === undefined && !('selection' in props)) {
			console.warn("<IconsWithPages> was created without expected prop 'selection'");
		}

		if (/*blocks*/ ctx[2] === undefined && !('blocks' in props)) {
			console.warn("<IconsWithPages> was created without expected prop 'blocks'");
		}
	}

	get route() {
		throw new Error("<IconsWithPages>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<IconsWithPages>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selection() {
		throw new Error("<IconsWithPages>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<IconsWithPages>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<IconsWithPages>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<IconsWithPages>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconsWithPages);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Pagination.svelte":
/*!*******************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Pagination.svelte ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Pagination.svelte generated by Svelte v3.43.1 */






const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Pagination.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[13] = list[i];
	child_ctx[15] = i;
	return child_ctx;
}

// (49:0) {#if pages.length > 0}
function create_if_block(ctx) {
	let div;
	let t0;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let t1;
	let t2;
	let current;
	let if_block0 = /*prevPage*/ ctx[2] !== -1 && create_if_block_4(ctx);
	let each_value = /*pages*/ ctx[1];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*page*/ ctx[13].page;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	let if_block1 = /*block*/ ctx[0].more && create_if_block_2(ctx);
	let if_block2 = /*nextPage*/ ctx[3] !== -1 && create_if_block_1(ctx);

	const block_1 = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-pagination");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 49, 1, 1574);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
			if (if_block1) if_block1.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t2);
			if (if_block2) if_block2.m(div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*prevPage*/ ctx[2] !== -1) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*prevPage*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_4(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (dirty & /*pages*/ 2) {
				each_value = /*pages*/ ctx[1];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_block, create_each_block, t1, get_each_context);
			}

			if (/*block*/ ctx[0].more) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					if_block1.m(div, t2);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*nextPage*/ ctx[3] !== -1) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*nextPage*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block_1(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div, null);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}

			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block.name,
		type: "if",
		source: "(49:0) {#if pages.length > 0}",
		ctx
	});

	return block_1;
}

// (51:2) {#if prevPage !== -1}
function create_if_block_4(ctx) {
	let a;
	let uiicon;
	let a_class_value;
	let a_title_value;
	let current;
	let mounted;
	let dispose;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				icon: "left",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", a_class_value = /*arrowClass*/ ctx[4] + 'prev');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.pagination.prev);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 51, 3, 1630);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*click_handler*/ ctx[8]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};

			if (dirty & /*$$scope*/ 65536) {
				uiicon_changes.$$scope = { dirty, ctx };
			}

			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_4.name,
		type: "if",
		source: "(51:2) {#if prevPage !== -1}",
		ctx
	});

	return block_1;
}

// (57:4) <UIIcon icon="left">
function create_default_slot_1(ctx) {
	let t;

	const block_1 = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("<");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(57:4) <UIIcon icon=\\\"left\\\">",
		ctx
	});

	return block_1;
}

// (61:3) {#if page.dot}
function create_if_block_3(ctx) {
	let span;

	const block_1 = {
		c: function create() {
			span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
			span.textContent = "...";
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 60, 17, 1880);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_3.name,
		type: "if",
		source: "(61:3) {#if page.dot}",
		ctx
	});

	return block_1;
}

// (60:2) {#each pages as page, i (page.page)}
function create_each_block(key_1, ctx) {
	let first;
	let t0;
	let a;
	let t1_value = /*page*/ ctx[13].text + "";
	let t1;
	let a_href_value;
	let a_class_value;
	let mounted;
	let dispose;
	let if_block = /*page*/ ctx[13].dot && create_if_block_3(ctx);

	const block_1 = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			if (if_block) if_block.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value = /*page*/ ctx[13].selected ? void 0 : '# ');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", a_class_value = /*page*/ ctx[13].className);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 61, 3, 1905);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t1);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					a,
					"click",
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*page*/ ctx[13].onClick)) /*page*/ ctx[13].onClick.apply(this, arguments);
					}),
					false,
					true,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (/*page*/ ctx[13].dot) {
				if (if_block) {
					
				} else {
					if_block = create_if_block_3(ctx);
					if_block.c();
					if_block.m(t0.parentNode, t0);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*pages*/ 2 && t1_value !== (t1_value = /*page*/ ctx[13].text + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);

			if (dirty & /*pages*/ 2 && a_href_value !== (a_href_value = /*page*/ ctx[13].selected ? void 0 : '# ')) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
			}

			if (dirty & /*pages*/ 2 && a_class_value !== (a_class_value = /*page*/ ctx[13].className)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", a_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_each_block.name,
		type: "each",
		source: "(60:2) {#each pages as page, i (page.page)}",
		ctx
	});

	return block_1;
}

// (69:2) {#if block.more}
function create_if_block_2(ctx) {
	let a;
	let t_value = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.icons.more + "";
	let t;
	let mounted;
	let dispose;

	const block_1 = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", /*moreClass*/ ctx[5]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 69, 3, 2076);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*click_handler_1*/ ctx[9]), false, true, false);
				mounted = true;
			}
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_2.name,
		type: "if",
		source: "(69:2) {#if block.more}",
		ctx
	});

	return block_1;
}

// (77:2) {#if nextPage !== -1}
function create_if_block_1(ctx) {
	let a;
	let uiicon;
	let a_class_value;
	let a_title_value;
	let current;
	let mounted;
	let dispose;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				icon: "right",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", a_class_value = /*arrowClass*/ ctx[4] + 'next');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.pagination.next);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 77, 3, 2269);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*click_handler_2*/ ctx[10]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};

			if (dirty & /*$$scope*/ 65536) {
				uiicon_changes.$$scope = { dirty, ctx };
			}

			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block_1.name,
		type: "if",
		source: "(77:2) {#if nextPage !== -1}",
		ctx
	});

	return block_1;
}

// (83:4) <UIIcon icon="right">
function create_default_slot(ctx) {
	let t;

	const block_1 = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(">");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot.name,
		type: "slot",
		source: "(83:4) <UIIcon icon=\\\"right\\\">",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*pages*/ ctx[1].length > 0 && create_if_block(ctx);

	const block_1 = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*pages*/ ctx[1].length > 0) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*pages*/ 2) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_1;
}

const baseClass = 'iif-page';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Pagination', slots, []);
	let { name } = $$props;
	let { block } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const selectedClass = baseClass + ' ' + baseClass + '--selected';
	const arrowClass = baseClass + ' ' + baseClass + '--arrow ' + baseClass + '--';
	const moreClass = baseClass + ' ' + baseClass + '--more';
	let pages = [];
	let prevPage;
	let nextPage;

	function setPage(page) {
		registry.router.action(name, page);
	}

	const writable_props = ['name', 'block'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Pagination> was created with unknown prop '${key}'`);
	});

	const click_handler = () => setPage(prevPage);
	const click_handler_1 = () => setPage(_config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.icons.moreAsNumber ? 2 : 'more');
	const click_handler_2 = () => setPage(nextPage);

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(7, name = $$props.name);
		if ('block' in $$props) $$invalidate(0, block = $$props.block);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		showPagination: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.showPagination,
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		name,
		block,
		registry,
		baseClass,
		selectedClass,
		arrowClass,
		moreClass,
		pages,
		prevPage,
		nextPage,
		setPage
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(7, name = $$props.name);
		if ('block' in $$props) $$invalidate(0, block = $$props.block);
		if ('pages' in $$props) $$invalidate(1, pages = $$props.pages);
		if ('prevPage' in $$props) $$invalidate(2, prevPage = $$props.prevPage);
		if ('nextPage' in $$props) $$invalidate(3, nextPage = $$props.nextPage);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*block, pages*/ 3) {
			$: {
				const visiblePages = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.showPagination)(block);

				if (visiblePages.length) {
					$$invalidate(3, nextPage = block.more
					? block.page + 1
					: visiblePages[visiblePages.length - 1] > block.page
						? block.page + 1
						: -1);

					$$invalidate(2, prevPage = block.page > 0 ? block.page - 1 : -1);

					$$invalidate(1, pages = visiblePages.map((page, index) => {
						const dot = index > 0 && visiblePages[index - 1] < page - 1;
						const selected = page === block.page;

						const result = {
							selected,
							dot,
							page,
							text: page + 1 + '',
							className: selected ? selectedClass : baseClass,
							onClick: () => setPage(page)
						};

						return result;
					}));
				} else if (pages.length) {
					$$invalidate(1, pages = []);
					$$invalidate(2, prevPage = -1);
					$$invalidate(3, nextPage = -1);
				}
			}
		}
	};

	return [
		block,
		pages,
		prevPage,
		nextPage,
		arrowClass,
		moreClass,
		setPage,
		name,
		click_handler,
		click_handler_1,
		click_handler_2
	];
}

class Pagination extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { name: 7, block: 0 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Pagination",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[7] === undefined && !('name' in props)) {
			console.warn("<Pagination> was created without expected prop 'name'");
		}

		if (/*block*/ ctx[0] === undefined && !('block' in props)) {
			console.warn("<Pagination> was created without expected prop 'block'");
		}
	}

	get name() {
		throw new Error("<Pagination>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<Pagination>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get block() {
		throw new Error("<Pagination>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set block(value) {
		throw new Error("<Pagination>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Pagination);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Parent.svelte":
/*!***************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Parent.svelte ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _parent_Link_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parent/Link.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/parent/Link.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Parent.svelte generated by Svelte v3.43.1 */







const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Parent.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[7] = list[i];
	child_ctx[9] = i;
	return child_ctx;
}

// (58:0) {#if entries.length > 0}
function create_if_block(ctx) {
	let block;
	let current;

	block = new _Block_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				type: "parent",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const block_changes = {};

			if (dirty & /*$$scope, entries*/ 1025) {
				block_changes.$$scope = { dirty, ctx };
			}

			block.$set(block_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block.name,
		type: "if",
		source: "(58:0) {#if entries.length > 0}",
		ctx
	});

	return block_1;
}

// (60:2) {#each entries as item, i (item.key)}
function create_each_block(key_1, ctx) {
	let first;
	let link;
	let current;

	function func() {
		return /*func*/ ctx[3](/*item*/ ctx[7]);
	}

	link = new _parent_Link_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				text: /*item*/ ctx[7].text,
				onClick: func
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(link.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(link, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const link_changes = {};
			if (dirty & /*entries*/ 1) link_changes.text = /*item*/ ctx[7].text;
			if (dirty & /*entries*/ 1) link_changes.onClick = func;
			link.$set(link_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(link.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(link.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(link, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(60:2) {#each entries as item, i (item.key)}",
		ctx
	});

	return block;
}

// (59:1) <Block type="parent">
function create_default_slot(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = /*entries*/ ctx[0];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*item*/ ctx[7].key;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*entries, handleClick*/ 3) {
				each_value = /*entries*/ ctx[0];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(59:1) <Block type=\\\"parent\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*entries*/ ctx[0].length > 0 && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*entries*/ ctx[0].length > 0) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*entries*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Parent', slots, []);
	let { route } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const parentPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases.parent;
	const collections = registry.collections;

	function handleClick(level) {
		registry.router.action('parent', level);
	}

	let entries;
	const writable_props = ['route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Parent> was created with unknown prop '${key}'`);
	});

	const func = item => handleClick(item.level);

	$$self.$$set = $$props => {
		if ('route' in $$props) $$invalidate(2, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		getCollectionTitle: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.getCollectionTitle,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		Link: _parent_Link_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		route,
		registry,
		parentPhrases,
		collections,
		handleClick,
		entries
	});

	$$self.$inject_state = $$props => {
		if ('route' in $$props) $$invalidate(2, route = $$props.route);
		if ('entries' in $$props) $$invalidate(0, entries = $$props.entries);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*entries, route*/ 5) {
			$: {
				function addEntry(route, level) {
					const routeParams = route.params;
					let text = parentPhrases.default;

					if (route.type === 'custom' && parentPhrases[route.params.customType] !== void 0) {
						text = parentPhrases[routeParams.customType];
					} else if (parentPhrases[route.type] !== void 0) {
						text = parentPhrases[route.type];

						if (route.type === 'collection') {
							text = text.replace('{name}', (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.getCollectionTitle)(collections, routeParams.provider, routeParams.prefix));
						}
					}

					let key = route.type + '-' + level + '-';

					switch (route.type) {
						case 'collection':
							key += routeParams.provider + ':' + routeParams.prefix;
							break;
						case 'custom':
							key += routeParams.customType;
							break;
					}

					entries.unshift({ key, level, route, text });

					if (route.parent) {
						addEntry(route.parent, level + 1);
					}
				}

				$$invalidate(0, entries = []);

				if (route.parent) {
					addEntry(route.parent, 1);
				}
			}
		}
	};

	return [entries, handleClick, route, func];
}

class Parent extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { route: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Parent",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*route*/ ctx[2] === undefined && !('route' in props)) {
			console.warn("<Parent> was created without expected prop 'route'");
		}
	}

	get route() {
		throw new Error("<Parent>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Parent>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Parent);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Providers.svelte":
/*!******************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Providers.svelte ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_Tabs_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/Tabs.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Tabs.svelte");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _ui_AddForm_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../ui/AddForm.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/AddForm.svelte");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _provider_add_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../provider/add-provider */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/provider/add-provider.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Providers.svelte generated by Svelte v3.43.1 */












const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Providers.svelte";

// (75:1) {#if formVisible}
function create_if_block(ctx) {
	let addform;
	let current;

	addform = new _ui_AddForm_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				phrases: /*providersPhrases*/ ctx[4].addForm,
				inputIcon: "link",
				buttonIcon: true,
				value: "",
				onValidate: /*validateForm*/ ctx[6],
				onSubmit: /*submitForm*/ ctx[7],
				status: /*status*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(addform.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(addform, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const addform_changes = {};
			if (dirty & /*status*/ 8) addform_changes.status = /*status*/ ctx[3];
			addform.$set(addform_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(addform.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(addform.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(addform, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(75:1) {#if formVisible}",
		ctx
	});

	return block;
}

// (73:0) <Block type="providers">
function create_default_slot(ctx) {
	let tabs;
	let t;
	let if_block_anchor;
	let current;

	tabs = new _ui_Tabs_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				tabs: /*list*/ ctx[2],
				selected: /*activeProvider*/ ctx[0],
				onClick: /*handleClick*/ ctx[5]
			},
			$$inline: true
		});

	let if_block = /*formVisible*/ ctx[1] && create_if_block(ctx);

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(tabs.$$.fragment);
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(tabs, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const tabs_changes = {};
			if (dirty & /*list*/ 4) tabs_changes.tabs = /*list*/ ctx[2];
			if (dirty & /*activeProvider*/ 1) tabs_changes.selected = /*activeProvider*/ ctx[0];
			tabs.$set(tabs_changes);

			if (/*formVisible*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*formVisible*/ 2) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(tabs.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(tabs.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(tabs, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(73:0) <Block type=\\\"providers\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let block;
	let current;

	block = new _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				type: "providers",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const block_changes = {};

			if (dirty & /*$$scope, status, formVisible, list, activeProvider*/ 2063) {
				block_changes.$$scope = { dirty, ctx };
			}

			block.$set(block_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_1;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Providers', slots, []);
	let { activeProvider } = $$props;
	let { providers } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const providersPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases.providers;
	let formVisible = false;
	let status = '';

	function handleClick(key) {
		$$invalidate(1, formVisible = false);
		registry.router.action('provider', key);
	}

	function toggleForm() {
		$$invalidate(1, formVisible = !formVisible);
	}

	function validateForm(value) {
		if (status !== '') {
			$$invalidate(3, status = '');
		}

		return (0,_provider_add_provider__WEBPACK_IMPORTED_MODULE_8__.validateProvider)(value) !== null;
	}

	function submitForm(value) {
		const host = (0,_provider_add_provider__WEBPACK_IMPORTED_MODULE_8__.validateProvider)(value);

		if (!host) {
			return;
		}

		$$invalidate(3, status = providersPhrases.status.loading.replace('{host}', host));

		(0,_provider_add_provider__WEBPACK_IMPORTED_MODULE_8__.retrieveProvider)(registry, host, (host, success, provider) => {
			if (!success) {
				const error = provider;
				$$invalidate(3, status = providersPhrases.status[error].replace('{host}', host));
				return;
			}

			$$invalidate(3, status = '');
			$$invalidate(1, formVisible = false);
			registry.router.action('provider', provider);
		});
	}

	let list;
	const writable_props = ['activeProvider', 'providers'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Providers> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('activeProvider' in $$props) $$invalidate(0, activeProvider = $$props.activeProvider);
		if ('providers' in $$props) $$invalidate(8, providers = $$props.providers);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		getProvider: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.getProvider,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases,
		Tabs: _ui_Tabs_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		AddForm: _ui_AddForm_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		canAddProviders: _config_components__WEBPACK_IMPORTED_MODULE_7__.canAddProviders,
		validateProvider: _provider_add_provider__WEBPACK_IMPORTED_MODULE_8__.validateProvider,
		retrieveProvider: _provider_add_provider__WEBPACK_IMPORTED_MODULE_8__.retrieveProvider,
		activeProvider,
		providers,
		registry,
		providersPhrases,
		formVisible,
		status,
		handleClick,
		toggleForm,
		validateForm,
		submitForm,
		list
	});

	$$self.$inject_state = $$props => {
		if ('activeProvider' in $$props) $$invalidate(0, activeProvider = $$props.activeProvider);
		if ('providers' in $$props) $$invalidate(8, providers = $$props.providers);
		if ('formVisible' in $$props) $$invalidate(1, formVisible = $$props.formVisible);
		if ('status' in $$props) $$invalidate(3, status = $$props.status);
		if ('list' in $$props) $$invalidate(2, list = $$props.list);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*providers, list, formVisible*/ 262) {
			$: {
				$$invalidate(2, list = []);

				providers.forEach((provider, index) => {
					const item = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.getProvider)(provider);

					if (item) {
						list.push({ key: provider, title: item.title, index });
					}
				});

				if (_config_components__WEBPACK_IMPORTED_MODULE_7__.canAddProviders) {
					list.push({
						key: 'add',
						title: '',
						hint: providersPhrases.add,
						onClick: toggleForm,
						right: true,
						index: 0,
						type: 'icon',
						icon: formVisible ? 'reset' : 'plus'
					});
				}
			}
		}
	};

	return [
		activeProvider,
		formVisible,
		list,
		status,
		providersPhrases,
		handleClick,
		validateForm,
		submitForm,
		providers
	];
}

class Providers extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { activeProvider: 0, providers: 8 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Providers",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*activeProvider*/ ctx[0] === undefined && !('activeProvider' in props)) {
			console.warn("<Providers> was created without expected prop 'activeProvider'");
		}

		if (/*providers*/ ctx[8] === undefined && !('providers' in props)) {
			console.warn("<Providers> was created without expected prop 'providers'");
		}
	}

	get activeProvider() {
		throw new Error("<Providers>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set activeProvider(value) {
		throw new Error("<Providers>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get providers() {
		throw new Error("<Providers>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set providers(value) {
		throw new Error("<Providers>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Providers);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte":
/*!***************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/Input.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte generated by Svelte v3.43.1 */







const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte";

// (32:0) <Block type="search" {name} extra="search-form">
function create_default_slot(ctx) {
	let input;
	let current;

	input = new _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				type: "text",
				value: /*block*/ ctx[1].keyword,
				onInput: /*changeValue*/ ctx[3],
				placeholder: /*placeholder*/ ctx[2],
				icon: "search",
				autofocus: _config_components__WEBPACK_IMPORTED_MODULE_3__.canFocusSearch
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(input.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(input, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const input_changes = {};
			if (dirty & /*block*/ 2) input_changes.value = /*block*/ ctx[1].keyword;
			if (dirty & /*placeholder*/ 4) input_changes.placeholder = /*placeholder*/ ctx[2];
			input.$set(input_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(input.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(input.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(input, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_default_slot.name,
		type: "slot",
		source: "(32:0) <Block type=\\\"search\\\" {name} extra=\\\"search-form\\\">",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let block_1;
	let current;

	block_1 = new _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				type: "search",
				name: /*name*/ ctx[0],
				extra: "search-form",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_2 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block_1.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block_1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const block_1_changes = {};
			if (dirty & /*name*/ 1) block_1_changes.name = /*name*/ ctx[0];

			if (dirty & /*$$scope, block, placeholder*/ 262) {
				block_1_changes.$$scope = { dirty, ctx };
			}

			block_1.$set(block_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block_1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_2,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block_2;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Search', slots, []);
	let { name } = $$props;
	let { block } = $$props;
	let { info = null } = $$props;
	let { customType = '' } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const searchPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.search;
	let placeholder;

	function changeValue(value) {
		registry.router.action(name, value.trim().toLowerCase());
	}

	const writable_props = ['name', 'block', 'info', 'customType'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Search> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('block' in $$props) $$invalidate(1, block = $$props.block);
		if ('info' in $$props) $$invalidate(4, info = $$props.info);
		if ('customType' in $$props) $$invalidate(5, customType = $$props.customType);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		canFocusSearch: _config_components__WEBPACK_IMPORTED_MODULE_3__.canFocusSearch,
		Input: _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		name,
		block,
		info,
		customType,
		registry,
		searchPhrases,
		placeholder,
		changeValue
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('block' in $$props) $$invalidate(1, block = $$props.block);
		if ('info' in $$props) $$invalidate(4, info = $$props.info);
		if ('customType' in $$props) $$invalidate(5, customType = $$props.customType);
		if ('placeholder' in $$props) $$invalidate(2, placeholder = $$props.placeholder);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*customType, info*/ 48) {
			$: {
				if (customType !== '' && searchPhrases.placeholder[customType] !== void 0) {
					$$invalidate(2, placeholder = searchPhrases.placeholder[customType]);
				} else if (info && info.name && searchPhrases.placeholder.collection !== void 0) {
					$$invalidate(2, placeholder = searchPhrases.placeholder.collection.replace('{name}', info.name));
				} else {
					$$invalidate(2, placeholder = searchPhrases.defaultPlaceholder);
				}
			}
		}
	};

	return [name, block, placeholder, changeValue, info, customType];
}

class Search extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			name: 0,
			block: 1,
			info: 4,
			customType: 5
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Search",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !('name' in props)) {
			console.warn("<Search> was created without expected prop 'name'");
		}

		if (/*block*/ ctx[1] === undefined && !('block' in props)) {
			console.warn("<Search> was created without expected prop 'block'");
		}
	}

	get name() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get block() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set block(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get info() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set info(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customType() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customType(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Search);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Category.svelte":
/*!**********************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Category.svelte ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _Item_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Item.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Item.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Category.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;

const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Category.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i][0];
	child_ctx[6] = list[i][1];
	child_ctx[8] = i;
	return child_ctx;
}

// (10:1) {#if showCategories}
function create_if_block(ctx) {
	let div;
	let t;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*category*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-collections-list-title");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 10, 2, 251);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*category*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*category*/ ctx[1]);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(10:1) {#if showCategories}",
		ctx
	});

	return block;
}

// (14:2) {#each Object.entries(items) as [prefix, info], i (prefix)}
function create_each_block(key_1, ctx) {
	let first;
	let item;
	let current;

	item = new _Item_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				provider: /*provider*/ ctx[3],
				prefix: /*prefix*/ ctx[5],
				info: /*info*/ ctx[6],
				onClick: /*onClick*/ ctx[4]
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(item.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(item, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const item_changes = {};
			if (dirty & /*provider*/ 8) item_changes.provider = /*provider*/ ctx[3];
			if (dirty & /*items*/ 4) item_changes.prefix = /*prefix*/ ctx[5];
			if (dirty & /*items*/ 4) item_changes.info = /*info*/ ctx[6];
			if (dirty & /*onClick*/ 16) item_changes.onClick = /*onClick*/ ctx[4];
			item.$set(item_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(item.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(item.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(item, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(14:2) {#each Object.entries(items) as [prefix, info], i (prefix)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t;
	let ul;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let if_block = /*showCategories*/ ctx[0] && create_if_block(ctx);
	let each_value = Object.entries(/*items*/ ctx[2]);
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*prefix*/ ctx[5];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block) if_block.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			ul = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(ul, "class", "iif-collections-list-items");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(ul, file, 12, 1, 316);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-collections-list-category");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 8, 0, 183);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block) if_block.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*showCategories*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div, t);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*provider, Object, items, onClick*/ 28) {
				each_value = Object.entries(/*items*/ ctx[2]);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, ul, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block) if_block.d();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Category', slots, []);
	let { showCategories } = $$props;
	let { category = '' } = $$props;
	let { items } = $$props;
	let { provider } = $$props;
	let { onClick } = $$props;
	const writable_props = ['showCategories', 'category', 'items', 'provider', 'onClick'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Category> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('showCategories' in $$props) $$invalidate(0, showCategories = $$props.showCategories);
		if ('category' in $$props) $$invalidate(1, category = $$props.category);
		if ('items' in $$props) $$invalidate(2, items = $$props.items);
		if ('provider' in $$props) $$invalidate(3, provider = $$props.provider);
		if ('onClick' in $$props) $$invalidate(4, onClick = $$props.onClick);
	};

	$$self.$capture_state = () => ({
		Item: _Item_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		showCategories,
		category,
		items,
		provider,
		onClick
	});

	$$self.$inject_state = $$props => {
		if ('showCategories' in $$props) $$invalidate(0, showCategories = $$props.showCategories);
		if ('category' in $$props) $$invalidate(1, category = $$props.category);
		if ('items' in $$props) $$invalidate(2, items = $$props.items);
		if ('provider' in $$props) $$invalidate(3, provider = $$props.provider);
		if ('onClick' in $$props) $$invalidate(4, onClick = $$props.onClick);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [showCategories, category, items, provider, onClick];
}

class Category extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			showCategories: 0,
			category: 1,
			items: 2,
			provider: 3,
			onClick: 4
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Category",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*showCategories*/ ctx[0] === undefined && !('showCategories' in props)) {
			console.warn("<Category> was created without expected prop 'showCategories'");
		}

		if (/*items*/ ctx[2] === undefined && !('items' in props)) {
			console.warn("<Category> was created without expected prop 'items'");
		}

		if (/*provider*/ ctx[3] === undefined && !('provider' in props)) {
			console.warn("<Category> was created without expected prop 'provider'");
		}

		if (/*onClick*/ ctx[4] === undefined && !('onClick' in props)) {
			console.warn("<Category> was created without expected prop 'onClick'");
		}
	}

	get showCategories() {
		throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showCategories(value) {
		throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get category() {
		throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set category(value) {
		throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get items() {
		throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set items(value) {
		throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get provider() {
		throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set provider(value) {
		throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Category);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Height.svelte":
/*!********************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Height.svelte ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Height.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;

const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Height.svelte";

// (160:0) {#if mounted}
function create_if_block(ctx) {
	let html_tag;
	let html_anchor;

	const block = {
		c: function create() {
			html_tag = new svelte_internal__WEBPACK_IMPORTED_MODULE_0__.HtmlTag();
			html_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			html_tag.a = html_anchor;
		},
		m: function mount(target, anchor) {
			html_tag.m(/*html*/ ctx[1], target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, html_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*html*/ 2) html_tag.p(/*html*/ ctx[1]);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(html_anchor);
			if (detaching) html_tag.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(160:0) {#if mounted}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let if_block = /*mounted*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (/*mounted*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const unit = 8;

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Height', slots, []);
	let { text } = $$props;
	let mounted = false;

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onMount)(() => {
		$$invalidate(0, mounted = true);
	});

	const shapesData = {
		'0': {
			paths: [
				'M24 68h8c6 0 12 6 12 12v32c0 6-6 12-12 12H16c-6 0-12-6-12-12V80c0-6 5-12 12-12h8z'
			],
			width: 48
		},
		'1': {
			paths: ['M4 68c6 0 12 6 12 12v44H4h24'],
			width: 32
		},
		'2': {
			paths: [
				'M4 80c0-6 6-12 12-12h16c6 0 12 6 12 12v8c0 6-6 12-12 12H16c-6 0-12 6-12 12v12h40'
			],
			width: 48
		},
		'3': {
			paths: [
				'M4 80c0-6 6-12 12-12h16c6 0 12 6 12 12v4c0 6-6 12-12 12h-4 4c6 0 12 6 12 12v4c0 6-6 12-12 12H16c-6 0-12-6-12-12'
			],
			width: 48
		},
		'4': {
			paths: ['M4 68v20c0 6 6 12 12 12h16c6 0 12-6 12-12V68v56'],
			width: 48
		},
		'5': {
			paths: ['M44 68H4v24h28c6 0 12 6 12 12v8c0 6-6 12-12 12H16c-6 0-12-6-12-12'],
			width: 48
		},
		'6': {
			paths: [
				'M44 80c0-6-6-12-12-12H16c-6 0-12 6-12 12v32c0 6 6 12 12 12h16c6 0 12-6 12-12v-8c0-6-6-12-12-12H16c-6 0-12 6-12 12'
			],
			width: 48
		},
		'7': {
			paths: ['M4 68h28c6 0 12 6 12 12 0 4-6.667 18.667-20 44'],
			width: 48
		},
		'8': {
			paths: [
				'M24 68h8c6 0 12 6 12 12v4c0 6-6 12-12 12 6 0 12 6 12 12v4c0 6-6 12-12 12H16c-6 0-12-6-12-12v-4c0-6 6-12 12-12-6 0-12-6-12-12v-4c0-6 6-12 12-12h8z'
			],
			width: 48
		},
		'9': {
			paths: [
				'M44 88c0 6-6 12-12 12H16c-6 0-12-6-12-12v-8c0-6 6-12 12-12h16c6 0 12 6 12 12v32c0 6-6 12-12 12H16c-6 0-12-6-12-12'
			],
			width: 48
		},
		'|': {
			paths: ['M4 48l24-24 24 24', 'M4 144l24 24 24-24', 'M28 48v96'],
			width: 56
		},
		',': {
			paths: ['M8 124c-2 0-4-2-4-4s2-4 4-4 4 2 4 4v8c0 2-2 6-4 8'],
			width: 16
		},
		'.': {
			paths: ['M8 116c2 0 4 2 4 4s-2 4-4 4-4-2-4-4 2-4 4-4z'],
			width: 16
		}
	};

	const defaultOptions = { line: false, animate: false, height: 24 };

	function iconHeight(text, options) {
		let width = unit, height = 24 * unit, svg = '', i, char, item, scale;

		if (typeof text === 'number') {
			text = '' + text;
		}

		const allOptions = Object.assign({}, defaultOptions, typeof options === 'object' ? options : {});
		scale = height / allOptions.height;

		if (allOptions.line) {
			width += unit;
		}

		for (i = 0; i < text.length; i++) {
			char = text.slice(i, i + 1);

			if (shapesData[char] === void 0) {
				if (char === ' ') {
					width += unit * 2;
				}

				continue;
			}

			if (char === '|') {
				allOptions.line = true;
			}

			item = shapesData[char];

			if (width > unit) {
				svg += '<g transform="translate(' + width + ')">';
			}

			item.paths.forEach(path => {
				svg += '<path d="' + path + '" />';
			});

			if (width > unit) {
				svg += '</g>';
			}

			width += item.width + unit;
		}

		if (allOptions.line) {
			svg += '<path d="M' + unit / 2 + ' ' + unit / 2 + 'h' + (width - unit) + '" />';
			svg += '<path d="M' + unit / 2 + ' ' + (height - unit / 2) + 'h' + (width - unit) + '" />';
		}

		svg = '<g stroke-width="' + unit + '" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">' + svg + '</g>';
		return '<svg xmlns="http://www.w3.org/2000/svg" focusable="false" width="' + width / scale + '" height="' + height / scale + '" viewBox="0 0 ' + width + ' ' + height + '"> ' + svg + '</svg>';
	}

	let html;
	const writable_props = ['text'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Height> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('text' in $$props) $$invalidate(2, text = $$props.text);
	};

	$$self.$capture_state = () => ({
		onMount: svelte__WEBPACK_IMPORTED_MODULE_1__.onMount,
		text,
		mounted,
		unit,
		shapesData,
		defaultOptions,
		iconHeight,
		html
	});

	$$self.$inject_state = $$props => {
		if ('text' in $$props) $$invalidate(2, text = $$props.text);
		if ('mounted' in $$props) $$invalidate(0, mounted = $$props.mounted);
		if ('html' in $$props) $$invalidate(1, html = $$props.html);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*text*/ 4) {
			$: {
				$$invalidate(1, html = iconHeight(text));
			}
		}
	};

	return [mounted, html, text];
}

class Height extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { text: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Height",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*text*/ ctx[2] === undefined && !('text' in props)) {
			console.warn("<Height> was created without expected prop 'text'");
		}
	}

	get text() {
		throw new Error("<Height>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<Height>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Height);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Item.svelte":
/*!******************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Item.svelte ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../config/theme */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Height_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Height.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Height.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Item.svelte generated by Svelte v3.43.1 */










const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/collections-list/Item.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[15] = list[i];
	return child_ctx;
}

// (77:2) {#if info.author}
function create_if_block_2(ctx) {
	let small;
	let t0_value = _config_phrases__WEBPACK_IMPORTED_MODULE_5__.phrases.collection.by + "";
	let t0;
	let t1;

	function select_block_type(ctx, dirty) {
		if (_config_theme__WEBPACK_IMPORTED_MODULE_4__.showCollectionAuthorLink && /*info*/ ctx[2].author.url) return create_if_block_3;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			small = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("small");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if_block.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(small, file, 77, 3, 2110);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, small, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(small, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(small, t1);
			if_block.m(small, null);
		},
		p: function update(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(small, null);
				}
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(small);
			if_block.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(77:2) {#if info.author}",
		ctx
	});

	return block;
}

// (85:4) {:else}
function create_else_block(ctx) {
	let t_value = /*info*/ ctx[2].author.name + "";
	let t;

	const block = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 4 && t_value !== (t_value = /*info*/ ctx[2].author.name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(85:4) {:else}",
		ctx
	});

	return block;
}

// (80:4) {#if showCollectionAuthorLink && info.author.url}
function create_if_block_3(ctx) {
	let a;
	let t_value = /*info*/ ctx[2].author.name + "";
	let t;
	let a_href_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value = /*info*/ ctx[2].author.url);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 80, 5, 2205);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", /*onExternalClick*/ ctx[6], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*info*/ 4 && t_value !== (t_value = /*info*/ ctx[2].author.name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);

			if (dirty & /*info*/ 4 && a_href_value !== (a_href_value = /*info*/ ctx[2].author.url)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(80:4) {#if showCollectionAuthorLink && info.author.url}",
		ctx
	});

	return block;
}

// (90:2) {#if samples.length > 0}
function create_if_block_1(ctx) {
	let div;
	let div_class_value;
	let current;
	let each_value = /*samples*/ ctx[7];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value = "iif-collection-samples" + (/*samplesHeight*/ ctx[8]
			? ' iif-collection-samples--' + /*samplesHeight*/ ctx[8]
			: ''));

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 90, 3, 2443);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*provider, prefix, samples*/ 131) {
				each_value = /*samples*/ ctx[7];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(90:2) {#if samples.length > 0}",
		ctx
	});

	return block;
}

// (93:4) {#each samples as sample}
function create_each_block(ctx) {
	let icon;
	let current;

	icon = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				class: "iconify",
				icon: (/*provider*/ ctx[0] === ''
				? ''
				: '@' + /*provider*/ ctx[0] + ':') + /*prefix*/ ctx[1] + ':' + /*sample*/ ctx[15]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(icon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(icon, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icon_changes = {};

			if (dirty & /*provider, prefix*/ 3) icon_changes.icon = (/*provider*/ ctx[0] === ''
			? ''
			: '@' + /*provider*/ ctx[0] + ':') + /*prefix*/ ctx[1] + ':' + /*sample*/ ctx[15];

			icon.$set(icon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(icon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(icon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(icon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(93:4) {#each samples as sample}",
		ctx
	});

	return block;
}

// (100:2) {#if info.height}
function create_if_block(ctx) {
	let div;
	let height_1;
	let current;

	height_1 = new _Height_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { text: /*height*/ ctx[9] },
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(height_1.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-collection-height");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 100, 3, 2752);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(height_1, div, null);
			current = true;
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(height_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(height_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(height_1);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(100:2) {#if info.height}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let li;
	let div0;
	let a;
	let t0_value = /*info*/ ctx[2].name + "";
	let t0;
	let t1;
	let t2;
	let div2;
	let t3;
	let t4;
	let div1;
	let height_1;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*info*/ ctx[2].author && create_if_block_2(ctx);
	let if_block1 = /*samples*/ ctx[7].length > 0 && create_if_block_1(ctx);
	let if_block2 = /*info*/ ctx[2].height && create_if_block(ctx);

	height_1 = new _Height_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { text: /*info*/ ctx[2].total + '' },
			$$inline: true
		});

	const block = {
		c: function create() {
			li = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("li");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block0) if_block0.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block1) if_block1.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(height_1.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", /*link*/ ctx[4]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 73, 2, 2001);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "iif-collection-text");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 72, 1, 1965);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "iif-collection-total");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 104, 2, 2837);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div2, "class", "iif-collection-data");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div2, file, 88, 1, 2379);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(li, "class", /*className*/ ctx[5]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(li, file, 71, 0, 1913);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, li, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, div0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t1);
			if (if_block0) if_block0.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, t2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, div2);
			if (if_block1) if_block1.m(div2, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t3);
			if (if_block2) if_block2.m(div2, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t4);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, div1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(height_1, div1, null);
			current = true;

			if (!mounted) {
				dispose = [
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*click_handler*/ ctx[11]), false, true, false),
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(li, "click", /*handleBlockClick*/ ctx[10], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*info*/ 4) && t0_value !== (t0_value = /*info*/ ctx[2].name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);

			if (!current || dirty & /*link*/ 16) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", /*link*/ ctx[4]);
			}

			if (/*info*/ ctx[2].author) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					if_block0.m(div0, null);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*samples*/ ctx[7].length > 0) if_block1.p(ctx, dirty);

			if (/*info*/ ctx[2].height) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*info*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div2, t4);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			const height_1_changes = {};
			if (dirty & /*info*/ 4) height_1_changes.text = /*info*/ ctx[2].total + '';
			height_1.$set(height_1_changes);

			if (!current || dirty & /*className*/ 32) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(li, "class", /*className*/ ctx[5]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(height_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(height_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(li);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(height_1);
			mounted = false;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.run_all)(dispose);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-collection';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Item', slots, []);
	let { provider } = $$props;
	let { prefix } = $$props;
	let { info } = $$props;
	let { onClick } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const onExternalClick = registry.link;
	let link;
	let className;
	const samples = getSamples();
	const samplesHeight = getSamplesHeight();

	const height = '|' + (typeof info.height !== 'object'
	? info.height
	: info.height.join(', '));

	function handleBlockClick(event) {
		if (_config_theme__WEBPACK_IMPORTED_MODULE_4__.collectionClickable) {
			event.preventDefault();
			onClick(prefix);
		}
	}

	function getSamplesHeight() {
		if (info.displayHeight) {
			return info.displayHeight;
		} else if (typeof info.height === 'number') {
			return info.height;
		}

		return 0;
	}

	function getSamples() {
		if (info.samples instanceof Array) {
			return info.samples.slice(0, 3);
		}

		return [];
	}

	const writable_props = ['provider', 'prefix', 'info', 'onClick'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Item> was created with unknown prop '${key}'`);
	});

	const click_handler = () => onClick(prefix);

	$$self.$$set = $$props => {
		if ('provider' in $$props) $$invalidate(0, provider = $$props.provider);
		if ('prefix' in $$props) $$invalidate(1, prefix = $$props.prefix);
		if ('info' in $$props) $$invalidate(2, info = $$props.info);
		if ('onClick' in $$props) $$invalidate(3, onClick = $$props.onClick);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		Icon: _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		getProvider: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.getProvider,
		maxIndex: _config_theme__WEBPACK_IMPORTED_MODULE_4__.maxIndex,
		showCollectionAuthorLink: _config_theme__WEBPACK_IMPORTED_MODULE_4__.showCollectionAuthorLink,
		collectionClickable: _config_theme__WEBPACK_IMPORTED_MODULE_4__.collectionClickable,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_5__.phrases,
		Height: _Height_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		baseClass,
		provider,
		prefix,
		info,
		onClick,
		registry,
		onExternalClick,
		link,
		className,
		samples,
		samplesHeight,
		height,
		handleBlockClick,
		getSamplesHeight,
		getSamples
	});

	$$self.$inject_state = $$props => {
		if ('provider' in $$props) $$invalidate(0, provider = $$props.provider);
		if ('prefix' in $$props) $$invalidate(1, prefix = $$props.prefix);
		if ('info' in $$props) $$invalidate(2, info = $$props.info);
		if ('onClick' in $$props) $$invalidate(3, onClick = $$props.onClick);
		if ('link' in $$props) $$invalidate(4, link = $$props.link);
		if ('className' in $$props) $$invalidate(5, className = $$props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*provider, prefix, link*/ 19) {
			$: {
				const providerData = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.getProvider)(provider);

				if (providerData) {
					$$invalidate(4, link = providerData.links.collection.replace('{prefix}', prefix));

					if (link === '') {
						$$invalidate(4, link = '#');
					}
				} else {
					$$invalidate(4, link = '#');
				}
			}
		}

		if ($$self.$$.dirty & /*prefix, provider, info*/ 7) {
			$: {
				$$invalidate(5, className = baseClass + ' ' + baseClass + '--prefix--' + prefix + (provider === ''
				? ''
				: ' ' + baseClass + '--provider--' + provider) + (_config_theme__WEBPACK_IMPORTED_MODULE_4__.collectionClickable
				? ' ' + baseClass + '--clickable'
				: '') + (info.index
				? ' ' + baseClass + '--' + info.index % _config_theme__WEBPACK_IMPORTED_MODULE_4__.maxIndex
				: ''));
			}
		}
	};

	return [
		provider,
		prefix,
		info,
		onClick,
		link,
		className,
		onExternalClick,
		samples,
		samplesHeight,
		height,
		handleBlockClick,
		click_handler
	];
}

class Item extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			provider: 0,
			prefix: 1,
			info: 2,
			onClick: 3
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Item",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*provider*/ ctx[0] === undefined && !('provider' in props)) {
			console.warn("<Item> was created without expected prop 'provider'");
		}

		if (/*prefix*/ ctx[1] === undefined && !('prefix' in props)) {
			console.warn("<Item> was created without expected prop 'prefix'");
		}

		if (/*info*/ ctx[2] === undefined && !('info' in props)) {
			console.warn("<Item> was created without expected prop 'info'");
		}

		if (/*onClick*/ ctx[3] === undefined && !('onClick' in props)) {
			console.warn("<Item> was created without expected prop 'onClick'");
		}
	}

	get provider() {
		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set provider(value) {
		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get prefix() {
		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prefix(value) {
		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get info() {
		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set info(value) {
		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Item);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Container.svelte":
/*!************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Container.svelte ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _wrapper_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../wrapper/icons */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/wrapper/icons.ts");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _IconList_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IconList.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconList.svelte");
/* harmony import */ var _IconGrid_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./IconGrid.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconGrid.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Container.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;










const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Container.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[16] = list[i];
	child_ctx[18] = i;
	return child_ctx;
}

// (197:3) {:else}
function create_else_block(ctx) {
	let icongrid;
	let current;

	const icongrid_spread_levels = [
		/*item*/ ctx[16],
		{ onClick: /*onClick*/ ctx[3] },
		{ isSelecting: /*isSelecting*/ ctx[1] }
	];

	let icongrid_props = {};

	for (let i = 0; i < icongrid_spread_levels.length; i += 1) {
		icongrid_props = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.assign)(icongrid_props, icongrid_spread_levels[i]);
	}

	icongrid = new _IconGrid_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({ props: icongrid_props, $$inline: true });

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(icongrid.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(icongrid, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icongrid_changes = (dirty & /*parsedIcons, onClick, isSelecting*/ 14)
			? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_update)(icongrid_spread_levels, [
					dirty & /*parsedIcons*/ 4 && (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_object)(/*item*/ ctx[16]),
					dirty & /*onClick*/ 8 && { onClick: /*onClick*/ ctx[3] },
					dirty & /*isSelecting*/ 2 && { isSelecting: /*isSelecting*/ ctx[1] }
				])
			: {};

			icongrid.$set(icongrid_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(icongrid.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(icongrid.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(icongrid, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(197:3) {:else}",
		ctx
	});

	return block;
}

// (195:3) {#if isList}
function create_if_block(ctx) {
	let iconlist;
	let current;

	const iconlist_spread_levels = [
		/*item*/ ctx[16],
		{ onClick: /*onClick*/ ctx[3] },
		{ isSelecting: /*isSelecting*/ ctx[1] }
	];

	let iconlist_props = {};

	for (let i = 0; i < iconlist_spread_levels.length; i += 1) {
		iconlist_props = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.assign)(iconlist_props, iconlist_spread_levels[i]);
	}

	iconlist = new _IconList_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({ props: iconlist_props, $$inline: true });

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconlist.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconlist, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconlist_changes = (dirty & /*parsedIcons, onClick, isSelecting*/ 14)
			? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_update)(iconlist_spread_levels, [
					dirty & /*parsedIcons*/ 4 && (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_object)(/*item*/ ctx[16]),
					dirty & /*onClick*/ 8 && { onClick: /*onClick*/ ctx[3] },
					dirty & /*isSelecting*/ 2 && { isSelecting: /*isSelecting*/ ctx[1] }
				])
			: {};

			iconlist.$set(iconlist_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconlist.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconlist.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconlist, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(195:3) {#if isList}",
		ctx
	});

	return block;
}

// (194:2) {#each parsedIcons as item, i (item.name)}
function create_each_block(key_1, ctx) {
	let first;
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*isList*/ ctx[0]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			if_blocks[current_block_type_index].m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(194:2) {#each parsedIcons as item, i (item.name)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let ul;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let div_class_value;
	let current;
	let each_value = /*parsedIcons*/ ctx[2];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*item*/ ctx[16].name;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			ul = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(ul, file, 192, 1, 5521);

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value = baseClass + ' ' + baseClass + (/*isList*/ ctx[0] ? '--list' : '--grid') + (/*isSelecting*/ ctx[1]
			? ' ' + baseClass + '--selecting'
			: ''));

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 190, 0, 5389);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*parsedIcons, onClick, isSelecting, isList*/ 15) {
				each_value = /*parsedIcons*/ ctx[2];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, ul, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*isList, isSelecting*/ 3 && div_class_value !== (div_class_value = baseClass + ' ' + baseClass + (/*isList*/ ctx[0] ? '--list' : '--grid') + (/*isSelecting*/ ctx[1]
			? ' ' + baseClass + '--selecting'
			: ''))) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-icons';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Container', slots, []);
	let { route } = $$props;
	let { selection } = $$props;
	let { blocks } = $$props;
	let { isList } = $$props;
	let { isSelecting } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const filterKeys = ['tags', 'themePrefixes', 'themeSuffixes'];
	const tooltipText = _config_phrases__WEBPACK_IMPORTED_MODULE_5__.phrases.icons.tooltip;
	let showPrefix;
	let mounted = 0;
	let abortLoader = null;
	let updateCounter = 0;

	const loadingEvent = () => {
		$$invalidate(10, updateCounter++, updateCounter);
	};

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onMount)(() => {
		$$invalidate(8, mounted = 1);
	});

	function getFilters(item) {
		let filters = [];
		const icon = item.icon;

		filterKeys.forEach(k => {
			const key = k;

			if (!blocks[key]) {
				return;
			}

			if (icon[key] === void 0) {
				return;
			}

			const block = blocks[key];
			const active = block.active;
			const iconValue = icon[key];

			(typeof iconValue === 'string'
			? [iconValue]
			: iconValue instanceof Array ? iconValue : []).forEach(value => {
				if (value === active) {
					return;
				}

				if (block.filters[value] !== void 0) {
					filters.push({
						action: key,
						value,
						item: block.filters[value]
					});
				}
			});
		});

		if (route.type === 'search') {
			const searchBlocks = blocks;

			if (searchBlocks.collections) {
				const prefix = item.icon.prefix;

				if (searchBlocks.collections.filters[prefix]) {
					filters.push({
						action: 'collections',
						value: prefix,
						item: searchBlocks.collections.filters[prefix]
					});
				}
			}
		}

		return filters;
	}

	let parsedIcons = [];

	function onClick(event, value) {
		if (event === 'toggle') {
			registry.callback({ type: 'selection', icon: value });
			return;
		}

		if (event === 'select' || event === 'deselect') {
			registry.callback({
				type: 'selection',
				icon: value,
				selected: event === 'select'
			});

			return;
		}

		registry.router.action(event, value);
	}

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onDestroy)(() => {
		if (abortLoader !== null) {
			abortLoader();
			$$invalidate(9, abortLoader = null);
		}
	});

	const writable_props = ['route', 'selection', 'blocks', 'isList', 'isSelecting'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Container> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('route' in $$props) $$invalidate(4, route = $$props.route);
		if ('selection' in $$props) $$invalidate(5, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(6, blocks = $$props.blocks);
		if ('isList' in $$props) $$invalidate(0, isList = $$props.isList);
		if ('isSelecting' in $$props) $$invalidate(1, isSelecting = $$props.isSelecting);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		onMount: svelte__WEBPACK_IMPORTED_MODULE_1__.onMount,
		getIcon: _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__.getIcon,
		loadIcons: _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__.loadIcons,
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.iconToString,
		cloneObject: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.cloneObject,
		compareObjects: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.compareObjects,
		getProvider: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.getProvider,
		onDestroy: svelte__WEBPACK_IMPORTED_MODULE_1__.onDestroy,
		isIconSelected: _wrapper_icons__WEBPACK_IMPORTED_MODULE_4__.isIconSelected,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_5__.phrases,
		IconList: _IconList_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		IconGrid: _IconGrid_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		route,
		selection,
		blocks,
		isList,
		isSelecting,
		registry,
		baseClass,
		filterKeys,
		tooltipText,
		showPrefix,
		mounted,
		abortLoader,
		updateCounter,
		loadingEvent,
		getFilters,
		parsedIcons,
		onClick
	});

	$$self.$inject_state = $$props => {
		if ('route' in $$props) $$invalidate(4, route = $$props.route);
		if ('selection' in $$props) $$invalidate(5, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(6, blocks = $$props.blocks);
		if ('isList' in $$props) $$invalidate(0, isList = $$props.isList);
		if ('isSelecting' in $$props) $$invalidate(1, isSelecting = $$props.isSelecting);
		if ('showPrefix' in $$props) $$invalidate(7, showPrefix = $$props.showPrefix);
		if ('mounted' in $$props) $$invalidate(8, mounted = $$props.mounted);
		if ('abortLoader' in $$props) $$invalidate(9, abortLoader = $$props.abortLoader);
		if ('updateCounter' in $$props) $$invalidate(10, updateCounter = $$props.updateCounter);
		if ('parsedIcons' in $$props) $$invalidate(2, parsedIcons = $$props.parsedIcons);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*route*/ 16) {
			$: {
				$$invalidate(7, showPrefix = route.type !== 'collection');
			}
		}

		if ($$self.$$.dirty & /*updateCounter, mounted, parsedIcons, blocks, showPrefix, selection, isList, abortLoader*/ 2021) {
			$: {
				updateCounter;
				let newParsedIcons = [];
				let pending = [];
				const oldKeys = Object.create(null);

				if (mounted === 2) {
					parsedIcons.forEach(icon => {
						oldKeys[icon.name] = icon;
					});
				} else if (mounted === 1) {
					$$invalidate(8, mounted = 2);
				}

				let updated = false;

				blocks.icons.icons.forEach(icon => {
					const name = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.iconToString)(icon);
					const data = (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_2__.getIcon)(name);
					const exists = data !== null;
					const text = showPrefix ? name : icon.name;
					let tooltip = text;

					if (data) {
						tooltip += tooltipText.size.replace('{size}', data.width + ' x ' + data.height);
						tooltip += tooltipText.length.replace('{length}', data.body.length + '');

						if (icon.chars !== void 0) {
							tooltip += tooltipText.char.replace('{char}', typeof icon.chars === 'string'
							? icon.chars
							: icon.chars.join(', '));
						}

						tooltip += tooltipText[data.body.indexOf('currentColor') === -1
						? 'colorful'
						: 'colorless'];
					}

					const providerData = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.getProvider)(icon.provider);
					let link;

					if (providerData) {
						link = providerData.links.icon.replace('{prefix}', icon.prefix).replace('{name}', icon.name);

						if (link === '') {
							link = '#';
						}
					} else {
						link = '#';
					}

					let newItem = {
						name,
						text,
						tooltip,
						icon: (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.cloneObject)(icon),
						exists,
						link,
						selected: (0,_wrapper_icons__WEBPACK_IMPORTED_MODULE_4__.isIconSelected)(selection, icon)
					};

					let item = newItem;

					if (isList) {
						item.filters = getFilters(item);
					}

					if (oldKeys[name] === void 0) {
						updated = true;

						if (!exists) {
							pending.push(name);
						}
					} else if (!(0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.compareObjects)(oldKeys[name], item)) {
						updated = true;
					} else {
						item = oldKeys[name];
					}

					newParsedIcons.push(item);
				});

				if (mounted > 0 && pending.length) {
					if (abortLoader !== null) {
						abortLoader();
					}

					$$invalidate(9, abortLoader = (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_2__.loadIcons)(pending, loadingEvent));
				}

				if (updated || parsedIcons.length !== newParsedIcons.length) {
					$$invalidate(2, parsedIcons = newParsedIcons);
				}
			}
		}
	};

	return [
		isList,
		isSelecting,
		parsedIcons,
		onClick,
		route,
		selection,
		blocks,
		showPrefix,
		mounted,
		abortLoader,
		updateCounter
	];
}

class Container extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			route: 4,
			selection: 5,
			blocks: 6,
			isList: 0,
			isSelecting: 1
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Container",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*route*/ ctx[4] === undefined && !('route' in props)) {
			console.warn("<Container> was created without expected prop 'route'");
		}

		if (/*selection*/ ctx[5] === undefined && !('selection' in props)) {
			console.warn("<Container> was created without expected prop 'selection'");
		}

		if (/*blocks*/ ctx[6] === undefined && !('blocks' in props)) {
			console.warn("<Container> was created without expected prop 'blocks'");
		}

		if (/*isList*/ ctx[0] === undefined && !('isList' in props)) {
			console.warn("<Container> was created without expected prop 'isList'");
		}

		if (/*isSelecting*/ ctx[1] === undefined && !('isSelecting' in props)) {
			console.warn("<Container> was created without expected prop 'isSelecting'");
		}
	}

	get route() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selection() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isList() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isList(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isSelecting() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isSelecting(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Container);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Header.svelte":
/*!*********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Header.svelte ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_IconButton_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/IconButton.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/IconButton.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Header.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/Header.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	return child_ctx;
}

// (28:1) {#if mounted && (canChangeLayout || canSelectMultiple)}
function create_if_block(ctx) {
	let div;
	let t;
	let current;
	let if_block0 = /*canSelectMultiple*/ ctx[3] && create_if_block_2(ctx);
	let if_block1 = /*canChangeLayout*/ ctx[1] && create_if_block_1(ctx);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-icons-header-modes");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 28, 2, 747);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
			if (if_block1) if_block1.m(div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*canSelectMultiple*/ ctx[3]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*canSelectMultiple*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div, t);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*canChangeLayout*/ ctx[1]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*canChangeLayout*/ 2) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div, null);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(28:1) {#if mounted && (canChangeLayout || canSelectMultiple)}",
		ctx
	});

	return block;
}

// (30:3) {#if canSelectMultiple}
function create_if_block_2(ctx) {
	let iconbutton;
	let current;

	iconbutton = new _ui_IconButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				icon: /*selectionIcon*/ ctx[7],
				onClick: /*toggleSelection*/ ctx[4],
				title: /*text*/ ctx[8].select
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconbutton.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconbutton, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconbutton_changes = {};
			if (dirty & /*selectionIcon*/ 128) iconbutton_changes.icon = /*selectionIcon*/ ctx[7];
			if (dirty & /*toggleSelection*/ 16) iconbutton_changes.onClick = /*toggleSelection*/ ctx[4];
			iconbutton.$set(iconbutton_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconbutton.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconbutton.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconbutton, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(30:3) {#if canSelectMultiple}",
		ctx
	});

	return block;
}

// (36:3) {#if canChangeLayout}
function create_if_block_1(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = [/*mode*/ ctx[6]];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*icon*/ ctx[11];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < 1; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*mode, changeLayout, text*/ 324) {
				each_value = [/*mode*/ ctx[6]];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(36:3) {#if canChangeLayout}",
		ctx
	});

	return block;
}

// (37:4) {#each [mode] as icon (icon)}
function create_each_block(key_1, ctx) {
	let first;
	let iconbutton;
	let current;

	iconbutton = new _ui_IconButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				icon: /*icon*/ ctx[11],
				onClick: /*changeLayout*/ ctx[2],
				title: /*text*/ ctx[8].modes[/*icon*/ ctx[11]]
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconbutton.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconbutton, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const iconbutton_changes = {};
			if (dirty & /*mode*/ 64) iconbutton_changes.icon = /*icon*/ ctx[11];
			if (dirty & /*changeLayout*/ 4) iconbutton_changes.onClick = /*changeLayout*/ ctx[2];
			if (dirty & /*mode*/ 64) iconbutton_changes.title = /*text*/ ctx[8].modes[/*icon*/ ctx[11]];
			iconbutton.$set(iconbutton_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconbutton.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconbutton.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconbutton, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(37:4) {#each [mode] as icon (icon)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div1;
	let div0;
	let t0;
	let t1;
	let current;
	let if_block = /*mounted*/ ctx[5] && (/*canChangeLayout*/ ctx[1] || /*canSelectMultiple*/ ctx[3]) && create_if_block(ctx);

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*headerText*/ ctx[0]);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block) if_block.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "iif-icons-header-text");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 26, 1, 634);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "iif-icons-header");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 25, 0, 602);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t1);
			if (if_block) if_block.m(div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*headerText*/ 1) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, /*headerText*/ ctx[0]);

			if (/*mounted*/ ctx[5] && (/*canChangeLayout*/ ctx[1] || /*canSelectMultiple*/ ctx[3])) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*mounted, canChangeLayout, canSelectMultiple*/ 42) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(div1, null);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (if_block) if_block.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Header', slots, []);
	let { headerText } = $$props;
	let { isList } = $$props;
	let { canChangeLayout } = $$props;
	let { changeLayout } = $$props;
	let { canSelectMultiple } = $$props;
	let { isSelecting } = $$props;
	let { toggleSelection } = $$props;
	let mounted = false;

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onMount)(() => {
		$$invalidate(5, mounted = true);
	});

	const text = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.icons.header;
	let mode;
	let selectionIcon;

	const writable_props = [
		'headerText',
		'isList',
		'canChangeLayout',
		'changeLayout',
		'canSelectMultiple',
		'isSelecting',
		'toggleSelection'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Header> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('headerText' in $$props) $$invalidate(0, headerText = $$props.headerText);
		if ('isList' in $$props) $$invalidate(9, isList = $$props.isList);
		if ('canChangeLayout' in $$props) $$invalidate(1, canChangeLayout = $$props.canChangeLayout);
		if ('changeLayout' in $$props) $$invalidate(2, changeLayout = $$props.changeLayout);
		if ('canSelectMultiple' in $$props) $$invalidate(3, canSelectMultiple = $$props.canSelectMultiple);
		if ('isSelecting' in $$props) $$invalidate(10, isSelecting = $$props.isSelecting);
		if ('toggleSelection' in $$props) $$invalidate(4, toggleSelection = $$props.toggleSelection);
	};

	$$self.$capture_state = () => ({
		onMount: svelte__WEBPACK_IMPORTED_MODULE_1__.onMount,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		IconButton: _ui_IconButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		headerText,
		isList,
		canChangeLayout,
		changeLayout,
		canSelectMultiple,
		isSelecting,
		toggleSelection,
		mounted,
		text,
		mode,
		selectionIcon
	});

	$$self.$inject_state = $$props => {
		if ('headerText' in $$props) $$invalidate(0, headerText = $$props.headerText);
		if ('isList' in $$props) $$invalidate(9, isList = $$props.isList);
		if ('canChangeLayout' in $$props) $$invalidate(1, canChangeLayout = $$props.canChangeLayout);
		if ('changeLayout' in $$props) $$invalidate(2, changeLayout = $$props.changeLayout);
		if ('canSelectMultiple' in $$props) $$invalidate(3, canSelectMultiple = $$props.canSelectMultiple);
		if ('isSelecting' in $$props) $$invalidate(10, isSelecting = $$props.isSelecting);
		if ('toggleSelection' in $$props) $$invalidate(4, toggleSelection = $$props.toggleSelection);
		if ('mounted' in $$props) $$invalidate(5, mounted = $$props.mounted);
		if ('mode' in $$props) $$invalidate(6, mode = $$props.mode);
		if ('selectionIcon' in $$props) $$invalidate(7, selectionIcon = $$props.selectionIcon);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*isList*/ 512) {
			$: {
				$$invalidate(6, mode = isList ? 'grid' : 'list');
			}
		}

		if ($$self.$$.dirty & /*isSelecting*/ 1024) {
			$: {
				$$invalidate(7, selectionIcon = 'check-list' + (isSelecting ? '-checked' : ''));
			}
		}
	};

	return [
		headerText,
		canChangeLayout,
		changeLayout,
		canSelectMultiple,
		toggleSelection,
		mounted,
		mode,
		selectionIcon,
		text,
		isList,
		isSelecting
	];
}

class Header extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			headerText: 0,
			isList: 9,
			canChangeLayout: 1,
			changeLayout: 2,
			canSelectMultiple: 3,
			isSelecting: 10,
			toggleSelection: 4
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Header",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*headerText*/ ctx[0] === undefined && !('headerText' in props)) {
			console.warn("<Header> was created without expected prop 'headerText'");
		}

		if (/*isList*/ ctx[9] === undefined && !('isList' in props)) {
			console.warn("<Header> was created without expected prop 'isList'");
		}

		if (/*canChangeLayout*/ ctx[1] === undefined && !('canChangeLayout' in props)) {
			console.warn("<Header> was created without expected prop 'canChangeLayout'");
		}

		if (/*changeLayout*/ ctx[2] === undefined && !('changeLayout' in props)) {
			console.warn("<Header> was created without expected prop 'changeLayout'");
		}

		if (/*canSelectMultiple*/ ctx[3] === undefined && !('canSelectMultiple' in props)) {
			console.warn("<Header> was created without expected prop 'canSelectMultiple'");
		}

		if (/*isSelecting*/ ctx[10] === undefined && !('isSelecting' in props)) {
			console.warn("<Header> was created without expected prop 'isSelecting'");
		}

		if (/*toggleSelection*/ ctx[4] === undefined && !('toggleSelection' in props)) {
			console.warn("<Header> was created without expected prop 'toggleSelection'");
		}
	}

	get headerText() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set headerText(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isList() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isList(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get canChangeLayout() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set canChangeLayout(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get changeLayout() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set changeLayout(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get canSelectMultiple() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set canSelectMultiple(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isSelecting() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isSelecting(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get toggleSelection() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set toggleSelection(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Header);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconGrid.svelte":
/*!***********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconGrid.svelte ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconGrid.svelte generated by Svelte v3.43.1 */




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconGrid.svelte";

// (38:2) {:else}
function create_else_block(ctx) {
	let span;
	let t_value = /*icon*/ ctx[2].name + "";
	let t;

	const block = {
		c: function create() {
			span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "iif-icon-loading");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 37, 9, 953);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*icon*/ 4 && t_value !== (t_value = /*icon*/ ctx[2].name + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(38:2) {:else}",
		ctx
	});

	return block;
}

// (32:2) {#if exists}
function create_if_block(ctx) {
	let iconcomponent;
	let t;
	let if_block_anchor;
	let current;

	iconcomponent = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				icon: /*name*/ ctx[0],
				width: "1em",
				height: "1em"
			},
			$$inline: true
		});

	let if_block = /*isSelecting*/ ctx[6] && create_if_block_1(ctx);

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconcomponent.$$.fragment);
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconcomponent, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconcomponent_changes = {};
			if (dirty & /*name*/ 1) iconcomponent_changes.icon = /*name*/ ctx[0];
			iconcomponent.$set(iconcomponent_changes);

			if (/*isSelecting*/ ctx[6]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*isSelecting*/ 64) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconcomponent.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconcomponent.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconcomponent, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(32:2) {#if exists}",
		ctx
	});

	return block;
}

// (34:3) {#if isSelecting}
function create_if_block_1(ctx) {
	let uiicon;
	let current;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				icon: /*selected*/ ctx[4]
				? 'selecting-selected'
				: 'selecting-unselected'
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};

			if (dirty & /*selected*/ 16) uiicon_changes.icon = /*selected*/ ctx[4]
			? 'selecting-selected'
			: 'selecting-unselected';

			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(34:3) {#if isSelecting}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let li;
	let a;
	let current_block_type_index;
	let if_block;
	let current;
	let mounted;
	let dispose;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*exists*/ ctx[3]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			li = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("li");
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			if_block.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", /*link*/ ctx[5]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", /*tooltip*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 26, 1, 663);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(li, "class", /*className*/ ctx[7]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(li, file, 25, 0, 639);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, li, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, a);
			if_blocks[current_block_type_index].m(a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*handleClick*/ ctx[8]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
				if_block.m(a, null);
			}

			if (!current || dirty & /*link*/ 32) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", /*link*/ ctx[5]);
			}

			if (!current || dirty & /*tooltip*/ 2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", /*tooltip*/ ctx[1]);
			}

			if (!current || dirty & /*className*/ 128) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(li, "class", /*className*/ ctx[7]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(li);
			if_blocks[current_block_type_index].d();
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-icon-grid';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('IconGrid', slots, []);
	let { name } = $$props;
	let { tooltip } = $$props;
	let { icon } = $$props;
	let { exists } = $$props;
	let { selected } = $$props;
	let { link } = $$props;
	let { onClick } = $$props;
	let { isSelecting } = $$props;
	let className;

	function handleClick() {
		onClick(
			isSelecting
			? selected ? 'deselect' : 'select'
			: 'toggle',
			icon
		);
	}

	const writable_props = [
		'name',
		'tooltip',
		'icon',
		'exists',
		'selected',
		'link',
		'onClick',
		'isSelecting'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<IconGrid> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('tooltip' in $$props) $$invalidate(1, tooltip = $$props.tooltip);
		if ('icon' in $$props) $$invalidate(2, icon = $$props.icon);
		if ('exists' in $$props) $$invalidate(3, exists = $$props.exists);
		if ('selected' in $$props) $$invalidate(4, selected = $$props.selected);
		if ('link' in $$props) $$invalidate(5, link = $$props.link);
		if ('onClick' in $$props) $$invalidate(9, onClick = $$props.onClick);
		if ('isSelecting' in $$props) $$invalidate(6, isSelecting = $$props.isSelecting);
	};

	$$self.$capture_state = () => ({
		IconComponent: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		name,
		tooltip,
		icon,
		exists,
		selected,
		link,
		onClick,
		isSelecting,
		baseClass,
		className,
		handleClick
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('tooltip' in $$props) $$invalidate(1, tooltip = $$props.tooltip);
		if ('icon' in $$props) $$invalidate(2, icon = $$props.icon);
		if ('exists' in $$props) $$invalidate(3, exists = $$props.exists);
		if ('selected' in $$props) $$invalidate(4, selected = $$props.selected);
		if ('link' in $$props) $$invalidate(5, link = $$props.link);
		if ('onClick' in $$props) $$invalidate(9, onClick = $$props.onClick);
		if ('isSelecting' in $$props) $$invalidate(6, isSelecting = $$props.isSelecting);
		if ('className' in $$props) $$invalidate(7, className = $$props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*exists, selected*/ 24) {
			$: {
				$$invalidate(7, className = baseClass + ' ' + baseClass + (exists ? '--loaded' : '--loading') + (selected ? ' ' + baseClass + '--selected' : ''));
			}
		}
	};

	return [
		name,
		tooltip,
		icon,
		exists,
		selected,
		link,
		isSelecting,
		className,
		handleClick,
		onClick
	];
}

class IconGrid extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			name: 0,
			tooltip: 1,
			icon: 2,
			exists: 3,
			selected: 4,
			link: 5,
			onClick: 9,
			isSelecting: 6
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "IconGrid",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !('name' in props)) {
			console.warn("<IconGrid> was created without expected prop 'name'");
		}

		if (/*tooltip*/ ctx[1] === undefined && !('tooltip' in props)) {
			console.warn("<IconGrid> was created without expected prop 'tooltip'");
		}

		if (/*icon*/ ctx[2] === undefined && !('icon' in props)) {
			console.warn("<IconGrid> was created without expected prop 'icon'");
		}

		if (/*exists*/ ctx[3] === undefined && !('exists' in props)) {
			console.warn("<IconGrid> was created without expected prop 'exists'");
		}

		if (/*selected*/ ctx[4] === undefined && !('selected' in props)) {
			console.warn("<IconGrid> was created without expected prop 'selected'");
		}

		if (/*link*/ ctx[5] === undefined && !('link' in props)) {
			console.warn("<IconGrid> was created without expected prop 'link'");
		}

		if (/*onClick*/ ctx[9] === undefined && !('onClick' in props)) {
			console.warn("<IconGrid> was created without expected prop 'onClick'");
		}

		if (/*isSelecting*/ ctx[6] === undefined && !('isSelecting' in props)) {
			console.warn("<IconGrid> was created without expected prop 'isSelecting'");
		}
	}

	get name() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tooltip() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tooltip(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get icon() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get exists() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set exists(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selected() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selected(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get link() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set link(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isSelecting() {
		throw new Error("<IconGrid>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isSelecting(value) {
		throw new Error("<IconGrid>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconGrid);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconList.svelte":
/*!***********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconList.svelte ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* harmony import */ var _ui_Filter_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ui/Filter.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconList.svelte generated by Svelte v3.43.1 */






const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/icons/IconList.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[14] = list[i];
	return child_ctx;
}

// (44:3) {#if exists}
function create_if_block_2(ctx) {
	let iconcomponent;
	let t;
	let if_block_anchor;
	let current;

	iconcomponent = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				icon: /*name*/ ctx[0],
				width: "1em",
				height: "1em"
			},
			$$inline: true
		});

	let if_block = /*isSelecting*/ ctx[7] && create_if_block_3(ctx);

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconcomponent.$$.fragment);
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconcomponent, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconcomponent_changes = {};
			if (dirty & /*name*/ 1) iconcomponent_changes.icon = /*name*/ ctx[0];
			iconcomponent.$set(iconcomponent_changes);

			if (/*isSelecting*/ ctx[7]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*isSelecting*/ 128) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block_3(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconcomponent.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconcomponent.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconcomponent, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(44:3) {#if exists}",
		ctx
	});

	return block;
}

// (46:4) {#if isSelecting}
function create_if_block_3(ctx) {
	let uiicon;
	let current;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				icon: /*selected*/ ctx[4]
				? 'selecting-selected'
				: 'selecting-unselected'
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};

			if (dirty & /*selected*/ 16) uiicon_changes.icon = /*selected*/ ctx[4]
			? 'selecting-selected'
			: 'selecting-unselected';

			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(46:4) {#if isSelecting}",
		ctx
	});

	return block;
}

// (62:2) {#if size}
function create_if_block_1(ctx) {
	let div;
	let t0_value = /*size*/ ctx[9].width + "";
	let t0;
	let t1;
	let t2_value = /*size*/ ctx[9].height + "";
	let t2;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(" x ");
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t2_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-icon-size");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 62, 3, 1508);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t2);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*size*/ 512 && t0_value !== (t0_value = /*size*/ ctx[9].width + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);
			if (dirty & /*size*/ 512 && t2_value !== (t2_value = /*size*/ ctx[9].height + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t2, t2_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(62:2) {#if size}",
		ctx
	});

	return block;
}

// (65:2) {#if filters}
function create_if_block(ctx) {
	let each_1_anchor;
	let current;
	let each_value = /*filters*/ ctx[8];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*filters, phrases, onClick*/ 320) {
				each_value = /*filters*/ ctx[8];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(65:2) {#if filters}",
		ctx
	});

	return block;
}

// (66:3) {#each filters as filter}
function create_each_block(ctx) {
	let filter;
	let current;

	function func() {
		return /*func*/ ctx[13](/*filter*/ ctx[14]);
	}

	filter = new _ui_Filter_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				filter: /*filter*/ ctx[14].item,
				title: /*filter*/ ctx[14].item.title === ''
				? _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters.uncategorised
				: /*filter*/ ctx[14].item.title,
				onClick: func
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filter.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filter, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const filter_changes = {};
			if (dirty & /*filters*/ 256) filter_changes.filter = /*filter*/ ctx[14].item;

			if (dirty & /*filters*/ 256) filter_changes.title = /*filter*/ ctx[14].item.title === ''
			? _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.filters.uncategorised
			: /*filter*/ ctx[14].item.title;

			if (dirty & /*onClick, filters*/ 320) filter_changes.onClick = func;
			filter.$set(filter_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filter.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filter.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filter, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(66:3) {#each filters as filter}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let li;
	let div0;
	let a0;
	let t0;
	let div1;
	let a1;
	let t1;
	let t2;
	let t3;
	let div1_class_value;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*exists*/ ctx[3] && create_if_block_2(ctx);
	let if_block1 = /*size*/ ctx[9] && create_if_block_1(ctx);
	let if_block2 = /*filters*/ ctx[8] && create_if_block(ctx);

	const block = {
		c: function create() {
			li = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("li");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			a0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			a1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*text*/ ctx[2]);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a0, "href", /*link*/ ctx[5]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a0, "target", "_blank");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a0, "title", /*tooltip*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a0, file, 38, 2, 980);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "iif-icon-sample");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 37, 1, 948);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a1, "class", "iif-icon-name");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a1, "href", /*link*/ ctx[5]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a1, "title", /*tooltip*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a1, file, 54, 2, 1371);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", div1_class_value = 'iif-icon-data iif-icon-data--filters--' + /*filters*/ ctx[8].length);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 53, 1, 1297);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(li, "class", /*className*/ ctx[10]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(li, file, 36, 0, 924);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, li, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, div0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, a0);
			if (if_block0) if_block0.m(a0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, div1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, a1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a1, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t2);
			if (if_block1) if_block1.m(div1, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t3);
			if (if_block2) if_block2.m(div1, null);
			current = true;

			if (!mounted) {
				dispose = [
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a0, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*handleClick*/ ctx[11]), false, true, false),
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a1, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*handleClick*/ ctx[11]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (/*exists*/ ctx[3]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*exists*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(a0, null);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*link*/ 32) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a0, "href", /*link*/ ctx[5]);
			}

			if (!current || dirty & /*tooltip*/ 2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a0, "title", /*tooltip*/ ctx[1]);
			}

			if (!current || dirty & /*text*/ 4) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, /*text*/ ctx[2]);

			if (!current || dirty & /*link*/ 32) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a1, "href", /*link*/ ctx[5]);
			}

			if (!current || dirty & /*tooltip*/ 2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a1, "title", /*tooltip*/ ctx[1]);
			}

			if (/*size*/ ctx[9]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					if_block1.m(div1, t3);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*filters*/ ctx[8]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*filters*/ 256) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div1, null);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*filters*/ 256 && div1_class_value !== (div1_class_value = 'iif-icon-data iif-icon-data--filters--' + /*filters*/ ctx[8].length)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", div1_class_value);
			}

			if (!current || dirty & /*className*/ 1024) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(li, "class", /*className*/ ctx[10]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(li);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			mounted = false;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.run_all)(dispose);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-icon-list';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('IconList', slots, []);
	let { name } = $$props;
	let { tooltip } = $$props;
	let { text } = $$props;
	let { icon } = $$props;
	let { exists } = $$props;
	let { selected } = $$props;
	let { link } = $$props;
	let { onClick } = $$props;
	let { isSelecting } = $$props;
	let { filters } = $$props;
	let className;
	let size = null;

	function handleClick() {
		onClick(
			isSelecting
			? selected ? 'deselect' : 'select'
			: 'toggle',
			icon
		);
	}

	const writable_props = [
		'name',
		'tooltip',
		'text',
		'icon',
		'exists',
		'selected',
		'link',
		'onClick',
		'isSelecting',
		'filters'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<IconList> was created with unknown prop '${key}'`);
	});

	const func = filter => onClick(filter.action, filter.value);

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('tooltip' in $$props) $$invalidate(1, tooltip = $$props.tooltip);
		if ('text' in $$props) $$invalidate(2, text = $$props.text);
		if ('icon' in $$props) $$invalidate(12, icon = $$props.icon);
		if ('exists' in $$props) $$invalidate(3, exists = $$props.exists);
		if ('selected' in $$props) $$invalidate(4, selected = $$props.selected);
		if ('link' in $$props) $$invalidate(5, link = $$props.link);
		if ('onClick' in $$props) $$invalidate(6, onClick = $$props.onClick);
		if ('isSelecting' in $$props) $$invalidate(7, isSelecting = $$props.isSelecting);
		if ('filters' in $$props) $$invalidate(8, filters = $$props.filters);
	};

	$$self.$capture_state = () => ({
		IconComponent: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		getIcon: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__.getIcon,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		Filter: _ui_Filter_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		name,
		tooltip,
		text,
		icon,
		exists,
		selected,
		link,
		onClick,
		isSelecting,
		filters,
		baseClass,
		className,
		size,
		handleClick
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('tooltip' in $$props) $$invalidate(1, tooltip = $$props.tooltip);
		if ('text' in $$props) $$invalidate(2, text = $$props.text);
		if ('icon' in $$props) $$invalidate(12, icon = $$props.icon);
		if ('exists' in $$props) $$invalidate(3, exists = $$props.exists);
		if ('selected' in $$props) $$invalidate(4, selected = $$props.selected);
		if ('link' in $$props) $$invalidate(5, link = $$props.link);
		if ('onClick' in $$props) $$invalidate(6, onClick = $$props.onClick);
		if ('isSelecting' in $$props) $$invalidate(7, isSelecting = $$props.isSelecting);
		if ('filters' in $$props) $$invalidate(8, filters = $$props.filters);
		if ('className' in $$props) $$invalidate(10, className = $$props.className);
		if ('size' in $$props) $$invalidate(9, size = $$props.size);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*exists, selected*/ 24) {
			$: {
				$$invalidate(10, className = baseClass + ' ' + baseClass + (exists ? '--loaded' : '--loading') + (selected ? ' ' + baseClass + '--selected' : ''));
			}
		}

		if ($$self.$$.dirty & /*exists, name, size*/ 521) {
			$: {
				const newSize = exists ? (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_1__.getIcon)(name) : null;

				if (newSize !== size) {
					$$invalidate(9, size = newSize);
				}
			}
		}
	};

	return [
		name,
		tooltip,
		text,
		exists,
		selected,
		link,
		onClick,
		isSelecting,
		filters,
		size,
		className,
		handleClick,
		icon,
		func
	];
}

class IconList extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			name: 0,
			tooltip: 1,
			text: 2,
			icon: 12,
			exists: 3,
			selected: 4,
			link: 5,
			onClick: 6,
			isSelecting: 7,
			filters: 8
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "IconList",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !('name' in props)) {
			console.warn("<IconList> was created without expected prop 'name'");
		}

		if (/*tooltip*/ ctx[1] === undefined && !('tooltip' in props)) {
			console.warn("<IconList> was created without expected prop 'tooltip'");
		}

		if (/*text*/ ctx[2] === undefined && !('text' in props)) {
			console.warn("<IconList> was created without expected prop 'text'");
		}

		if (/*icon*/ ctx[12] === undefined && !('icon' in props)) {
			console.warn("<IconList> was created without expected prop 'icon'");
		}

		if (/*exists*/ ctx[3] === undefined && !('exists' in props)) {
			console.warn("<IconList> was created without expected prop 'exists'");
		}

		if (/*selected*/ ctx[4] === undefined && !('selected' in props)) {
			console.warn("<IconList> was created without expected prop 'selected'");
		}

		if (/*link*/ ctx[5] === undefined && !('link' in props)) {
			console.warn("<IconList> was created without expected prop 'link'");
		}

		if (/*onClick*/ ctx[6] === undefined && !('onClick' in props)) {
			console.warn("<IconList> was created without expected prop 'onClick'");
		}

		if (/*isSelecting*/ ctx[7] === undefined && !('isSelecting' in props)) {
			console.warn("<IconList> was created without expected prop 'isSelecting'");
		}

		if (/*filters*/ ctx[8] === undefined && !('filters' in props)) {
			console.warn("<IconList> was created without expected prop 'filters'");
		}
	}

	get name() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tooltip() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tooltip(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get text() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get icon() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get exists() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set exists(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selected() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selected(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get link() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set link(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isSelecting() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isSelecting(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get filters() {
		throw new Error("<IconList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set filters(value) {
		throw new Error("<IconList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconList);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/parent/Link.svelte":
/*!********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/parent/Link.svelte ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/parent/Link.svelte generated by Svelte v3.43.1 */



const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/parent/Link.svelte";

function create_fragment(ctx) {
	let div;
	let uiicon;
	let t0;
	let a;
	let t1;
	let current;
	let mounted;
	let dispose;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: { icon: "parent" },
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*text*/ ctx[0]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 7, 1, 179);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-parent-link");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 5, 0, 122);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t1);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					a,
					"click",
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*onClick*/ ctx[1])) /*onClick*/ ctx[1].apply(this, arguments);
					}),
					false,
					true,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;
			if (!current || dirty & /*text*/ 1) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, /*text*/ ctx[0]);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Link', slots, []);
	let { text } = $$props;
	let { onClick } = $$props;
	const writable_props = ['text', 'onClick'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Link> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('text' in $$props) $$invalidate(0, text = $$props.text);
		if ('onClick' in $$props) $$invalidate(1, onClick = $$props.onClick);
	};

	$$self.$capture_state = () => ({ UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__["default"], text, onClick });

	$$self.$inject_state = $$props => {
		if ('text' in $$props) $$invalidate(0, text = $$props.text);
		if ('onClick' in $$props) $$invalidate(1, onClick = $$props.onClick);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [text, onClick];
}

class Link extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { text: 0, onClick: 1 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Link",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*text*/ ctx[0] === undefined && !('text' in props)) {
			console.warn("<Link> was created without expected prop 'text'");
		}

		if (/*onClick*/ ctx[1] === undefined && !('onClick' in props)) {
			console.warn("<Link> was created without expected prop 'onClick'");
		}
	}

	get text() {
		throw new Error("<Link>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<Link>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<Link>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<Link>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Link);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/Full.svelte":
/*!**************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/Full.svelte ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _parts_Buttons_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parts/Buttons.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Buttons.svelte");
/* harmony import */ var _parts_Properties_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parts/Properties.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Properties.svelte");
/* harmony import */ var _parts_samples_Full_svelte__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parts/samples/Full.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Full.svelte");
/* harmony import */ var _parts_samples_Inline_svelte__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parts/samples/Inline.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Inline.svelte");
/* harmony import */ var _parts_Icons_svelte__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parts/Icons.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Icons.svelte");
/* harmony import */ var _parts_FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./parts/FooterBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte");
/* harmony import */ var _blocks_CollectionInfo_svelte__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../blocks/CollectionInfo.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte");
/* harmony import */ var _parts_name_Simple_svelte__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parts/name/Simple.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/name/Simple.svelte");
/* harmony import */ var _parts_code_Container_svelte__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parts/code/Container.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Container.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/Full.svelte generated by Svelte v3.43.1 */


















const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/Full.svelte";

// (82:0) {#if showButtons || hasIcons}
function create_if_block(ctx) {
	let block;
	let current;

	block = new _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				type: "footer",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const block_changes = {};

			if (dirty & /*$$scope, icon, icons, route, customisations, customise, hasIcons, infoBlockTitle, infoBlock*/ 767) {
				block_changes.$$scope = { dirty, ctx };
			}

			block.$set(block_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_if_block.name,
		type: "if",
		source: "(82:0) {#if showButtons || hasIcons}",
		ctx
	});

	return block_1;
}

// (85:3) {#if icon}
function create_if_block_7(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block_8, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (_config_components__WEBPACK_IMPORTED_MODULE_4__.customiseInline && /*customisations*/ ctx[2].inline) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_7.name,
		type: "if",
		source: "(85:3) {#if icon}",
		ctx
	});

	return block;
}

// (88:4) {:else}
function create_else_block(ctx) {
	let sample;
	let current;

	sample = new _parts_samples_Full_svelte__WEBPACK_IMPORTED_MODULE_8__["default"]({
			props: {
				icon: /*icon*/ ctx[4],
				customisations: /*customisations*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sample.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sample, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const sample_changes = {};
			if (dirty & /*icon*/ 16) sample_changes.icon = /*icon*/ ctx[4];
			if (dirty & /*customisations*/ 4) sample_changes.customisations = /*customisations*/ ctx[2];
			sample.$set(sample_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sample.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sample.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sample, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(88:4) {:else}",
		ctx
	});

	return block;
}

// (86:4) {#if customiseInline && customisations.inline}
function create_if_block_8(ctx) {
	let inlinesample;
	let current;

	inlinesample = new _parts_samples_Inline_svelte__WEBPACK_IMPORTED_MODULE_9__["default"]({
			props: {
				icon: /*icon*/ ctx[4],
				customisations: /*customisations*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(inlinesample.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(inlinesample, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const inlinesample_changes = {};
			if (dirty & /*icon*/ 16) inlinesample_changes.icon = /*icon*/ ctx[4];
			if (dirty & /*customisations*/ 4) inlinesample_changes.customisations = /*customisations*/ ctx[2];
			inlinesample.$set(inlinesample_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(inlinesample.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(inlinesample.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(inlinesample, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_8.name,
		type: "if",
		source: "(86:4) {#if customiseInline && customisations.inline}",
		ctx
	});

	return block;
}

// (95:23) 
function create_if_block_6(ctx) {
	let iconslist;
	let current;

	iconslist = new _parts_Icons_svelte__WEBPACK_IMPORTED_MODULE_10__["default"]({
			props: {
				route: /*route*/ ctx[3],
				icons: /*icons*/ ctx[0],
				customisations: /*customisations*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconslist.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconslist, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconslist_changes = {};
			if (dirty & /*route*/ 8) iconslist_changes.route = /*route*/ ctx[3];
			if (dirty & /*icons*/ 1) iconslist_changes.icons = /*icons*/ ctx[0];
			if (dirty & /*customisations*/ 4) iconslist_changes.customisations = /*customisations*/ ctx[2];
			iconslist.$set(iconslist_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconslist.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconslist.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconslist, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_6.name,
		type: "if",
		source: "(95:23) ",
		ctx
	});

	return block;
}

// (93:4) {#if icon}
function create_if_block_5(ctx) {
	let iconname;
	let current;

	iconname = new _parts_name_Simple_svelte__WEBPACK_IMPORTED_MODULE_13__["default"]({
			props: {
				icon: /*icon*/ ctx[4],
				route: /*route*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconname.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconname, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const iconname_changes = {};
			if (dirty & /*icon*/ 16) iconname_changes.icon = /*icon*/ ctx[4];
			if (dirty & /*route*/ 8) iconname_changes.route = /*route*/ ctx[3];
			iconname.$set(iconname_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconname.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconname.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconname, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_5.name,
		type: "if",
		source: "(93:4) {#if icon}",
		ctx
	});

	return block;
}

// (98:4) {#if infoBlock}
function create_if_block_4(ctx) {
	let footerblock;
	let current;

	footerblock = new _parts_FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_11__["default"]({
			props: {
				name: "info",
				title: /*infoBlockTitle*/ ctx[7],
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(footerblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(footerblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const footerblock_changes = {};
			if (dirty & /*infoBlockTitle*/ 128) footerblock_changes.title = /*infoBlockTitle*/ ctx[7];

			if (dirty & /*$$scope, infoBlock*/ 576) {
				footerblock_changes.$$scope = { dirty, ctx };
			}

			footerblock.$set(footerblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(footerblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(footerblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(footerblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(98:4) {#if infoBlock}",
		ctx
	});

	return block;
}

// (99:5) <FooterBlock name="info" title={infoBlockTitle}>
function create_default_slot_1(ctx) {
	let infoblock;
	let current;

	infoblock = new _blocks_CollectionInfo_svelte__WEBPACK_IMPORTED_MODULE_12__["default"]({
			props: {
				name: "info",
				block: /*infoBlock*/ ctx[6],
				short: true,
				showTitle: false
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(infoblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(infoblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const infoblock_changes = {};
			if (dirty & /*infoBlock*/ 64) infoblock_changes.block = /*infoBlock*/ ctx[6];
			infoblock.$set(infoblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(infoblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(infoblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(infoblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(99:5) <FooterBlock name=\\\"info\\\" title={infoBlockTitle}>",
		ctx
	});

	return block;
}

// (107:4) {#if showCustomisatons && hasIcons}
function create_if_block_3(ctx) {
	let propertiescontainer;
	let current;

	propertiescontainer = new _parts_Properties_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				icons: /*icons*/ ctx[0],
				customise: /*customise*/ ctx[1],
				customisations: /*customisations*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(propertiescontainer.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(propertiescontainer, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const propertiescontainer_changes = {};
			if (dirty & /*icons*/ 1) propertiescontainer_changes.icons = /*icons*/ ctx[0];
			if (dirty & /*customise*/ 2) propertiescontainer_changes.customise = /*customise*/ ctx[1];
			if (dirty & /*customisations*/ 4) propertiescontainer_changes.customisations = /*customisations*/ ctx[2];
			propertiescontainer.$set(propertiescontainer_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(propertiescontainer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(propertiescontainer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(propertiescontainer, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(107:4) {#if showCustomisatons && hasIcons}",
		ctx
	});

	return block;
}

// (110:4) {#if showCode && icon}
function create_if_block_2(ctx) {
	let codeblock;
	let current;

	codeblock = new _parts_code_Container_svelte__WEBPACK_IMPORTED_MODULE_14__["default"]({
			props: {
				icon: /*icon*/ ctx[4],
				customisations: /*customisations*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(codeblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(codeblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const codeblock_changes = {};
			if (dirty & /*icon*/ 16) codeblock_changes.icon = /*icon*/ ctx[4];
			if (dirty & /*customisations*/ 4) codeblock_changes.customisations = /*customisations*/ ctx[2];
			codeblock.$set(codeblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(codeblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(codeblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(codeblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(110:4) {#if showCode && icon}",
		ctx
	});

	return block;
}

// (113:4) {#if showButtons}
function create_if_block_1(ctx) {
	let buttonscontainer;
	let current;

	buttonscontainer = new _parts_Buttons_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				icons: /*icons*/ ctx[0],
				route: /*route*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(buttonscontainer.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(buttonscontainer, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const buttonscontainer_changes = {};
			if (dirty & /*icons*/ 1) buttonscontainer_changes.icons = /*icons*/ ctx[0];
			if (dirty & /*route*/ 8) buttonscontainer_changes.route = /*route*/ ctx[3];
			buttonscontainer.$set(buttonscontainer_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(buttonscontainer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(buttonscontainer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(buttonscontainer, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(113:4) {#if showButtons}",
		ctx
	});

	return block;
}

// (83:1) <Block type="footer">
function create_default_slot(ctx) {
	let div1;
	let t0;
	let div0;
	let current_block_type_index;
	let if_block1;
	let t1;
	let t2;
	let t3;
	let t4;
	let div0_class_value;
	let div1_class_value;
	let current;
	let if_block0 = /*icon*/ ctx[4] && create_if_block_7(ctx);
	const if_block_creators = [create_if_block_5, create_if_block_6];
	const if_blocks = [];

	function select_block_type_1(ctx, dirty) {
		if (/*icon*/ ctx[4]) return 0;
		if (/*hasIcons*/ ctx[5]) return 1;
		return -1;
	}

	if (~(current_block_type_index = select_block_type_1(ctx, -1))) {
		if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	let if_block2 = /*infoBlock*/ ctx[6] && create_if_block_4(ctx);
	let if_block3 = _config_components__WEBPACK_IMPORTED_MODULE_4__.showCustomisatons && /*hasIcons*/ ctx[5] && create_if_block_3(ctx);
	let if_block4 = _config_components__WEBPACK_IMPORTED_MODULE_4__.showCode && /*icon*/ ctx[4] && create_if_block_2(ctx);
	let if_block5 = _config_components__WEBPACK_IMPORTED_MODULE_4__.showButtons && create_if_block_1(ctx);

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block3) if_block3.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block4) if_block4.c();
			t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block5) if_block5.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", div0_class_value = /*icon*/ ctx[4] ? 'iif-footer-full-content' : '');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 91, 3, 2774);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", div1_class_value = /*icon*/ ctx[4] ? 'iif-footer-full' : '');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 83, 2, 2545);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			if (if_block0) if_block0.m(div1, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].m(div0, null);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t1);
			if (if_block2) if_block2.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t2);
			if (if_block3) if_block3.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t3);
			if (if_block4) if_block4.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t4);
			if (if_block5) if_block5.m(div0, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*icon*/ ctx[4]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*icon*/ 16) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_7(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div1, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type_1(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if (~current_block_type_index) {
					if_blocks[current_block_type_index].p(ctx, dirty);
				}
			} else {
				if (if_block1) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});

					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				}

				if (~current_block_type_index) {
					if_block1 = if_blocks[current_block_type_index];

					if (!if_block1) {
						if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block1.c();
					} else {
						if_block1.p(ctx, dirty);
					}

					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div0, t1);
				} else {
					if_block1 = null;
				}
			}

			if (/*infoBlock*/ ctx[6]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*infoBlock*/ 64) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block_4(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div0, t2);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (_config_components__WEBPACK_IMPORTED_MODULE_4__.showCustomisatons && /*hasIcons*/ ctx[5]) {
				if (if_block3) {
					if_block3.p(ctx, dirty);

					if (dirty & /*hasIcons*/ 32) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3, 1);
					}
				} else {
					if_block3 = create_if_block_3(ctx);
					if_block3.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3, 1);
					if_block3.m(div0, t3);
				}
			} else if (if_block3) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3, 1, 1, () => {
					if_block3 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (_config_components__WEBPACK_IMPORTED_MODULE_4__.showCode && /*icon*/ ctx[4]) {
				if (if_block4) {
					if_block4.p(ctx, dirty);

					if (dirty & /*icon*/ 16) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4, 1);
					}
				} else {
					if_block4 = create_if_block_2(ctx);
					if_block4.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4, 1);
					if_block4.m(div0, t4);
				}
			} else if (if_block4) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block4, 1, 1, () => {
					if_block4 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (_config_components__WEBPACK_IMPORTED_MODULE_4__.showButtons) if_block5.p(ctx, dirty);

			if (!current || dirty & /*icon*/ 16 && div0_class_value !== (div0_class_value = /*icon*/ ctx[4] ? 'iif-footer-full-content' : '')) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", div0_class_value);
			}

			if (!current || dirty & /*icon*/ 16 && div1_class_value !== (div1_class_value = /*icon*/ ctx[4] ? 'iif-footer-full' : '')) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", div1_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block5);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block4);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block5);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (if_block0) if_block0.d();

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].d();
			}

			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			if (if_block4) if_block4.d();
			if (if_block5) if_block5.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(83:1) <Block type=\\\"footer\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = (_config_components__WEBPACK_IMPORTED_MODULE_4__.showButtons || /*hasIcons*/ ctx[5]) && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (_config_components__WEBPACK_IMPORTED_MODULE_4__.showButtons || /*hasIcons*/ ctx[5]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*hasIcons*/ 32) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Full', slots, []);
	let { icons } = $$props;
	let { customise } = $$props;
	let { customisations } = $$props;
	let { route } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	let icon;
	let hasIcons;
	let infoBlock;
	let infoBlockTitle;
	const writable_props = ['icons', 'customise', 'customisations', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Full> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icons' in $$props) $$invalidate(0, icons = $$props.icons);
		if ('customise' in $$props) $$invalidate(1, customise = $$props.customise);
		if ('customisations' in $$props) $$invalidate(2, customisations = $$props.customisations);
		if ('route' in $$props) $$invalidate(3, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		getCollectionInfo: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.getCollectionInfo,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases,
		showCollectionInfoBlock: _config_components__WEBPACK_IMPORTED_MODULE_4__.showCollectionInfoBlock,
		showButtons: _config_components__WEBPACK_IMPORTED_MODULE_4__.showButtons,
		showInfoInFooter: _config_components__WEBPACK_IMPORTED_MODULE_4__.showInfoInFooter,
		showCustomisatons: _config_components__WEBPACK_IMPORTED_MODULE_4__.showCustomisatons,
		showCode: _config_components__WEBPACK_IMPORTED_MODULE_4__.showCode,
		customiseInline: _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseInline,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		ButtonsContainer: _parts_Buttons_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		PropertiesContainer: _parts_Properties_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		Sample: _parts_samples_Full_svelte__WEBPACK_IMPORTED_MODULE_8__["default"],
		InlineSample: _parts_samples_Inline_svelte__WEBPACK_IMPORTED_MODULE_9__["default"],
		IconsList: _parts_Icons_svelte__WEBPACK_IMPORTED_MODULE_10__["default"],
		FooterBlock: _parts_FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_11__["default"],
		InfoBlock: _blocks_CollectionInfo_svelte__WEBPACK_IMPORTED_MODULE_12__["default"],
		IconName: _parts_name_Simple_svelte__WEBPACK_IMPORTED_MODULE_13__["default"],
		CodeBlock: _parts_code_Container_svelte__WEBPACK_IMPORTED_MODULE_14__["default"],
		icons,
		customise,
		customisations,
		route,
		registry,
		icon,
		hasIcons,
		infoBlock,
		infoBlockTitle
	});

	$$self.$inject_state = $$props => {
		if ('icons' in $$props) $$invalidate(0, icons = $$props.icons);
		if ('customise' in $$props) $$invalidate(1, customise = $$props.customise);
		if ('customisations' in $$props) $$invalidate(2, customisations = $$props.customisations);
		if ('route' in $$props) $$invalidate(3, route = $$props.route);
		if ('icon' in $$props) $$invalidate(4, icon = $$props.icon);
		if ('hasIcons' in $$props) $$invalidate(5, hasIcons = $$props.hasIcons);
		if ('infoBlock' in $$props) $$invalidate(6, infoBlock = $$props.infoBlock);
		if ('infoBlockTitle' in $$props) $$invalidate(7, infoBlockTitle = $$props.infoBlockTitle);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icons*/ 1) {
			$: {
				$$invalidate(5, hasIcons = icons.length > 0);
				$$invalidate(4, icon = icons.length === 1 ? icons[0] : null);
			}
		}

		if ($$self.$$.dirty & /*icons, icon, route*/ 25) {
			$: {
				let showInfo = true;
				let provider = '';
				let prefix = '';

				if (!_config_components__WEBPACK_IMPORTED_MODULE_4__.showInfoInFooter || !icons.length) {
					showInfo = false;
				} else if (icon) {
					provider = icon.provider;
					prefix = icon.prefix;
				} else {
					for (let i = 0; i < icons.length; i++) {
						const icon = icons[i];

						if (!i) {
							prefix = icon.prefix;
							provider = icon.provider;
							continue;
						}

						if (icon.provider !== provider || icon.prefix !== prefix) {
							showInfo = false;
							break;
						}
					}
				}

				if (_config_components__WEBPACK_IMPORTED_MODULE_4__.showCollectionInfoBlock && showInfo && route.type === 'collection' && provider === route.params.provider && prefix === route.params.prefix) {
					showInfo = false;
				}

				if (showInfo) {
					const info = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.getCollectionInfo)(registry.collections, provider, prefix);

					if (!info) {
						$$invalidate(6, infoBlock = null);
						$$invalidate(7, infoBlockTitle = '');
					} else {
						$$invalidate(6, infoBlock = { type: 'collection-info', prefix, info });
						$$invalidate(7, infoBlockTitle = _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases.footer.about.replace('{title}', info.name));
					}
				} else {
					$$invalidate(6, infoBlock = null);
					$$invalidate(7, infoBlockTitle = '');
				}
			}
		}
	};

	return [
		icons,
		customise,
		customisations,
		route,
		icon,
		hasIcons,
		infoBlock,
		infoBlockTitle
	];
}

class Full extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			icons: 0,
			customise: 1,
			customisations: 2,
			route: 3
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Full",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icons*/ ctx[0] === undefined && !('icons' in props)) {
			console.warn("<Full> was created without expected prop 'icons'");
		}

		if (/*customise*/ ctx[1] === undefined && !('customise' in props)) {
			console.warn("<Full> was created without expected prop 'customise'");
		}

		if (/*customisations*/ ctx[2] === undefined && !('customisations' in props)) {
			console.warn("<Full> was created without expected prop 'customisations'");
		}

		if (/*route*/ ctx[3] === undefined && !('route' in props)) {
			console.warn("<Full> was created without expected prop 'route'");
		}
	}

	get icons() {
		throw new Error("<Full>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icons(value) {
		throw new Error("<Full>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Full>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Full>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Full>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Full>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Full>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Full>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Full);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Buttons.svelte":
/*!***********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Buttons.svelte ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Buttons.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Buttons.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	child_ctx[13] = i;
	return child_ctx;
}

// (89:3) {#if item.icon}
function create_if_block(ctx) {
	let uiicon;
	let current;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: { icon: /*item*/ ctx[11].icon },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};
			if (dirty & /*buttons*/ 2) uiicon_changes.icon = /*item*/ ctx[11].icon;
			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(89:3) {#if item.icon}",
		ctx
	});

	return block;
}

// (85:1) {#each buttons as item, i (item.key)}
function create_each_block(key_1, ctx) {
	let button;
	let t0;
	let t1_value = /*text*/ ctx[3](/*item*/ ctx[11]).replace('{icon}', /*iconName*/ ctx[2]).replace('{count}', /*icons*/ ctx[0].length + '') + "";
	let t1;
	let t2;
	let button_class_value;
	let current;
	let mounted;
	let dispose;
	let if_block = /*item*/ ctx[11].icon && create_if_block(ctx);

	function click_handler() {
		return /*click_handler*/ ctx[6](/*item*/ ctx[11]);
	}

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
			if (if_block) if_block.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", button_class_value = /*item*/ ctx[11].className);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 85, 2, 2354);
			this.first = button;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, button, anchor);
			if (if_block) if_block.m(button, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t2);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(button, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(click_handler), false, true, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (/*item*/ ctx[11].icon) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*buttons*/ 2) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(button, t0);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if ((!current || dirty & /*buttons, iconName, icons*/ 7) && t1_value !== (t1_value = /*text*/ ctx[3](/*item*/ ctx[11]).replace('{icon}', /*iconName*/ ctx[2]).replace('{count}', /*icons*/ ctx[0].length + '') + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);

			if (!current || dirty & /*buttons*/ 2 && button_class_value !== (button_class_value = /*item*/ ctx[11].className)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", button_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(button);
			if (if_block) if_block.d();
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(85:1) {#each buttons as item, i (item.key)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let each_value = /*buttons*/ ctx[1];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*item*/ ctx[11].key;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-footer-buttons");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 83, 0, 2280);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*buttons, onClick, text, iconName, icons*/ 31) {
				each_value = /*buttons*/ ctx[1];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClassName = 'iif-form-button';

function assertNever(v) {
	
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Buttons', slots, []);
	let { icons } = $$props;
	let { route } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const buttonPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases.footerButtons;

	function params(key, button) {
		return { key, button, registry, icons, route };
	}

	function text(item) {
		if (typeof item.text === 'function') {
			return item.text(params(item.key, item));
		}

		if (typeof item.text === 'string') {
			return item.text;
		}

		const key = item.key;

		if (typeof buttonPhrases[key] === 'string') {
			return buttonPhrases[key];
		}

		return key.split('-').map(str => str.slice(0, 1).toUpperCase() + str.slice(1)).join(' ');
	}

	const items = Object.keys(_config_components__WEBPACK_IMPORTED_MODULE_4__.footerButtons).map(key => {
		const button = _config_components__WEBPACK_IMPORTED_MODULE_4__.footerButtons[key];

		const result = {
			...button,
			key,
			className: baseClassName + (button.type
			? ' ' + baseClassName + '--' + button.type
			: '') + (button.icon ? ' ' + baseClassName + '--with-icon' : '')
		};

		return result;
	});

	let buttons;
	let iconName;

	function onClick(button) {
		registry.callback({ type: 'button', button });
	}

	const writable_props = ['icons', 'route'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Buttons> was created with unknown prop '${key}'`);
	});

	const click_handler = item => onClick(item.key);

	$$self.$$set = $$props => {
		if ('icons' in $$props) $$invalidate(0, icons = $$props.icons);
		if ('route' in $$props) $$invalidate(5, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases,
		footerButtons: _config_components__WEBPACK_IMPORTED_MODULE_4__.footerButtons,
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		icons,
		route,
		registry,
		baseClassName,
		buttonPhrases,
		params,
		text,
		items,
		assertNever,
		buttons,
		iconName,
		onClick
	});

	$$self.$inject_state = $$props => {
		if ('icons' in $$props) $$invalidate(0, icons = $$props.icons);
		if ('route' in $$props) $$invalidate(5, route = $$props.route);
		if ('buttons' in $$props) $$invalidate(1, buttons = $$props.buttons);
		if ('iconName' in $$props) $$invalidate(2, iconName = $$props.iconName);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icons*/ 1) {
			$: {
				const total = icons.length;

				$$invalidate(1, buttons = items.filter(item => {
					const display = item.display;

					switch (display) {
						case void 0:
						case 'always':
							return true;
						case 'empty':
							return total === 0;
						case 'icons':
							return total > 0;
						case 'one-icon':
							return total === 1;
						case 'many-icons':
							return total > 1;
						default:
							if (typeof display === 'function') {
								return display(params(item.key, item));
							}
							assertNever(display);
					}
				}));

				$$invalidate(2, iconName = total > 0 ? (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString)(icons[0]) : 'icon');
			}
		}
	};

	return [icons, buttons, iconName, text, onClick, route, click_handler];
}

class Buttons extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icons: 0, route: 5 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Buttons",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icons*/ ctx[0] === undefined && !('icons' in props)) {
			console.warn("<Buttons> was created without expected prop 'icons'");
		}

		if (/*route*/ ctx[5] === undefined && !('route' in props)) {
			console.warn("<Buttons> was created without expected prop 'route'");
		}
	}

	get icons() {
		throw new Error("<Buttons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icons(value) {
		throw new Error("<Buttons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Buttons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Buttons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Buttons);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte":
/*!***************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte";

// (35:1) {#if title !== ''}
function create_if_block_1(ctx) {
	let p;
	let t;
	let current;
	let if_block0 = !/*expanded*/ ctx[2] && create_if_block_3(ctx);

	function select_block_type(ctx, dirty) {
		if (/*canExpand*/ ctx[4]) return create_if_block_2;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block1 = current_block_type(ctx);

	const block = {
		c: function create() {
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			if (if_block0) if_block0.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if_block1.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(p, "class", "iif-footer-block-title");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 35, 2, 961);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			if (if_block0) if_block0.m(p, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t);
			if_block1.m(p, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (!/*expanded*/ ctx[2]) {
				if (if_block0) {
					if (dirty & /*expanded*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_3(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(p, t);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if_block1.p(ctx, dirty);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
			if (if_block0) if_block0.d();
			if_block1.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(35:1) {#if title !== ''}",
		ctx
	});

	return block;
}

// (37:3) {#if !expanded}
function create_if_block_3(ctx) {
	let uiicon;
	let current;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: { icon: "expand" },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(37:3) {#if !expanded}",
		ctx
	});

	return block;
}

// (44:3) {:else}
function create_else_block(ctx) {
	let t_value = /*title*/ ctx[0] + ':' + "";
	let t;

	const block = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*title*/ 1 && t_value !== (t_value = /*title*/ ctx[0] + ':' + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(44:3) {:else}",
		ctx
	});

	return block;
}

// (40:3) {#if canExpand}
function create_if_block_2(ctx) {
	let a;

	let t_value = (!/*expanded*/ ctx[2] && /*titleHidden*/ ctx[1] !== ''
	? /*titleHidden*/ ctx[1]
	: /*title*/ ctx[0]) + (/*expanded*/ ctx[2] ? ':' : '') + "";

	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 40, 4, 1076);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*toggle*/ ctx[5]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*expanded, titleHidden, title*/ 7 && t_value !== (t_value = (!/*expanded*/ ctx[2] && /*titleHidden*/ ctx[1] !== ''
			? /*titleHidden*/ ctx[1]
			: /*title*/ ctx[0]) + (/*expanded*/ ctx[2] ? ':' : '') + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(40:3) {#if canExpand}",
		ctx
	});

	return block;
}

// (47:1) {#if expanded}
function create_if_block(ctx) {
	let current;
	const default_slot_template = /*#slots*/ ctx[8].default;
	const default_slot = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_slot)(default_slot_template, ctx, /*$$scope*/ ctx[7], null);

	const block = {
		c: function create() {
			if (default_slot) default_slot.c();
		},
		m: function mount(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 128)) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_slot_base)(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[7],
						!current
						? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_all_dirty_from_scope)(/*$$scope*/ ctx[7])
						: (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_slot_changes)(default_slot_template, /*$$scope*/ ctx[7], dirty, null),
						null
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(47:1) {#if expanded}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t;
	let current;
	let if_block0 = /*title*/ ctx[0] !== '' && create_if_block_1(ctx);
	let if_block1 = /*expanded*/ ctx[2] && create_if_block(ctx);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", /*className*/ ctx[3]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 33, 0, 915);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
			if (if_block1) if_block1.m(div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*title*/ ctx[0] !== '') {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*title*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div, t);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*expanded*/ ctx[2]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*expanded*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div, null);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*className*/ 8) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", /*className*/ ctx[3]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-footer-block';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('FooterBlock', slots, ['default']);
	let { name } = $$props;
	let { title } = $$props;
	let { titleHidden = '' } = $$props;
	let key = name + 'Visible';
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const config = registry.config.components;
	const canExpand = _config_components__WEBPACK_IMPORTED_MODULE_2__.canToggleFooterBlocks && typeof config[key] === 'boolean';
	let expanded = canExpand && title !== '' ? config[key] : true;
	let className;

	function toggle() {
		$$invalidate(2, expanded = config[key] = !expanded);
		registry.callback({ type: 'config' });
	}

	const writable_props = ['name', 'title', 'titleHidden'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<FooterBlock> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(6, name = $$props.name);
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
		if ('titleHidden' in $$props) $$invalidate(1, titleHidden = $$props.titleHidden);
		if ('$$scope' in $$props) $$invalidate(7, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		canToggleFooterBlocks: _config_components__WEBPACK_IMPORTED_MODULE_2__.canToggleFooterBlocks,
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		name,
		title,
		titleHidden,
		key,
		registry,
		config,
		canExpand,
		expanded,
		baseClass,
		className,
		toggle
	});

	$$self.$inject_state = $$props => {
		if ('name' in $$props) $$invalidate(6, name = $$props.name);
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
		if ('titleHidden' in $$props) $$invalidate(1, titleHidden = $$props.titleHidden);
		if ('key' in $$props) key = $$props.key;
		if ('expanded' in $$props) $$invalidate(2, expanded = $$props.expanded);
		if ('className' in $$props) $$invalidate(3, className = $$props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*name, expanded*/ 68) {
			$: {
				$$invalidate(3, className = baseClass + ' ' + baseClass + '--' + name + ' ' + baseClass + '--' + (expanded ? 'expanded' : 'collapsed'));
			}
		}
	};

	return [
		title,
		titleHidden,
		expanded,
		className,
		canExpand,
		toggle,
		name,
		$$scope,
		slots
	];
}

class FooterBlock extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { name: 6, title: 0, titleHidden: 1 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "FooterBlock",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[6] === undefined && !('name' in props)) {
			console.warn("<FooterBlock> was created without expected prop 'name'");
		}

		if (/*title*/ ctx[0] === undefined && !('title' in props)) {
			console.warn("<FooterBlock> was created without expected prop 'title'");
		}
	}

	get name() {
		throw new Error("<FooterBlock>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<FooterBlock>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<FooterBlock>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<FooterBlock>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get titleHidden() {
		throw new Error("<FooterBlock>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set titleHidden(value) {
		throw new Error("<FooterBlock>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FooterBlock);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Icons.svelte":
/*!*********************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Icons.svelte ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _footer_shorten_icon_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../footer/shorten-icon-name */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/shorten-icon-name.ts");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OptionsBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Icons.svelte generated by Svelte v3.43.1 */










const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Icons.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[13] = list[i];
	child_ctx[15] = i;
	return child_ctx;
}

// (88:5) {#if !onSelect}
function create_if_block_1(ctx) {
	let span;
	let uiicon;
	let current;
	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_8__["default"]({ props: { icon: "reset" }, $$inline: true });

	const block = {
		c: function create() {
			span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "iif-footer-icons-reset");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 88, 6, 2386);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, span, null);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(88:5) {#if !onSelect}",
		ctx
	});

	return block;
}

// (94:4) {#if onSelect}
function create_if_block(ctx) {
	let a;
	let uiicon;
	let a_title_value;
	let current;
	let mounted;
	let dispose;
	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_8__["default"]({ props: { icon: "reset" }, $$inline: true });

	function click_handler_1() {
		return /*click_handler_1*/ ctx[10](/*item*/ ctx[13]);
	}

	const block = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", "iif-footer-icons-reset");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value = /*item*/ ctx[13].removeTitle);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 94, 5, 2513);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(click_handler_1), false, true, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (!current || dirty & /*items*/ 2 && a_title_value !== (a_title_value = /*item*/ ctx[13].removeTitle)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(94:4) {#if onSelect}",
		ctx
	});

	return block;
}

// (79:2) {#each items as item, i (item.name)}
function create_each_block(key_1, ctx) {
	let li;
	let a;
	let iconcomponent;
	let t0;
	let a_title_value;
	let t1;
	let t2;
	let current;
	let mounted;
	let dispose;
	const iconcomponent_spread_levels = [{ icon: /*item*/ ctx[13].name }, /*props*/ ctx[2]];
	let iconcomponent_props = {};

	for (let i = 0; i < iconcomponent_spread_levels.length; i += 1) {
		iconcomponent_props = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.assign)(iconcomponent_props, iconcomponent_spread_levels[i]);
	}

	iconcomponent = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: iconcomponent_props,
			$$inline: true
		});

	let if_block0 = !/*onSelect*/ ctx[0] && create_if_block_1(ctx);

	function click_handler() {
		return /*click_handler*/ ctx[9](/*item*/ ctx[13]);
	}

	let if_block1 = /*onSelect*/ ctx[0] && create_if_block(ctx);

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			li = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("li");
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconcomponent.$$.fragment);
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block0) if_block0.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value = /*item*/ ctx[13].selectTitle);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 80, 4, 2181);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(li, file, 79, 3, 2172);
			this.first = li;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, li, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconcomponent, a, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t0);
			if (if_block0) if_block0.m(a, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, t1);
			if (if_block1) if_block1.m(li, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(li, t2);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(click_handler), false, true, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			const iconcomponent_changes = (dirty & /*items, props*/ 6)
			? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_update)(iconcomponent_spread_levels, [
					dirty & /*items*/ 2 && { icon: /*item*/ ctx[13].name },
					dirty & /*props*/ 4 && (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_object)(/*props*/ ctx[2])
				])
			: {};

			iconcomponent.$set(iconcomponent_changes);

			if (!/*onSelect*/ ctx[0]) {
				if (if_block0) {
					if (dirty & /*onSelect*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(a, null);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*items*/ 2 && a_title_value !== (a_title_value = /*item*/ ctx[13].selectTitle)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value);
			}

			if (/*onSelect*/ ctx[0]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*onSelect*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(li, t2);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconcomponent.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconcomponent.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(li);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconcomponent);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(79:2) {#each items as item, i (item.name)}",
		ctx
	});

	return block;
}

// (77:0) <OptionsBlock type="icons">
function create_default_slot(ctx) {
	let ul;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let each_value = /*items*/ ctx[1];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*item*/ ctx[13].name;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			ul = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(ul, "class", "iif-footer-icons");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(ul, "style", /*style*/ ctx[3]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(ul, file, 77, 1, 2092);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, ul, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*items, onClick, onSelect, props*/ 23) {
				each_value = /*items*/ ctx[1];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, ul, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*style*/ 8) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(ul, "style", /*style*/ ctx[3]);
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(77:0) <OptionsBlock type=\\\"icons\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let optionsblock;
	let current;

	optionsblock = new _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				type: "icons",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(optionsblock.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(optionsblock, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const optionsblock_changes = {};

			if (dirty & /*$$scope, style, items, onSelect, props*/ 65551) {
				optionsblock_changes.$$scope = { dirty, ctx };
			}

			optionsblock.$set(optionsblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(optionsblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(optionsblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(optionsblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Icons', slots, []);
	let { icons } = $$props;
	let { customisations } = $$props;
	let { route } = $$props;
	let { selected = '' } = $$props;
	let { onSelect = null } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	let items;
	const transformations = ['rotate', 'hFlip', 'vFlip'];
	let props;
	let style;

	function onClick(select, icon) {
		if (select && onSelect) {
			onSelect(icon);
			return;
		}

		registry.callback({ type: 'selection', icon, selected: false });
	}

	const writable_props = ['icons', 'customisations', 'route', 'selected', 'onSelect'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Icons> was created with unknown prop '${key}'`);
	});

	const click_handler = item => {
		onClick(true, item.icon);
	};

	const click_handler_1 = item => {
		onClick(false, item.icon);
	};

	$$self.$$set = $$props => {
		if ('icons' in $$props) $$invalidate(5, icons = $$props.icons);
		if ('customisations' in $$props) $$invalidate(6, customisations = $$props.customisations);
		if ('route' in $$props) $$invalidate(7, route = $$props.route);
		if ('selected' in $$props) $$invalidate(8, selected = $$props.selected);
		if ('onSelect' in $$props) $$invalidate(0, onSelect = $$props.onSelect);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		IconComponent: _iconify_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.iconToString,
		canShortenIconName: _config_components__WEBPACK_IMPORTED_MODULE_4__.canShortenIconName,
		shortenIconName: _footer_shorten_icon_name__WEBPACK_IMPORTED_MODULE_5__.shortenIconName,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_6__.phrases,
		OptionsBlock: _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_8__["default"],
		icons,
		customisations,
		route,
		selected,
		onSelect,
		registry,
		items,
		transformations,
		props,
		style,
		onClick
	});

	$$self.$inject_state = $$props => {
		if ('icons' in $$props) $$invalidate(5, icons = $$props.icons);
		if ('customisations' in $$props) $$invalidate(6, customisations = $$props.customisations);
		if ('route' in $$props) $$invalidate(7, route = $$props.route);
		if ('selected' in $$props) $$invalidate(8, selected = $$props.selected);
		if ('onSelect' in $$props) $$invalidate(0, onSelect = $$props.onSelect);
		if ('items' in $$props) $$invalidate(1, items = $$props.items);
		if ('props' in $$props) $$invalidate(2, props = $$props.props);
		if ('style' in $$props) $$invalidate(3, style = $$props.style);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icons, route, onSelect, selected, items*/ 419) {
			$: {
				$$invalidate(1, items = []);

				icons.forEach(icon => {
					const name = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_3__.iconToString)(icon);

					const text = _config_components__WEBPACK_IMPORTED_MODULE_4__.canShortenIconName
					? (0,_footer_shorten_icon_name__WEBPACK_IMPORTED_MODULE_5__.shortenIconName)(route, icon, name)
					: name;

					const removeTitle = _config_phrases__WEBPACK_IMPORTED_MODULE_6__.phrases.footer.remove.replace('{name}', text);

					const selectTitle = onSelect
					? _config_phrases__WEBPACK_IMPORTED_MODULE_6__.phrases.footer.select.replace('{name}', text)
					: removeTitle;

					const item = {
						icon,
						name,
						text,
						removeTitle,
						selectTitle,
						selected: name === selected
					};

					items.push(item);
				});
			}
		}

		if ($$self.$$.dirty & /*customisations*/ 64) {
			$: {
				$$invalidate(2, props = {});

				transformations.forEach(key => {
					if (customisations[key]) {
						$$invalidate(2, props[key] = customisations[key], props);
					}
				});

				if (typeof customisations.height === 'number' && customisations.height < 32) {
					$$invalidate(2, props.height = customisations.height, props);

					if (customisations.width) {
						$$invalidate(2, props.width = customisations.width, props);
					}
				}

				$$invalidate(3, style = '');

				if (customisations.color !== '') {
					$$invalidate(3, style = 'color: ' + customisations.color + ';');
				}
			}
		}
	};

	return [
		onSelect,
		items,
		props,
		style,
		onClick,
		icons,
		customisations,
		route,
		selected,
		click_handler,
		click_handler_1
	];
}

class Icons extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			icons: 5,
			customisations: 6,
			route: 7,
			selected: 8,
			onSelect: 0
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Icons",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icons*/ ctx[5] === undefined && !('icons' in props)) {
			console.warn("<Icons> was created without expected prop 'icons'");
		}

		if (/*customisations*/ ctx[6] === undefined && !('customisations' in props)) {
			console.warn("<Icons> was created without expected prop 'customisations'");
		}

		if (/*route*/ ctx[7] === undefined && !('route' in props)) {
			console.warn("<Icons> was created without expected prop 'route'");
		}
	}

	get icons() {
		throw new Error("<Icons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icons(value) {
		throw new Error("<Icons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Icons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Icons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Icons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Icons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selected() {
		throw new Error("<Icons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selected(value) {
		throw new Error("<Icons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onSelect() {
		throw new Error("<Icons>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onSelect(value) {
		throw new Error("<Icons>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icons);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte":
/*!****************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte generated by Svelte v3.43.1 */



const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte";

function create_fragment(ctx) {
	let div1;
	let p;
	let t0;
	let t1;
	let div0;
	let div1_class_value;
	let current;
	const default_slot_template = /*#slots*/ ctx[3].default;
	const default_slot = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_slot)(default_slot_template, ctx, /*$$scope*/ ctx[2], null);

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*title*/ ctx[1]);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (default_slot) default_slot.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 17, 1, 486);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 18, 1, 502);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", div1_class_value = baseClass + ' ' + baseClass + '--' + /*type*/ ctx[0]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 16, 0, 429);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, p);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*title*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, /*title*/ ctx[1]);

			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_slot_base)(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[2],
						!current
						? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_all_dirty_from_scope)(/*$$scope*/ ctx[2])
						: (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_slot_changes)(default_slot_template, /*$$scope*/ ctx[2], dirty, null),
						null
					);
				}
			}

			if (!current || dirty & /*type*/ 1 && div1_class_value !== (div1_class_value = baseClass + ' ' + baseClass + '--' + /*type*/ ctx[0])) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", div1_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (default_slot) default_slot.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-footer-options-block';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('OptionsBlock', slots, ['default']);
	let { type } = $$props;
	let title;
	const writable_props = ['type'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<OptionsBlock> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('type' in $$props) $$invalidate(0, type = $$props.type);
		if ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({ phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases, type, baseClass, title });

	$$self.$inject_state = $$props => {
		if ('type' in $$props) $$invalidate(0, type = $$props.type);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*type*/ 1) {
			$: {
				const text = _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases.footerBlocks;

				$$invalidate(1, title = text[type] === void 0
				? type.split(' ').map(str => str.slice(0, 1).toUpperCase() + str.slice(1)).join(' ')
				: text[type]);
			}
		}
	};

	return [type, title, $$scope, slots];
}

class OptionsBlock extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { type: 0 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "OptionsBlock",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*type*/ ctx[0] === undefined && !('type' in props)) {
			console.warn("<OptionsBlock> was created without expected prop 'type'");
		}
	}

	get type() {
		throw new Error("<OptionsBlock>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set type(value) {
		throw new Error("<OptionsBlock>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OptionsBlock);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Properties.svelte":
/*!**************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Properties.svelte ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FooterBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _props_Color_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./props/Color.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Color.svelte");
/* harmony import */ var _props_Size_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./props/Size.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Size.svelte");
/* harmony import */ var _props_Rotate_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./props/Rotate.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Rotate.svelte");
/* harmony import */ var _props_Flip_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./props/Flip.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Flip.svelte");
/* harmony import */ var _props_Inline_svelte__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./props/Inline.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Inline.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Properties.svelte generated by Svelte v3.43.1 */












const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/Properties.svelte";

// (22:2) {#if customiseColor}
function create_if_block_4(ctx) {
	let colorblock;
	let current;

	colorblock = new _props_Color_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				icons: /*icons*/ ctx[0],
				value: typeof /*customisations*/ ctx[1].color === 'string'
				? /*customisations*/ ctx[1].color
				: '',
				customise: /*customise*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(colorblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(colorblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const colorblock_changes = {};
			if (dirty & /*icons*/ 1) colorblock_changes.icons = /*icons*/ ctx[0];

			if (dirty & /*customisations*/ 2) colorblock_changes.value = typeof /*customisations*/ ctx[1].color === 'string'
			? /*customisations*/ ctx[1].color
			: '';

			if (dirty & /*customise*/ 4) colorblock_changes.customise = /*customise*/ ctx[2];
			colorblock.$set(colorblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(colorblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(colorblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(colorblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(22:2) {#if customiseColor}",
		ctx
	});

	return block;
}

// (28:2) {#if customiseWidth || customiseHeight}
function create_if_block_3(ctx) {
	let sizeblock;
	let current;

	sizeblock = new _props_Size_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				icons: /*icons*/ ctx[0],
				customisations: /*customisations*/ ctx[1],
				customise: /*customise*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sizeblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sizeblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const sizeblock_changes = {};
			if (dirty & /*icons*/ 1) sizeblock_changes.icons = /*icons*/ ctx[0];
			if (dirty & /*customisations*/ 2) sizeblock_changes.customisations = /*customisations*/ ctx[1];
			if (dirty & /*customise*/ 4) sizeblock_changes.customise = /*customise*/ ctx[2];
			sizeblock.$set(sizeblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sizeblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sizeblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sizeblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(28:2) {#if customiseWidth || customiseHeight}",
		ctx
	});

	return block;
}

// (31:2) {#if customiseFlip}
function create_if_block_2(ctx) {
	let flipblock;
	let current;

	flipblock = new _props_Flip_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				customisations: /*customisations*/ ctx[1],
				customise: /*customise*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(flipblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(flipblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const flipblock_changes = {};
			if (dirty & /*customisations*/ 2) flipblock_changes.customisations = /*customisations*/ ctx[1];
			if (dirty & /*customise*/ 4) flipblock_changes.customise = /*customise*/ ctx[2];
			flipblock.$set(flipblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(flipblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(flipblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(flipblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(31:2) {#if customiseFlip}",
		ctx
	});

	return block;
}

// (34:2) {#if customiseRotate}
function create_if_block_1(ctx) {
	let rotateblock;
	let current;

	rotateblock = new _props_Rotate_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				value: /*customisations*/ ctx[1].rotate,
				customise: /*customise*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(rotateblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(rotateblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const rotateblock_changes = {};
			if (dirty & /*customisations*/ 2) rotateblock_changes.value = /*customisations*/ ctx[1].rotate;
			if (dirty & /*customise*/ 4) rotateblock_changes.customise = /*customise*/ ctx[2];
			rotateblock.$set(rotateblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(rotateblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(rotateblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(rotateblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(34:2) {#if customiseRotate}",
		ctx
	});

	return block;
}

// (37:2) {#if customiseInline && icons.length === 1}
function create_if_block(ctx) {
	let inlineblock;
	let current;

	inlineblock = new _props_Inline_svelte__WEBPACK_IMPORTED_MODULE_8__["default"]({
			props: {
				value: /*customisations*/ ctx[1].inline,
				customise: /*customise*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(inlineblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(inlineblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const inlineblock_changes = {};
			if (dirty & /*customisations*/ 2) inlineblock_changes.value = /*customisations*/ ctx[1].inline;
			if (dirty & /*customise*/ 4) inlineblock_changes.customise = /*customise*/ ctx[2];
			inlineblock.$set(inlineblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(inlineblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(inlineblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(inlineblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(37:2) {#if customiseInline && icons.length === 1}",
		ctx
	});

	return block;
}

// (20:0) <FooterBlock name="props" {title}>
function create_default_slot(ctx) {
	let div;
	let t0;
	let t1;
	let t2;
	let t3;
	let current;
	let if_block0 = _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseColor && create_if_block_4(ctx);
	let if_block1 = (_config_components__WEBPACK_IMPORTED_MODULE_3__.customiseWidth || _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseHeight) && create_if_block_3(ctx);
	let if_block2 = _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseFlip && create_if_block_2(ctx);
	let if_block3 = _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseRotate && create_if_block_1(ctx);
	let if_block4 = _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseInline && /*icons*/ ctx[0].length === 1 && create_if_block(ctx);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block3) if_block3.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block4) if_block4.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 20, 1, 783);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			if (if_block1) if_block1.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
			if (if_block2) if_block2.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t2);
			if (if_block3) if_block3.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t3);
			if (if_block4) if_block4.m(div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (_config_components__WEBPACK_IMPORTED_MODULE_3__.customiseColor) if_block0.p(ctx, dirty);
			if (_config_components__WEBPACK_IMPORTED_MODULE_3__.customiseWidth || _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseHeight) if_block1.p(ctx, dirty);
			if (_config_components__WEBPACK_IMPORTED_MODULE_3__.customiseFlip) if_block2.p(ctx, dirty);
			if (_config_components__WEBPACK_IMPORTED_MODULE_3__.customiseRotate) if_block3.p(ctx, dirty);

			if (_config_components__WEBPACK_IMPORTED_MODULE_3__.customiseInline && /*icons*/ ctx[0].length === 1) {
				if (if_block4) {
					if_block4.p(ctx, dirty);

					if (dirty & /*icons*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4, 1);
					}
				} else {
					if_block4 = create_if_block(ctx);
					if_block4.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4, 1);
					if_block4.m(div, null);
				}
			} else if (if_block4) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block4, 1, 1, () => {
					if_block4 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block4);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			if (if_block4) if_block4.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(20:0) <FooterBlock name=\\\"props\\\" {title}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let footerblock;
	let current;

	footerblock = new _FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				name: "props",
				title: /*title*/ ctx[3],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(footerblock.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(footerblock, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const footerblock_changes = {};
			if (dirty & /*title*/ 8) footerblock_changes.title = /*title*/ ctx[3];

			if (dirty & /*$$scope, customisations, customise, icons*/ 23) {
				footerblock_changes.$$scope = { dirty, ctx };
			}

			footerblock.$set(footerblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(footerblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(footerblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(footerblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Properties', slots, []);
	let { icons } = $$props;
	let { customisations } = $$props;
	let { customise } = $$props;
	let title;
	const writable_props = ['icons', 'customisations', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Properties> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icons' in $$props) $$invalidate(0, icons = $$props.icons);
		if ('customisations' in $$props) $$invalidate(1, customisations = $$props.customisations);
		if ('customise' in $$props) $$invalidate(2, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases,
		FooterBlock: _FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		showFooterBlockTitles: _config_components__WEBPACK_IMPORTED_MODULE_3__.showFooterBlockTitles,
		customiseColor: _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseColor,
		customiseWidth: _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseWidth,
		customiseHeight: _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseHeight,
		customiseRotate: _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseRotate,
		customiseFlip: _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseFlip,
		customiseInline: _config_components__WEBPACK_IMPORTED_MODULE_3__.customiseInline,
		ColorBlock: _props_Color_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		SizeBlock: _props_Size_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		RotateBlock: _props_Rotate_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		FlipBlock: _props_Flip_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		InlineBlock: _props_Inline_svelte__WEBPACK_IMPORTED_MODULE_8__["default"],
		icons,
		customisations,
		customise,
		title
	});

	$$self.$inject_state = $$props => {
		if ('icons' in $$props) $$invalidate(0, icons = $$props.icons);
		if ('customisations' in $$props) $$invalidate(1, customisations = $$props.customisations);
		if ('customise' in $$props) $$invalidate(2, customise = $$props.customise);
		if ('title' in $$props) $$invalidate(3, title = $$props.title);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icons*/ 1) {
			$: {
				$$invalidate(3, title = _config_components__WEBPACK_IMPORTED_MODULE_3__.showFooterBlockTitles
				? _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases.footerBlocks[icons.length > 1 ? 'title2' : 'title']
				: '');
			}
		}
	};

	return [icons, customisations, customise, title];
}

class Properties extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			icons: 0,
			customisations: 1,
			customise: 2
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Properties",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icons*/ ctx[0] === undefined && !('icons' in props)) {
			console.warn("<Properties> was created without expected prop 'icons'");
		}

		if (/*customisations*/ ctx[1] === undefined && !('customisations' in props)) {
			console.warn("<Properties> was created without expected prop 'customisations'");
		}

		if (/*customise*/ ctx[2] === undefined && !('customise' in props)) {
			console.warn("<Properties> was created without expected prop 'customise'");
		}
	}

	get icons() {
		throw new Error("<Properties>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icons(value) {
		throw new Error("<Properties>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Properties>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Properties>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Properties>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Properties>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Properties);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Code.svelte":
/*!*************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Code.svelte ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_search_core_lib_code_samples_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core/lib/code-samples/code */ "./node_modules/@iconify/search-core/lib/code-samples/code.js");
/* harmony import */ var _iconify_search_core_lib_code_samples_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core/lib/code-samples/phrases */ "./node_modules/@iconify/search-core/lib/code-samples/phrases.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* harmony import */ var _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Sample.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Sample.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Code.svelte generated by Svelte v3.43.1 */











const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Code.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[9] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[12] = list[i];
	return child_ctx;
}

// (30:0) {#if output}
function create_if_block(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;
	let t4;
	let t5;
	let if_block6_anchor;
	let current;
	let if_block0 = /*output*/ ctx[2].header && create_if_block_11(ctx);
	let if_block1 = /*codePhrases*/ ctx[5].intro[/*mode*/ ctx[1]] && create_if_block_10(ctx);
	let if_block2 = /*output*/ ctx[2].iconify && create_if_block_9(ctx);
	let if_block3 = /*output*/ ctx[2].raw && create_if_block_8(ctx);
	let if_block4 = /*output*/ ctx[2].component && create_if_block_5(ctx);
	let if_block5 = /*output*/ ctx[2].footer && create_if_block_2(ctx);
	let if_block6 = /*output*/ ctx[2].docs && create_if_block_1(ctx);

	const block = {
		c: function create() {
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block3) if_block3.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block4) if_block4.c();
			t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block5) if_block5.c();
			t5 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block6) if_block6.c();
			if_block6_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
			if (if_block1) if_block1.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
			if (if_block2) if_block2.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t2, anchor);
			if (if_block3) if_block3.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t3, anchor);
			if (if_block4) if_block4.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t4, anchor);
			if (if_block5) if_block5.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t5, anchor);
			if (if_block6) if_block6.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block6_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*output*/ ctx[2].header) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_11(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(t0.parentNode, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*codePhrases*/ ctx[5].intro[/*mode*/ ctx[1]]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_10(ctx);
					if_block1.c();
					if_block1.m(t1.parentNode, t1);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*output*/ ctx[2].iconify) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block_9(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(t2.parentNode, t2);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*output*/ ctx[2].raw) {
				if (if_block3) {
					if_block3.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3, 1);
					}
				} else {
					if_block3 = create_if_block_8(ctx);
					if_block3.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3, 1);
					if_block3.m(t3.parentNode, t3);
				}
			} else if (if_block3) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3, 1, 1, () => {
					if_block3 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*output*/ ctx[2].component) {
				if (if_block4) {
					if_block4.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4, 1);
					}
				} else {
					if_block4 = create_if_block_5(ctx);
					if_block4.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4, 1);
					if_block4.m(t4.parentNode, t4);
				}
			} else if (if_block4) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block4, 1, 1, () => {
					if_block4 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*output*/ ctx[2].footer) {
				if (if_block5) {
					if_block5.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block5, 1);
					}
				} else {
					if_block5 = create_if_block_2(ctx);
					if_block5.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block5, 1);
					if_block5.m(t5.parentNode, t5);
				}
			} else if (if_block5) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block5, 1, 1, () => {
					if_block5 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*output*/ ctx[2].docs) {
				if (if_block6) {
					if_block6.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block6, 1);
					}
				} else {
					if_block6 = create_if_block_1(ctx);
					if_block6.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block6, 1);
					if_block6.m(if_block6_anchor.parentNode, if_block6_anchor);
				}
			} else if (if_block6) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block6, 1, 1, () => {
					if_block6 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block4);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block5);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block6);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block4);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block5);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block6);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block0) if_block0.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
			if (if_block1) if_block1.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
			if (if_block2) if_block2.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t2);
			if (if_block3) if_block3.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t3);
			if (if_block4) if_block4.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t4);
			if (if_block5) if_block5.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t5);
			if (if_block6) if_block6.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block6_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(30:0) {#if output}",
		ctx
	});

	return block;
}

// (31:1) {#if output.header}
function create_if_block_11(ctx) {
	let t;
	let if_block1_anchor;
	let current;
	let if_block0 = /*output*/ ctx[2].header.text && create_if_block_13(ctx);
	let if_block1 = /*output*/ ctx[2].header.code && create_if_block_12(ctx);

	const block = {
		c: function create() {
			if (if_block0) if_block0.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			if_block1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			if (if_block1) if_block1.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*output*/ ctx[2].header.text) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_13(ctx);
					if_block0.c();
					if_block0.m(t.parentNode, t);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*output*/ ctx[2].header.code) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_12(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block0) if_block0.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			if (if_block1) if_block1.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_11.name,
		type: "if",
		source: "(31:1) {#if output.header}",
		ctx
	});

	return block;
}

// (32:2) {#if output.header.text}
function create_if_block_13(ctx) {
	let p;
	let t_value = /*output*/ ctx[2].header.text + "";
	let t;

	const block = {
		c: function create() {
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 32, 3, 1096);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*output*/ 4 && t_value !== (t_value = /*output*/ ctx[2].header.text + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_13.name,
		type: "if",
		source: "(32:2) {#if output.header.text}",
		ctx
	});

	return block;
}

// (35:2) {#if output.header.code}
function create_if_block_12(ctx) {
	let sampleinput;
	let current;

	sampleinput = new _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { content: /*output*/ ctx[2].header.code },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sampleinput.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sampleinput, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const sampleinput_changes = {};
			if (dirty & /*output*/ 4) sampleinput_changes.content = /*output*/ ctx[2].header.code;
			sampleinput.$set(sampleinput_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sampleinput.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sampleinput.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sampleinput, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_12.name,
		type: "if",
		source: "(35:2) {#if output.header.code}",
		ctx
	});

	return block;
}

// (40:1) {#if codePhrases.intro[mode]}
function create_if_block_10(ctx) {
	let p;
	let t_value = /*codePhrases*/ ctx[5].intro[/*mode*/ ctx[1]] + "";
	let t;

	const block = {
		c: function create() {
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 40, 2, 1256);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*mode*/ 2 && t_value !== (t_value = /*codePhrases*/ ctx[5].intro[/*mode*/ ctx[1]] + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_10.name,
		type: "if",
		source: "(40:1) {#if codePhrases.intro[mode]}",
		ctx
	});

	return block;
}

// (44:1) {#if output.iconify}
function create_if_block_9(ctx) {
	let p0;
	let t0_value = /*codePhrases*/ ctx[5].iconify.intro1.replace('{name}', /*icon*/ ctx[0].name) + "";
	let t0;
	let t1;
	let sampleinput0;
	let t2;
	let p1;
	let t4;
	let p2;
	let t6;
	let sampleinput1;
	let current;

	sampleinput0 = new _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { content: /*output*/ ctx[2].iconify.html },
			$$inline: true
		});

	sampleinput1 = new _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { content: /*output*/ ctx[2].iconify.head },
			$$inline: true
		});

	const block = {
		c: function create() {
			p0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sampleinput0.$$.fragment);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			p1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			p1.textContent = `${/*codePhrases*/ ctx[5].iconify.intro2}`;
			t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			p2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			p2.textContent = `${/*codePhrases*/ ctx[5].iconify.head}`;
			t6 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sampleinput1.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p0, file, 44, 2, 1321);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p1, file, 46, 2, 1436);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p2, file, 47, 2, 1474);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p0, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p0, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sampleinput0, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t2, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t4, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p2, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t6, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sampleinput1, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*icon*/ 1) && t0_value !== (t0_value = /*codePhrases*/ ctx[5].iconify.intro1.replace('{name}', /*icon*/ ctx[0].name) + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);
			const sampleinput0_changes = {};
			if (dirty & /*output*/ 4) sampleinput0_changes.content = /*output*/ ctx[2].iconify.html;
			sampleinput0.$set(sampleinput0_changes);
			const sampleinput1_changes = {};
			if (dirty & /*output*/ 4) sampleinput1_changes.content = /*output*/ ctx[2].iconify.head;
			sampleinput1.$set(sampleinput1_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sampleinput0.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sampleinput1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sampleinput0.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sampleinput1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p0);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sampleinput0, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t2);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p1);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t4);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p2);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t6);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sampleinput1, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_9.name,
		type: "if",
		source: "(44:1) {#if output.iconify}",
		ctx
	});

	return block;
}

// (52:1) {#if output.raw}
function create_if_block_8(ctx) {
	let each_1_anchor;
	let current;
	let each_value_1 = /*output*/ ctx[2].raw;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*output*/ 4) {
				each_value_1 = /*output*/ ctx[2].raw;
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_8.name,
		type: "if",
		source: "(52:1) {#if output.raw}",
		ctx
	});

	return block;
}

// (53:2) {#each output.raw as code}
function create_each_block_1(ctx) {
	let sampleinput;
	let current;

	sampleinput = new _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { content: /*code*/ ctx[12] },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sampleinput.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sampleinput, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const sampleinput_changes = {};
			if (dirty & /*output*/ 4) sampleinput_changes.content = /*code*/ ctx[12];
			sampleinput.$set(sampleinput_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sampleinput.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sampleinput.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sampleinput, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(53:2) {#each output.raw as code}",
		ctx
	});

	return block;
}

// (58:1) {#if output.component}
function create_if_block_5(ctx) {
	let each_1_anchor;
	let current;
	let each_value = _iconify_search_core_lib_code_samples_code__WEBPACK_IMPORTED_MODULE_2__.codeOutputComponentKeys;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*output, codeOutputComponentKeys, codePhrases*/ 36) {
				each_value = _iconify_search_core_lib_code_samples_code__WEBPACK_IMPORTED_MODULE_2__.codeOutputComponentKeys;
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_5.name,
		type: "if",
		source: "(58:1) {#if output.component}",
		ctx
	});

	return block;
}

// (60:3) {#if output.component[key]}
function create_if_block_6(ctx) {
	let t;
	let sampleinput;
	let current;
	let if_block = /*codePhrases*/ ctx[5].component[/*key*/ ctx[9]] && create_if_block_7(ctx);

	sampleinput = new _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				content: /*output*/ ctx[2].component[/*key*/ ctx[9]]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sampleinput.$$.fragment);
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sampleinput, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*codePhrases*/ ctx[5].component[/*key*/ ctx[9]]) if_block.p(ctx, dirty);
			const sampleinput_changes = {};
			if (dirty & /*output*/ 4) sampleinput_changes.content = /*output*/ ctx[2].component[/*key*/ ctx[9]];
			sampleinput.$set(sampleinput_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sampleinput.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sampleinput.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sampleinput, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_6.name,
		type: "if",
		source: "(60:3) {#if output.component[key]}",
		ctx
	});

	return block;
}

// (61:4) {#if codePhrases.component[key]}
function create_if_block_7(ctx) {
	let p;
	let t_value = /*codePhrases*/ ctx[5].component[/*key*/ ctx[9]] + "";
	let t;

	const block = {
		c: function create() {
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 61, 5, 1801);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t);
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_7.name,
		type: "if",
		source: "(61:4) {#if codePhrases.component[key]}",
		ctx
	});

	return block;
}

// (59:2) {#each codeOutputComponentKeys as key}
function create_each_block(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*output*/ ctx[2].component[/*key*/ ctx[9]] && create_if_block_6(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*output*/ ctx[2].component[/*key*/ ctx[9]]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block_6(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(59:2) {#each codeOutputComponentKeys as key}",
		ctx
	});

	return block;
}

// (69:1) {#if output.footer}
function create_if_block_2(ctx) {
	let t;
	let if_block1_anchor;
	let current;
	let if_block0 = /*output*/ ctx[2].footer.text && create_if_block_4(ctx);
	let if_block1 = /*output*/ ctx[2].footer.code && create_if_block_3(ctx);

	const block = {
		c: function create() {
			if (if_block0) if_block0.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			if_block1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
			if (if_block1) if_block1.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*output*/ ctx[2].footer.text) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_4(ctx);
					if_block0.c();
					if_block0.m(t.parentNode, t);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*output*/ ctx[2].footer.code) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_3(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block0) if_block0.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
			if (if_block1) if_block1.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(69:1) {#if output.footer}",
		ctx
	});

	return block;
}

// (70:2) {#if output.footer.text}
function create_if_block_4(ctx) {
	let p;
	let t_value = /*output*/ ctx[2].footer.text + "";
	let t;

	const block = {
		c: function create() {
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 70, 3, 1977);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*output*/ 4 && t_value !== (t_value = /*output*/ ctx[2].footer.text + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(70:2) {#if output.footer.text}",
		ctx
	});

	return block;
}

// (73:2) {#if output.footer.code}
function create_if_block_3(ctx) {
	let sampleinput;
	let current;

	sampleinput = new _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: { content: /*output*/ ctx[2].footer.code },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sampleinput.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sampleinput, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const sampleinput_changes = {};
			if (dirty & /*output*/ 4) sampleinput_changes.content = /*output*/ ctx[2].footer.code;
			sampleinput.$set(sampleinput_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sampleinput.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sampleinput.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sampleinput, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(73:2) {#if output.footer.code}",
		ctx
	});

	return block;
}

// (78:1) {#if output.docs}
function create_if_block_1(ctx) {
	let p;
	let uiicon0;
	let t0;
	let a;
	let t1;
	let t2;
	let uiicon1;
	let a_href_value;
	let current;
	let mounted;
	let dispose;
	uiicon0 = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({ props: { icon: "docs" }, $$inline: true });
	uiicon1 = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({ props: { icon: "link" }, $$inline: true });

	const block = {
		c: function create() {
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon0.$$.fragment);
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*docsText*/ ctx[3]);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon1.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value = /*output*/ ctx[2].docs.href);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 80, 3, 2180);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(p, "class", "iif-code-docs");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 78, 2, 2125);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon0, p, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon1, a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", /*onExternalClick*/ ctx[4], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*docsText*/ 8) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, /*docsText*/ ctx[3]);

			if (!current || dirty & /*output*/ 4 && a_href_value !== (a_href_value = /*output*/ ctx[2].docs.href)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon0.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon0.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon1);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(78:1) {#if output.docs}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*output*/ ctx[2] && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*output*/ ctx[2]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*output*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Code', slots, []);
	let { icon } = $$props;
	let { customisations } = $$props;
	let { providerConfig } = $$props;
	let { mode } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const onExternalClick = registry.link;
	const codePhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_4__.phrases.codeSamples;
	let output;
	let docsText;
	const writable_props = ['icon', 'customisations', 'providerConfig', 'mode'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Code> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(6, customisations = $$props.customisations);
		if ('providerConfig' in $$props) $$invalidate(7, providerConfig = $$props.providerConfig);
		if ('mode' in $$props) $$invalidate(1, mode = $$props.mode);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		getIconCode: _iconify_search_core_lib_code_samples_code__WEBPACK_IMPORTED_MODULE_2__.getIconCode,
		codeOutputComponentKeys: _iconify_search_core_lib_code_samples_code__WEBPACK_IMPORTED_MODULE_2__.codeOutputComponentKeys,
		capitalizeCodeSampleTitle: _iconify_search_core_lib_code_samples_phrases__WEBPACK_IMPORTED_MODULE_3__.capitalizeCodeSampleTitle,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_4__.phrases,
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		SampleInput: _Sample_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		icon,
		customisations,
		providerConfig,
		mode,
		registry,
		onExternalClick,
		codePhrases,
		output,
		docsText
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(6, customisations = $$props.customisations);
		if ('providerConfig' in $$props) $$invalidate(7, providerConfig = $$props.providerConfig);
		if ('mode' in $$props) $$invalidate(1, mode = $$props.mode);
		if ('output' in $$props) $$invalidate(2, output = $$props.output);
		if ('docsText' in $$props) $$invalidate(3, docsText = $$props.docsText);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*mode, icon, customisations, providerConfig, output*/ 199) {
			$: {
				$$invalidate(2, output = (0,_iconify_search_core_lib_code_samples_code__WEBPACK_IMPORTED_MODULE_2__.getIconCode)(mode, icon, customisations, providerConfig));

				if (output && output.docs) {
					const docsType = output.docs.type;

					$$invalidate(3, docsText = codePhrases.docs[docsType]
					? codePhrases.docs[docsType]
					: codePhrases.docsDefault.replace('{title}', (0,_iconify_search_core_lib_code_samples_phrases__WEBPACK_IMPORTED_MODULE_3__.capitalizeCodeSampleTitle)(docsType)));
				} else {
					$$invalidate(3, docsText = '');
				}
			}
		}
	};

	return [
		icon,
		mode,
		output,
		docsText,
		onExternalClick,
		codePhrases,
		customisations,
		providerConfig
	];
}

class Code extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			icon: 0,
			customisations: 6,
			providerConfig: 7,
			mode: 1
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Code",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[0] === undefined && !('icon' in props)) {
			console.warn("<Code> was created without expected prop 'icon'");
		}

		if (/*customisations*/ ctx[6] === undefined && !('customisations' in props)) {
			console.warn("<Code> was created without expected prop 'customisations'");
		}

		if (/*providerConfig*/ ctx[7] === undefined && !('providerConfig' in props)) {
			console.warn("<Code> was created without expected prop 'providerConfig'");
		}

		if (/*mode*/ ctx[1] === undefined && !('mode' in props)) {
			console.warn("<Code> was created without expected prop 'mode'");
		}
	}

	get icon() {
		throw new Error("<Code>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Code>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Code>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Code>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get providerConfig() {
		throw new Error("<Code>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set providerConfig(value) {
		throw new Error("<Code>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get mode() {
		throw new Error("<Code>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set mode(value) {
		throw new Error("<Code>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Code);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Container.svelte":
/*!******************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Container.svelte ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _iconify_search_core_lib_code_samples_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core/lib/code-samples/tree */ "./node_modules/@iconify/search-core/lib/code-samples/tree.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_code__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../config/code */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/code.ts");
/* harmony import */ var _FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../FooterBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/FooterBlock.svelte");
/* harmony import */ var _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../blocks/Filters.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte");
/* harmony import */ var _Code_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Code.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Code.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Container.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;







const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Container.svelte";

// (197:0) {#if currentTab}
function create_if_block(ctx) {
	let footerblock;
	let current;

	footerblock = new _FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				name: "code",
				title: /*codePhrases*/ ctx[6].heading.replace('{name}', /*icon*/ ctx[0].name),
				titleHidden: /*codePhrases*/ ctx[6].headingHidden.replace('{name}', /*icon*/ ctx[0].name),
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(footerblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(footerblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const footerblock_changes = {};
			if (dirty & /*icon*/ 1) footerblock_changes.title = /*codePhrases*/ ctx[6].heading.replace('{name}', /*icon*/ ctx[0].name);
			if (dirty & /*icon*/ 1) footerblock_changes.titleHidden = /*codePhrases*/ ctx[6].headingHidden.replace('{name}', /*icon*/ ctx[0].name);

			if (dirty & /*$$scope, currentTab, icon, customisations, childFilters, childTabsTitle, parentFilters*/ 32831) {
				footerblock_changes.$$scope = { dirty, ctx };
			}

			footerblock.$set(footerblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(footerblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(footerblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(footerblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(197:0) {#if currentTab}",
		ctx
	});

	return block;
}

// (204:4) {#if parentFilters}
function create_if_block_2(ctx) {
	let filterscomponent;
	let current;

	filterscomponent = new _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				name: "code",
				block: /*parentFilters*/ ctx[3],
				onClick: /*changeTab*/ ctx[8]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filterscomponent.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filterscomponent, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const filterscomponent_changes = {};
			if (dirty & /*parentFilters*/ 8) filterscomponent_changes.block = /*parentFilters*/ ctx[3];
			filterscomponent.$set(filterscomponent_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filterscomponent.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filterscomponent.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filterscomponent, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(204:4) {#if parentFilters}",
		ctx
	});

	return block;
}

// (210:4) {#if childFilters}
function create_if_block_1(ctx) {
	let filterscomponent;
	let current;

	filterscomponent = new _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				name: "code",
				block: /*childFilters*/ ctx[4],
				onClick: /*changeTab*/ ctx[8],
				title: /*childTabsTitle*/ ctx[5]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filterscomponent.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filterscomponent, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const filterscomponent_changes = {};
			if (dirty & /*childFilters*/ 16) filterscomponent_changes.block = /*childFilters*/ ctx[4];
			if (dirty & /*childTabsTitle*/ 32) filterscomponent_changes.title = /*childTabsTitle*/ ctx[5];
			filterscomponent.$set(filterscomponent_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filterscomponent.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filterscomponent.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filterscomponent, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(210:4) {#if childFilters}",
		ctx
	});

	return block;
}

// (198:1) <FooterBlock   name="code"   title={codePhrases.heading.replace('{name}', icon.name)}   titleHidden={codePhrases.headingHidden.replace('{name}', icon.name)}>
function create_default_slot(ctx) {
	let div1;
	let div0;
	let t0;
	let t1;
	let codecomponent;
	let current;
	let if_block0 = /*parentFilters*/ ctx[3] && create_if_block_2(ctx);
	let if_block1 = /*childFilters*/ ctx[4] && create_if_block_1(ctx);

	codecomponent = new _Code_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				mode: /*currentTab*/ ctx[2],
				icon: /*icon*/ ctx[0],
				customisations: /*customisations*/ ctx[1],
				providerConfig: /*getProviderData*/ ctx[7](/*icon*/ ctx[0].provider).config
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(codecomponent.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "iif-filters");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 202, 3, 6111);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "iif-code");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 201, 2, 6085);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
			if (if_block0) if_block0.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
			if (if_block1) if_block1.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(codecomponent, div1, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (/*parentFilters*/ ctx[3]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*parentFilters*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div0, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*childFilters*/ ctx[4]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*childFilters*/ 16) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div0, null);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			const codecomponent_changes = {};
			if (dirty & /*currentTab*/ 4) codecomponent_changes.mode = /*currentTab*/ ctx[2];
			if (dirty & /*icon*/ 1) codecomponent_changes.icon = /*icon*/ ctx[0];
			if (dirty & /*customisations*/ 2) codecomponent_changes.customisations = /*customisations*/ ctx[1];
			if (dirty & /*icon*/ 1) codecomponent_changes.providerConfig = /*getProviderData*/ ctx[7](/*icon*/ ctx[0].provider).config;
			codecomponent.$set(codecomponent_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(codecomponent.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(codecomponent.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(codecomponent);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(198:1) <FooterBlock   name=\\\"code\\\"   title={codePhrases.heading.replace('{name}', icon.name)}   titleHidden={codePhrases.headingHidden.replace('{name}', icon.name)}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*currentTab*/ ctx[2] && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*currentTab*/ ctx[2]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*currentTab*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Container', slots, []);
	let { icon } = $$props;
	let { customisations } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const codePhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases.codeSamples;
	const componentsConfig = registry.config.components;
	const providerCache = Object.create(null);

	const data = {
		lastProvider: null,
		lastParent: null,
		lastChild: null
	};

	let currentTab;
	let parentFilters = null;
	let childFilters = null;
	let childTabsTitle = '';

	function getProviderData(provider) {
		if (providerCache[provider] === void 0) {
			const config = _config_code__WEBPACK_IMPORTED_MODULE_4__.codeConfig.providers[provider] === void 0
			? _config_code__WEBPACK_IMPORTED_MODULE_4__.codeConfig.defaultProvider
			: _config_code__WEBPACK_IMPORTED_MODULE_4__.codeConfig.providers[provider];

			providerCache[provider] = { config, tree: (0,_iconify_search_core_lib_code_samples_tree__WEBPACK_IMPORTED_MODULE_2__.getCodeSamplesTree)(config) };
		}

		return providerCache[provider];
	}

	function updateCurrentTab(item) {
		function createFilters(items, active, startIndex = 0) {
			if (items.length < 2) {
				return null;
			}

			const block = {
				type: 'filters',
				filterType: 'code-tabs',
				active,
				filters: Object.create(null)
			};

			for (let i = 0; i < items.length; i++) {
				const item = items[i];
				const key = item.tab ? item.tab : item.mode;
				block.filters[key] = { title: item.title, index: i + startIndex };
			}

			return block;
		}

		const tab = item.tab;

		if (currentTab !== tab) {
			$$invalidate(2, currentTab = $$invalidate(9, componentsConfig.codeTab = tab, componentsConfig));
			registry.callback({ type: 'config' });
		} else if (data.lastParent === item.parent && data.lastParent === item.child) {
			return;
		}

		if (tab === '') {
			$$invalidate(3, parentFilters = $$invalidate(4, childFilters = $$invalidate(10, data.lastChild = $$invalidate(10, data.lastParent = null, data), data)));
			return;
		}

		const providerData = getProviderData(icon.provider);
		const tree = providerData.tree;
		const parent = item.parent;
		const child = item.child;

		if (data.lastParent === parent) {
			if (parentFilters) {
				$$invalidate(3, parentFilters.active = parent.tab ? parent.tab : parent.mode, parentFilters);
			}
		} else {
			$$invalidate(3, parentFilters = createFilters(tree, parent.tab ? parent.tab : parent.mode));
		}

		if (data.lastChild === child) {
			if (childFilters) {
				$$invalidate(4, childFilters.active = child.mode, childFilters);
			}
		} else {
			$$invalidate(4, childFilters = child
			? createFilters(parent.children, child.mode, item.parentIndex + 1)
			: null);
		}

		if (childFilters && parentFilters) {
			const key = parent.tab;

			$$invalidate(5, childTabsTitle = codePhrases.childTabTitles[key] === void 0
			? codePhrases.childTabTitle.replace('{key}', key)
			: codePhrases.childTabTitles[key]);
		} else {
			$$invalidate(5, childTabsTitle = '');
		}

		$$invalidate(10, data.lastParent = parent, data);
		$$invalidate(10, data.lastChild = child, data);
	}

	function checkCurrentTab(tab, useDefault) {
		const providerData = getProviderData(icon.provider);
		const tree = providerData.tree;

		if (typeof tab === 'string') {
			for (let parentIndex = 0; parentIndex < tree.length; parentIndex++) {
				const parent = tree[parentIndex];

				if (parent.mode === tab || parent.tab === tab) {
					if (parent.children) {
						const child = parent.children[0];

						return {
							tab: child.mode,
							parent,
							parentIndex,
							child
						};
					}

					return {
						tab: parent.mode,
						parent,
						parentIndex,
						child: null
					};
				}

				if (parent.children) {
					for (let j = 0; j < parent.children.length; j++) {
						const child = parent.children[j];

						if (child.mode === tab) {
							return { tab, parent, parentIndex, child };
						}
					}
				}
			}
		}

		if (useDefault) {
			const parent = tree[0];

			if (!parent) {
				return {
					tab: '',
					parent: null,
					parentIndex: 0,
					child: null
				};
			}

			if (parent.children) {
				const child = parent.children[0];

				return {
					tab: child.mode,
					parent,
					parentIndex: 0,
					child
				};
			}

			return {
				tab: parent.mode,
				parent,
				parentIndex: 0,
				child: null
			};
		}

		return {
			tab: '',
			parent: null,
			parentIndex: 0,
			child: null
		};
	}

	function changeTab(tab) {
		const item = checkCurrentTab(tab, false);

		if (item.tab === currentTab || item.tab === '' && currentTab !== '') {
			return;
		}

		updateCurrentTab(item);
	}

	const writable_props = ['icon', 'customisations'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Container> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(1, customisations = $$props.customisations);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		getCodeSamplesTree: _iconify_search_core_lib_code_samples_tree__WEBPACK_IMPORTED_MODULE_2__.getCodeSamplesTree,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases,
		codeConfig: _config_code__WEBPACK_IMPORTED_MODULE_4__.codeConfig,
		FooterBlock: _FooterBlock_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		FiltersComponent: _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		CodeComponent: _Code_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		icon,
		customisations,
		registry,
		codePhrases,
		componentsConfig,
		providerCache,
		data,
		currentTab,
		parentFilters,
		childFilters,
		childTabsTitle,
		getProviderData,
		updateCurrentTab,
		checkCurrentTab,
		changeTab
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(1, customisations = $$props.customisations);
		if ('currentTab' in $$props) $$invalidate(2, currentTab = $$props.currentTab);
		if ('parentFilters' in $$props) $$invalidate(3, parentFilters = $$props.parentFilters);
		if ('childFilters' in $$props) $$invalidate(4, childFilters = $$props.childFilters);
		if ('childTabsTitle' in $$props) $$invalidate(5, childTabsTitle = $$props.childTabsTitle);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon, data, currentTab, componentsConfig*/ 1541) {
			$: {
				const provider = icon.provider;

				if (provider !== data.lastProvider) {
					$$invalidate(10, data.lastProvider = provider, data);
					getProviderData(provider);

					let tab = typeof currentTab !== 'string'
					? componentsConfig.codeTab
					: currentTab;

					updateCurrentTab(checkCurrentTab(tab, true));
				}
			}
		}
	};

	return [
		icon,
		customisations,
		currentTab,
		parentFilters,
		childFilters,
		childTabsTitle,
		codePhrases,
		getProviderData,
		changeTab,
		componentsConfig,
		data
	];
}

class Container extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icon: 0, customisations: 1 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Container",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[0] === undefined && !('icon' in props)) {
			console.warn("<Container> was created without expected prop 'icon'");
		}

		if (/*customisations*/ ctx[1] === undefined && !('customisations' in props)) {
			console.warn("<Container> was created without expected prop 'customisations'");
		}
	}

	get icon() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Container>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Container>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Container);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Sample.svelte":
/*!***************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Sample.svelte ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Sample.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/code/Sample.svelte";

// (63:1) {#if mounted}
function create_if_block_1(ctx) {
	let a;
	let uiicon;
	let a_title_value;
	let current;
	let mounted;
	let dispose;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: { icon: "clipboard" },
			$$inline: true
		});

	const block = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value = /*text*/ ctx[4].copy);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 63, 2, 1617);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*copy*/ ctx[5]), false, true, false);
				mounted = true;
			}
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(63:1) {#if mounted}",
		ctx
	});

	return block;
}

// (67:1) {#if mounted && notice > 0}
function create_if_block(ctx) {
	let div;
	let uiicon;
	let t0;
	let t1_value = /*text*/ ctx[4].copied + "";
	let t1;
	let div_class_value;
	let current;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: { icon: "confirm" },
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value = baseClassName + '-notice');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 67, 2, 1753);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
			current = true;
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(67:1) {#if mounted && notice > 0}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div1;
	let div0;
	let t0;
	let div0_class_value;
	let t1;
	let t2;
	let current;
	let if_block0 = /*mounted*/ ctx[3] && create_if_block_1(ctx);
	let if_block1 = /*mounted*/ ctx[3] && /*notice*/ ctx[1] > 0 && create_if_block(ctx);

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*content*/ ctx[0]);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block0) if_block0.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", div0_class_value = baseClassName + '-content');
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 61, 1, 1544);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", /*className*/ ctx[2]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 60, 0, 1519);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t1);
			if (if_block0) if_block0.m(div1, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t2);
			if (if_block1) if_block1.m(div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*content*/ 1) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, /*content*/ ctx[0]);

			if (/*mounted*/ ctx[3]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*mounted*/ 8) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div1, t2);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*mounted*/ ctx[3] && /*notice*/ ctx[1] > 0) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*mounted, notice*/ 10) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div1, null);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*className*/ 4) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", /*className*/ ctx[2]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClassName = 'iif-input-sample';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Sample', slots, []);
	let { content } = $$props;
	const text = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.codeSamples;
	let notice = 0;
	let className = baseClassName;

	function copy() {
		const node = document.body;
		const textarea = document.createElement('textarea');
		const style = textarea.style;
		textarea.value = content;
		style.position = 'absolute';

		try {
			style.left = window.pageXOffset + 'px';
			style.top = window.pageYOffset + 'px';
		} catch(err) {
			
		}

		style.height = '0';
		node.appendChild(textarea);
		textarea.focus();
		textarea.select();
		let copied = false;

		try {
			if (!document.execCommand || !document.execCommand('copy')) {
				const w = window;

				if (w.clipboardData) {
					w.clipboardData.setData('Text', content);
					copied = true;
				}
			} else {
				copied = true;
			}
		} catch(err) {
			
		}

		setTimeout(() => {
			node.removeChild(textarea);
		});

		if (copied) {
			$$invalidate(1, notice++, notice);

			setTimeout(
				() => {
					if (notice) {
						$$invalidate(1, notice--, notice);
					}
				},
				2000
			);
		}
	}

	let mounted = false;

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onMount)(() => {
		$$invalidate(3, mounted = true);
	});

	const writable_props = ['content'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Sample> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('content' in $$props) $$invalidate(0, content = $$props.content);
	};

	$$self.$capture_state = () => ({
		onMount: svelte__WEBPACK_IMPORTED_MODULE_1__.onMount,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		content,
		text,
		notice,
		baseClassName,
		className,
		copy,
		mounted
	});

	$$self.$inject_state = $$props => {
		if ('content' in $$props) $$invalidate(0, content = $$props.content);
		if ('notice' in $$props) $$invalidate(1, notice = $$props.notice);
		if ('className' in $$props) $$invalidate(2, className = $$props.className);
		if ('mounted' in $$props) $$invalidate(3, mounted = $$props.mounted);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*notice*/ 2) {
			$: {
				$$invalidate(2, className = baseClassName + (notice > 0 ? ' ' + baseClassName + '--with-notice' : ''));
			}
		}
	};

	return [content, notice, className, mounted, text, copy];
}

class Sample extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { content: 0 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Sample",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*content*/ ctx[0] === undefined && !('content' in props)) {
			console.warn("<Sample> was created without expected prop 'content'");
		}
	}

	get content() {
		throw new Error("<Sample>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set content(value) {
		throw new Error("<Sample>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sample);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/name/Simple.svelte":
/*!***************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/name/Simple.svelte ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _footer_shorten_icon_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../footer/shorten-icon-name */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/shorten-icon-name.ts");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/name/Simple.svelte generated by Svelte v3.43.1 */







const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/name/Simple.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[0] = list[i];
	return child_ctx;
}

// (22:3) {#each [iconName] as iconName (iconName)}
function create_each_block(key_1, ctx) {
	let first;
	let iconcomponent;
	let current;

	iconcomponent = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: { icon: /*iconName*/ ctx[0] },
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconcomponent.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconcomponent, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const iconcomponent_changes = {};
			if (dirty & /*iconName*/ 1) iconcomponent_changes.icon = /*iconName*/ ctx[0];
			iconcomponent.$set(iconcomponent_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconcomponent.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconcomponent.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconcomponent, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(22:3) {#each [iconName] as iconName (iconName)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div1;
	let dl;
	let dt;
	let dd;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let t1;
	let div0;
	let span;
	let t2;
	let current;
	let each_value = [/*iconName*/ ctx[0]];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*iconName*/ ctx[0];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < 1; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			dl = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dl");
			dt = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dt");
			dt.textContent = `${_config_phrases__WEBPACK_IMPORTED_MODULE_5__.phrases.footer.iconName}`;
			dd = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("dd");

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].c();
			}

			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*text*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dt, file, 19, 2, 610);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 24, 43, 789);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "iif-footer-icon-name-input");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 24, 3, 749);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dd, file, 20, 2, 647);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(dl, file, 18, 1, 603);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "iif-footer-icon-name iif-footer-icon-name--simple");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 17, 0, 538);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, dl);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dt);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dl, dd);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].m(dd, null);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dd, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(dd, div0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, span);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t2);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*iconName*/ 1) {
				each_value = [/*iconName*/ ctx[0]];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, dd, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, t1, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*text*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t2, /*text*/ ctx[1]);
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Simple', slots, []);
	let { icon } = $$props;
	let { route } = $$props;
	let iconName;
	let text;
	const writable_props = ['icon', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Simple> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(2, icon = $$props.icon);
		if ('route' in $$props) $$invalidate(3, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		IconComponent: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString,
		canShortenIconName: _config_components__WEBPACK_IMPORTED_MODULE_3__.canShortenIconName,
		shortenIconName: _footer_shorten_icon_name__WEBPACK_IMPORTED_MODULE_4__.shortenIconName,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_5__.phrases,
		icon,
		route,
		iconName,
		text
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(2, icon = $$props.icon);
		if ('route' in $$props) $$invalidate(3, route = $$props.route);
		if ('iconName' in $$props) $$invalidate(0, iconName = $$props.iconName);
		if ('text' in $$props) $$invalidate(1, text = $$props.text);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon, route, iconName*/ 13) {
			$: {
				$$invalidate(0, iconName = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString)(icon));

				$$invalidate(1, text = _config_components__WEBPACK_IMPORTED_MODULE_3__.canShortenIconName
				? (0,_footer_shorten_icon_name__WEBPACK_IMPORTED_MODULE_4__.shortenIconName)(route, icon, iconName)
				: iconName);
			}
		}
	};

	return [iconName, text, icon, route];
}

class Simple extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icon: 2, route: 3 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Simple",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[2] === undefined && !('icon' in props)) {
			console.warn("<Simple> was created without expected prop 'icon'");
		}

		if (/*route*/ ctx[3] === undefined && !('route' in props)) {
			console.warn("<Simple> was created without expected prop 'route'");
		}
	}

	get icon() {
		throw new Error("<Simple>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Simple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Simple>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Simple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Simple);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Color.svelte":
/*!***************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Color.svelte ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core/lib/iconify */ "./node_modules/@iconify/search-core/lib/iconify/index.js");
/* harmony import */ var _iconify_search_core_lib_misc_colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core/lib/misc/colors */ "./node_modules/@iconify/search-core/lib/misc/colors.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../ui/Input.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte");
/* harmony import */ var _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../OptionsBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Color.svelte generated by Svelte v3.43.1 */











const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Color.svelte";

// (56:0) {#if hasColor}
function create_if_block(ctx) {
	let optionsblock;
	let current;

	optionsblock = new _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_7__["default"]({
			props: {
				type: "color",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(optionsblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(optionsblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const optionsblock_changes = {};

			if (dirty & /*$$scope, inputValue, value*/ 1029) {
				optionsblock_changes.$$scope = { dirty, ctx };
			}

			optionsblock.$set(optionsblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(optionsblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(optionsblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(optionsblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(56:0) {#if hasColor}",
		ctx
	});

	return block;
}

// (57:1) <OptionsBlock type="color">
function create_default_slot(ctx) {
	let input;
	let current;

	input = new _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				value: /*inputValue*/ ctx[2],
				placeholder: _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultColor,
				title: /*title*/ ctx[3],
				onInput: /*onInput*/ ctx[4],
				onBlur: /*onBlur*/ ctx[5],
				icon: /*value*/ ctx[0] === void 0 || /*value*/ ctx[0] === ''
				? 'color'
				: 'color-filled',
				extra: /*value*/ ctx[0] === void 0 ? '' : /*value*/ ctx[0],
				type: "color"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(input.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(input, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const input_changes = {};
			if (dirty & /*inputValue*/ 4) input_changes.value = /*inputValue*/ ctx[2];

			if (dirty & /*value*/ 1) input_changes.icon = /*value*/ ctx[0] === void 0 || /*value*/ ctx[0] === ''
			? 'color'
			: 'color-filled';

			if (dirty & /*value*/ 1) input_changes.extra = /*value*/ ctx[0] === void 0 ? '' : /*value*/ ctx[0];
			input.$set(input_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(input.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(input.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(input, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(57:1) <OptionsBlock type=\\\"color\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*hasColor*/ ctx[1] && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*hasColor*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*hasColor*/ 2) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Color', slots, []);
	let { icons } = $$props;
	let { value } = $$props;
	let { customise } = $$props;
	let hasColor;
	const title = _config_phrases__WEBPACK_IMPORTED_MODULE_4__.phrases.footerBlocks.color;
	let lastValue = value;
	let inputValue = value;

	function getColor(value, defaultValue) {
		const color = (0,_iconify_search_core_lib_misc_colors__WEBPACK_IMPORTED_MODULE_3__.stringToColor)(value);

		if (!color) {
			return defaultValue;
		}

		const cleanColor = (0,_iconify_search_core_lib_misc_colors__WEBPACK_IMPORTED_MODULE_3__.colorToString)(color);
		return cleanColor === '' ? defaultValue : cleanColor;
	}

	function onInput(newValue) {
		$$invalidate(2, inputValue = newValue);

		if (newValue === '') {
			customise('color', '');
			return;
		}

		const validatedValue = getColor(newValue, null);

		if (validatedValue !== null) {
			$$invalidate(8, lastValue = $$invalidate(0, value = validatedValue));
			customise('color', validatedValue);
		}
	}

	function onBlur() {
		$$invalidate(2, inputValue = value);
	}

	const writable_props = ['icons', 'value', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Color> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icons' in $$props) $$invalidate(6, icons = $$props.icons);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('customise' in $$props) $$invalidate(7, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.iconToString,
		Iconify: _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_2__.Iconify,
		stringToColor: _iconify_search_core_lib_misc_colors__WEBPACK_IMPORTED_MODULE_3__.stringToColor,
		colorToString: _iconify_search_core_lib_misc_colors__WEBPACK_IMPORTED_MODULE_3__.colorToString,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_4__.phrases,
		defaultColor: _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultColor,
		Input: _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		OptionsBlock: _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_7__["default"],
		icons,
		value,
		customise,
		hasColor,
		title,
		lastValue,
		inputValue,
		getColor,
		onInput,
		onBlur
	});

	$$self.$inject_state = $$props => {
		if ('icons' in $$props) $$invalidate(6, icons = $$props.icons);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('customise' in $$props) $$invalidate(7, customise = $$props.customise);
		if ('hasColor' in $$props) $$invalidate(1, hasColor = $$props.hasColor);
		if ('lastValue' in $$props) $$invalidate(8, lastValue = $$props.lastValue);
		if ('inputValue' in $$props) $$invalidate(2, inputValue = $$props.inputValue);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icons*/ 64) {
			$: {
				$$invalidate(1, hasColor = false);

				for (let i = 0; i < icons.length; i++) {
					const data = _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_2__.Iconify.getIcon?.((0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.iconToString)(icons[i]));

					if (data && data.body.indexOf('currentColor') !== -1) {
						$$invalidate(1, hasColor = true);
						break;
					}
				}
			}
		}

		if ($$self.$$.dirty & /*lastValue, value*/ 257) {
			$: {
				if (lastValue !== value) {
					$$invalidate(8, lastValue = value);
					$$invalidate(2, inputValue = value);
				}
			}
		}
	};

	return [
		value,
		hasColor,
		inputValue,
		title,
		onInput,
		onBlur,
		icons,
		customise,
		lastValue
	];
}

class Color extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icons: 6, value: 0, customise: 7 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Color",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icons*/ ctx[6] === undefined && !('icons' in props)) {
			console.warn("<Color> was created without expected prop 'icons'");
		}

		if (/*value*/ ctx[0] === undefined && !('value' in props)) {
			console.warn("<Color> was created without expected prop 'value'");
		}

		if (/*customise*/ ctx[7] === undefined && !('customise' in props)) {
			console.warn("<Color> was created without expected prop 'customise'");
		}
	}

	get icons() {
		throw new Error("<Color>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icons(value) {
		throw new Error("<Color>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<Color>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<Color>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Color>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Color>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Color);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Flip.svelte":
/*!**************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Flip.svelte ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OptionsBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte");
/* harmony import */ var _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ui/OptionButton.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Flip.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Flip.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[6] = list[i];
	child_ctx[8] = i;
	return child_ctx;
}

// (28:1) {#each list as item, i (item.key)}
function create_each_block(key_1, ctx) {
	let first;
	let button;
	let current;

	function func() {
		return /*func*/ ctx[4](/*item*/ ctx[6]);
	}

	button = new _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				icon: /*item*/ ctx[6].icon,
				title: /*item*/ ctx[6].title,
				status: /*customisations*/ ctx[0][/*item*/ ctx[6].prop]
				? 'checked'
				: 'unchecked',
				onClick: func
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(button.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(button, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const button_changes = {};
			if (dirty & /*list*/ 2) button_changes.icon = /*item*/ ctx[6].icon;
			if (dirty & /*list*/ 2) button_changes.title = /*item*/ ctx[6].title;

			if (dirty & /*customisations, list*/ 3) button_changes.status = /*customisations*/ ctx[0][/*item*/ ctx[6].prop]
			? 'checked'
			: 'unchecked';

			if (dirty & /*list*/ 2) button_changes.onClick = func;
			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(button, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(28:1) {#each list as item, i (item.key)}",
		ctx
	});

	return block;
}

// (27:0) <OptionsBlock type="flip">
function create_default_slot(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = /*list*/ ctx[1];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*item*/ ctx[6].key;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*list, customisations, flipClicked*/ 7) {
				each_value = /*list*/ ctx[1];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(27:0) <OptionsBlock type=\\\"flip\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let optionsblock;
	let current;

	optionsblock = new _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				type: "flip",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(optionsblock.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(optionsblock, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const optionsblock_changes = {};

			if (dirty & /*$$scope, list, customisations*/ 515) {
				optionsblock_changes.$$scope = { dirty, ctx };
			}

			optionsblock.$set(optionsblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(optionsblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(optionsblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(optionsblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Flip', slots, []);
	let { customisations } = $$props;
	let { customise } = $$props;
	let list;

	function addItem(key, selected) {
		const prop = key + 'Flip';

		return {
			prop,
			icon: key + '-flip',
			key: key + 'Flip' + (selected ? '!' : ''),
			title: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases.footerOptionButtons[prop]
		};
	}

	function flipClicked(type) {
		customise(type, !customisations[type]);
	}

	const writable_props = ['customisations', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Flip> was created with unknown prop '${key}'`);
	});

	const func = item => flipClicked(item.prop);

	$$self.$$set = $$props => {
		if ('customisations' in $$props) $$invalidate(0, customisations = $$props.customisations);
		if ('customise' in $$props) $$invalidate(3, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases,
		OptionsBlock: _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		Button: _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		customisations,
		customise,
		list,
		addItem,
		flipClicked
	});

	$$self.$inject_state = $$props => {
		if ('customisations' in $$props) $$invalidate(0, customisations = $$props.customisations);
		if ('customise' in $$props) $$invalidate(3, customise = $$props.customise);
		if ('list' in $$props) $$invalidate(1, list = $$props.list);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*customisations*/ 1) {
			$: {
				$$invalidate(1, list = [addItem('h', customisations.hFlip), addItem('v', customisations.vFlip)]);
			}
		}
	};

	return [customisations, list, flipClicked, customise, func];
}

class Flip extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { customisations: 0, customise: 3 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Flip",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*customisations*/ ctx[0] === undefined && !('customisations' in props)) {
			console.warn("<Flip> was created without expected prop 'customisations'");
		}

		if (/*customise*/ ctx[3] === undefined && !('customise' in props)) {
			console.warn("<Flip> was created without expected prop 'customise'");
		}
	}

	get customisations() {
		throw new Error("<Flip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Flip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Flip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Flip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Flip);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Inline.svelte":
/*!****************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Inline.svelte ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OptionsBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte");
/* harmony import */ var _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ui/OptionButton.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Inline.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Inline.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i].mode;
	child_ctx[6] = list[i].inline;
	child_ctx[7] = list[i].key;
	child_ctx[9] = i;
	return child_ctx;
}

// (39:1) {#each list as { mode, inline, key }
function create_each_block(key_1, ctx) {
	let first;
	let button;
	let current;

	button = new _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				icon: 'mode-' + /*mode*/ ctx[5],
				text: /*buttonPhrases*/ ctx[2][/*mode*/ ctx[5]],
				title: /*buttonPhrases*/ ctx[2][/*mode*/ ctx[5] + 'Hint'],
				status: /*value*/ ctx[0] === /*inline*/ ctx[6]
				? 'checked'
				: 'unchecked',
				textOptional: true,
				onClick: /*inlineClicked*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(button.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(button, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const button_changes = {};
			if (dirty & /*list*/ 2) button_changes.icon = 'mode-' + /*mode*/ ctx[5];
			if (dirty & /*list*/ 2) button_changes.text = /*buttonPhrases*/ ctx[2][/*mode*/ ctx[5]];
			if (dirty & /*list*/ 2) button_changes.title = /*buttonPhrases*/ ctx[2][/*mode*/ ctx[5] + 'Hint'];

			if (dirty & /*value, list*/ 3) button_changes.status = /*value*/ ctx[0] === /*inline*/ ctx[6]
			? 'checked'
			: 'unchecked';

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(button, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(39:1) {#each list as { mode, inline, key }",
		ctx
	});

	return block;
}

// (38:0) <OptionsBlock type="mode">
function create_default_slot(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = /*list*/ ctx[1];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*key*/ ctx[7];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*list, buttonPhrases, value, inlineClicked*/ 15) {
				each_value = /*list*/ ctx[1];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(38:0) <OptionsBlock type=\\\"mode\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let optionsblock;
	let current;

	optionsblock = new _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				type: "mode",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(optionsblock.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(optionsblock, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const optionsblock_changes = {};

			if (dirty & /*$$scope, list, value*/ 1027) {
				optionsblock_changes.$$scope = { dirty, ctx };
			}

			optionsblock.$set(optionsblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(optionsblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(optionsblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(optionsblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function addItem(inline, selected, temp) {
	const mode = inline ? 'inline' : 'block';

	return {
		mode,
		inline,
		key: mode + temp,
		selected,
		temp
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Inline', slots, []);
	let { value } = $$props;
	let { customise } = $$props;
	const buttonPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases.footerOptionButtons;
	let list;

	function inlineClicked() {
		customise('inline', !value);
	}

	const writable_props = ['value', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Inline> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('customise' in $$props) $$invalidate(4, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases,
		OptionsBlock: _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		Button: _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		value,
		customise,
		buttonPhrases,
		list,
		addItem,
		inlineClicked
	});

	$$self.$inject_state = $$props => {
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('customise' in $$props) $$invalidate(4, customise = $$props.customise);
		if ('list' in $$props) $$invalidate(1, list = $$props.list);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*list, value*/ 3) {
			$: {
				const newList = [];

				for (let i = 0; i < 2; i++) {
					const inline = !!i;

					if (list && list[i] && value !== inline) {
						const oldItem = list[i];
						oldItem.selected = false;
						newList.push(oldItem);
					} else {
						newList.push(addItem(inline, value === inline, list && list[i] ? list[i].temp + 1 : 0));
					}
				}

				$$invalidate(1, list = newList);
			}
		}
	};

	return [value, list, buttonPhrases, inlineClicked, customise];
}

class Inline extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { value: 0, customise: 4 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Inline",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*value*/ ctx[0] === undefined && !('value' in props)) {
			console.warn("<Inline> was created without expected prop 'value'");
		}

		if (/*customise*/ ctx[4] === undefined && !('customise' in props)) {
			console.warn("<Inline> was created without expected prop 'customise'");
		}
	}

	get value() {
		throw new Error("<Inline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<Inline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Inline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Inline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Inline);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Rotate.svelte":
/*!****************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Rotate.svelte ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OptionsBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte");
/* harmony import */ var _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ui/OptionButton.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Rotate.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Rotate.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[6] = list[i].count;
	child_ctx[7] = list[i].key;
	child_ctx[9] = i;
	return child_ctx;
}

// (39:1) {#each list as { count, key }
function create_each_block(key_1, ctx) {
	let first;
	let button;
	let current;

	function func() {
		return /*func*/ ctx[5](/*count*/ ctx[6]);
	}

	button = new _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				icon: 'rotate' + /*count*/ ctx[6],
				title: /*buttonPhrases*/ ctx[2].rotateTitle.replace('{num}', /*count*/ ctx[6] * 90 + ''),
				text: /*buttonPhrases*/ ctx[2].rotate.replace('{num}', /*count*/ ctx[6] * 90 + ''),
				status: /*value*/ ctx[0] === /*count*/ ctx[6]
				? 'checked'
				: 'unchecked',
				onClick: func
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(button.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(button, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const button_changes = {};
			if (dirty & /*list*/ 2) button_changes.icon = 'rotate' + /*count*/ ctx[6];
			if (dirty & /*list*/ 2) button_changes.title = /*buttonPhrases*/ ctx[2].rotateTitle.replace('{num}', /*count*/ ctx[6] * 90 + '');
			if (dirty & /*list*/ 2) button_changes.text = /*buttonPhrases*/ ctx[2].rotate.replace('{num}', /*count*/ ctx[6] * 90 + '');

			if (dirty & /*value, list*/ 3) button_changes.status = /*value*/ ctx[0] === /*count*/ ctx[6]
			? 'checked'
			: 'unchecked';

			if (dirty & /*list*/ 2) button_changes.onClick = func;
			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(button, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(39:1) {#each list as { count, key }",
		ctx
	});

	return block;
}

// (38:0) <OptionsBlock type="rotate">
function create_default_slot(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = /*list*/ ctx[1];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*key*/ ctx[7];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*list, buttonPhrases, value, rotateClicked*/ 15) {
				each_value = /*list*/ ctx[1];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(38:0) <OptionsBlock type=\\\"rotate\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let optionsblock;
	let current;

	optionsblock = new _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				type: "rotate",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(optionsblock.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(optionsblock, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const optionsblock_changes = {};

			if (dirty & /*$$scope, list, value*/ 1027) {
				optionsblock_changes.$$scope = { dirty, ctx };
			}

			optionsblock.$set(optionsblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(optionsblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(optionsblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(optionsblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function addItem(count, selected, temp) {
	return {
		count,
		key: count + '-' + temp,
		selected,
		temp
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Rotate', slots, []);
	let { value } = $$props;
	let { customise } = $$props;
	const buttonPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases.footerOptionButtons;
	let list;

	function rotateClicked(count) {
		if (!count && !value) {
			return;
		}

		customise('rotate', count === value ? 0 : count);
	}

	const writable_props = ['value', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Rotate> was created with unknown prop '${key}'`);
	});

	const func = count => rotateClicked(count);

	$$self.$$set = $$props => {
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('customise' in $$props) $$invalidate(4, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases,
		OptionsBlock: _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		Button: _ui_OptionButton_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		value,
		customise,
		buttonPhrases,
		list,
		addItem,
		rotateClicked
	});

	$$self.$inject_state = $$props => {
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('customise' in $$props) $$invalidate(4, customise = $$props.customise);
		if ('list' in $$props) $$invalidate(1, list = $$props.list);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*list, value*/ 3) {
			$: {
				const newList = [];

				for (let i = 0; i < 4; i++) {
					if (list && list[i] && value !== i) {
						const oldItem = list[i];
						oldItem.selected = false;
						newList.push(oldItem);
					} else {
						newList.push(addItem(i, value === i, list && list[i] ? list[i].temp + 1 : 0));
					}
				}

				$$invalidate(1, list = newList);
			}
		}
	};

	return [value, list, buttonPhrases, rotateClicked, customise, func];
}

class Rotate extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { value: 0, customise: 4 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Rotate",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*value*/ ctx[0] === undefined && !('value' in props)) {
			console.warn("<Rotate> was created without expected prop 'value'");
		}

		if (/*customise*/ ctx[4] === undefined && !('customise' in props)) {
			console.warn("<Rotate> was created without expected prop 'customise'");
		}
	}

	get value() {
		throw new Error("<Rotate>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<Rotate>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Rotate>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Rotate>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rotate);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Size.svelte":
/*!**************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Size.svelte ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core/lib/iconify */ "./node_modules/@iconify/search-core/lib/iconify/index.js");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../OptionsBlock.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/OptionsBlock.svelte");
/* harmony import */ var _SizeInput_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SizeInput.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/SizeInput.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Size.svelte generated by Svelte v3.43.1 */










const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/Size.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	child_ctx[10] = i;
	return child_ctx;
}

// (104:1) {#each props as prop, i (prop)}
function create_each_block(key_1, ctx) {
	let first;
	let sizeinput;
	let current;

	sizeinput = new _SizeInput_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				prop: /*prop*/ ctx[8],
				value: /*customisations*/ ctx[0][/*prop*/ ctx[8]] === null
				? ''
				: /*customisations*/ ctx[0][/*prop*/ ctx[8]] + '',
				placeholder: /*placeholders*/ ctx[2][/*prop*/ ctx[8]],
				customise: /*customise*/ ctx[1]
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(sizeinput.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(sizeinput, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const sizeinput_changes = {};

			if (dirty & /*customisations*/ 1) sizeinput_changes.value = /*customisations*/ ctx[0][/*prop*/ ctx[8]] === null
			? ''
			: /*customisations*/ ctx[0][/*prop*/ ctx[8]] + '';

			if (dirty & /*placeholders*/ 4) sizeinput_changes.placeholder = /*placeholders*/ ctx[2][/*prop*/ ctx[8]];
			if (dirty & /*customise*/ 2) sizeinput_changes.customise = /*customise*/ ctx[1];
			sizeinput.$set(sizeinput_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(sizeinput.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(sizeinput.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(sizeinput, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(104:1) {#each props as prop, i (prop)}",
		ctx
	});

	return block;
}

// (103:0) <OptionsBlock {type}>
function create_default_slot(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = /*props*/ ctx[4];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*prop*/ ctx[8];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*props, customisations, placeholders, customise*/ 23) {
				each_value = /*props*/ ctx[4];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(103:0) <OptionsBlock {type}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let optionsblock;
	let current;

	optionsblock = new _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				type: /*type*/ ctx[3],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(optionsblock.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(optionsblock, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const optionsblock_changes = {};

			if (dirty & /*$$scope, customisations, placeholders, customise*/ 2055) {
				optionsblock_changes.$$scope = { dirty, ctx };
			}

			optionsblock.$set(optionsblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(optionsblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(optionsblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(optionsblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Size', slots, []);
	let { icons } = $$props;
	let { customisations } = $$props;
	let { customise } = $$props;

	const type = _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseWidth && _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseHeight
	? 'size'
	: _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseWidth ? 'width' : 'height';

	const props = _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseWidth && _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseHeight
	? ['width', 'height']
	: [_config_components__WEBPACK_IMPORTED_MODULE_4__.customiseWidth ? 'width' : 'height'];

	const defaultSize = {
		width: _config_components__WEBPACK_IMPORTED_MODULE_4__.defaultWidth,
		height: _config_components__WEBPACK_IMPORTED_MODULE_4__.defaultHeight
	};

	let data;
	let placeholders;
	const writable_props = ['icons', 'customisations', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Size> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icons' in $$props) $$invalidate(5, icons = $$props.icons);
		if ('customisations' in $$props) $$invalidate(0, customisations = $$props.customisations);
		if ('customise' in $$props) $$invalidate(1, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		calculateSize: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__.calculateSize,
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString,
		Iconify: _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_3__.Iconify,
		customiseWidth: _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseWidth,
		customiseHeight: _config_components__WEBPACK_IMPORTED_MODULE_4__.customiseHeight,
		defaultWidth: _config_components__WEBPACK_IMPORTED_MODULE_4__.defaultWidth,
		defaultHeight: _config_components__WEBPACK_IMPORTED_MODULE_4__.defaultHeight,
		OptionsBlock: _OptionsBlock_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		SizeInput: _SizeInput_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		icons,
		customisations,
		customise,
		type,
		props,
		defaultSize,
		data,
		placeholders
	});

	$$self.$inject_state = $$props => {
		if ('icons' in $$props) $$invalidate(5, icons = $$props.icons);
		if ('customisations' in $$props) $$invalidate(0, customisations = $$props.customisations);
		if ('customise' in $$props) $$invalidate(1, customise = $$props.customise);
		if ('data' in $$props) $$invalidate(6, data = $$props.data);
		if ('placeholders' in $$props) $$invalidate(2, placeholders = $$props.placeholders);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icons*/ 32) {
			$: {
				let width = 0;
				let height = 0;
				let hasWidth = true;
				let hasHeight = true;
				let ratio = 1;
				let hasRatio = true;

				icons.forEach(icon => {
					if (!hasWidth && !hasHeight) {
						return;
					}

					const name = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString)(icon);
					const data = _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_3__.Iconify.getIcon?.(name);

					if (!data) {
						return;
					}

					if (!width) {
						width = data.width;
						height = data.height;
						ratio = width / height;
						return;
					}

					if (hasWidth && width !== data.width) {
						hasWidth = false;
					}

					if (hasHeight && height !== data.height) {
						hasHeight = false;
					}

					if (hasRatio && data.width / data.height !== ratio) {
						hasRatio = false;
					}
				});

				$$invalidate(6, data = {
					width: hasWidth ? width : 0,
					height: hasHeight ? height : 0,
					ratio: hasRatio ? ratio : 0
				});
			}
		}

		if ($$self.$$.dirty & /*customisations, data*/ 65) {
			$: {
				$$invalidate(2, placeholders = { width: '', height: '' });
				const rotated = !!(customisations.rotate && customisations.rotate % 2 === 1);

				if (data.ratio !== 0) {
					const keys = ['width', 'height'];

					keys.forEach((key, index) => {
						const altKey = keys[1 - index];
						const placeholderKey = rotated ? altKey : key;
						let size = '';
						let scale = false;
						const customised2 = customisations[rotated ? key : altKey];

						if (customised2) {
							size = customised2;
							scale = true;
						} else if (defaultSize[key] !== '') {
							size = defaultSize[key];
						} else if (defaultSize[altKey] !== '') {
							size = defaultSize[altKey];
							scale = true;
						} else if (data[key]) {
							size = data[key];
						}

						if (size !== '') {
							$$invalidate(
								2,
								placeholders[placeholderKey] = (scale
								? (0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_1__.calculateSize)(size, key === 'width' ? data.ratio : 1 / data.ratio)
								: size) + '',
								placeholders
							);
						}
					});
				}
			}
		}
	};

	return [customisations, customise, placeholders, type, props, icons, data];
}

class Size extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			icons: 5,
			customisations: 0,
			customise: 1
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Size",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icons*/ ctx[5] === undefined && !('icons' in props)) {
			console.warn("<Size> was created without expected prop 'icons'");
		}

		if (/*customisations*/ ctx[0] === undefined && !('customisations' in props)) {
			console.warn("<Size> was created without expected prop 'customisations'");
		}

		if (/*customise*/ ctx[1] === undefined && !('customise' in props)) {
			console.warn("<Size> was created without expected prop 'customise'");
		}
	}

	get icons() {
		throw new Error("<Size>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icons(value) {
		throw new Error("<Size>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Size>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Size>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<Size>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<Size>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Size);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/SizeInput.svelte":
/*!*******************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/SizeInput.svelte ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../ui/Input.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/SizeInput.svelte generated by Svelte v3.43.1 */




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/props/SizeInput.svelte";

function create_fragment(ctx) {
	let input;
	let current;

	input = new _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				value: /*inputValue*/ ctx[3],
				placeholder: /*placeholder*/ ctx[1],
				title: /*title*/ ctx[2],
				onInput: /*onInput*/ ctx[4],
				onBlur: /*onBlur*/ ctx[5],
				icon: 'icon-' + /*prop*/ ctx[0],
				type: "number"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(input.$$.fragment);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(input, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const input_changes = {};
			if (dirty & /*inputValue*/ 8) input_changes.value = /*inputValue*/ ctx[3];
			if (dirty & /*placeholder*/ 2) input_changes.placeholder = /*placeholder*/ ctx[1];
			if (dirty & /*title*/ 4) input_changes.title = /*title*/ ctx[2];
			if (dirty & /*prop*/ 1) input_changes.icon = 'icon-' + /*prop*/ ctx[0];
			input.$set(input_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(input.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(input.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(input, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('SizeInput', slots, []);
	let { prop } = $$props;
	let { value } = $$props;
	let { placeholder } = $$props;
	let { customise } = $$props;
	let title;
	let lastValue = value;
	let inputValue = value;

	function onInput(newValue) {
		$$invalidate(3, inputValue = newValue);
		let cleanValue = newValue;

		if (newValue !== '') {
			const num = parseFloat(newValue);
			cleanValue = '' + num;

			if (isNaN(num) || cleanValue !== newValue || num <= 0) {
				return;
			}
		}

		customise(prop, cleanValue);
	}

	function onBlur() {
		$$invalidate(3, inputValue = value);
	}

	const writable_props = ['prop', 'value', 'placeholder', 'customise'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<SizeInput> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('prop' in $$props) $$invalidate(0, prop = $$props.prop);
		if ('value' in $$props) $$invalidate(6, value = $$props.value);
		if ('placeholder' in $$props) $$invalidate(1, placeholder = $$props.placeholder);
		if ('customise' in $$props) $$invalidate(7, customise = $$props.customise);
	};

	$$self.$capture_state = () => ({
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases,
		Input: _ui_Input_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		prop,
		value,
		placeholder,
		customise,
		title,
		lastValue,
		inputValue,
		onInput,
		onBlur
	});

	$$self.$inject_state = $$props => {
		if ('prop' in $$props) $$invalidate(0, prop = $$props.prop);
		if ('value' in $$props) $$invalidate(6, value = $$props.value);
		if ('placeholder' in $$props) $$invalidate(1, placeholder = $$props.placeholder);
		if ('customise' in $$props) $$invalidate(7, customise = $$props.customise);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('lastValue' in $$props) $$invalidate(8, lastValue = $$props.lastValue);
		if ('inputValue' in $$props) $$invalidate(3, inputValue = $$props.inputValue);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*prop*/ 1) {
			$: {
				$$invalidate(2, title = _config_phrases__WEBPACK_IMPORTED_MODULE_1__.phrases.footerBlocks[prop]);
			}
		}

		if ($$self.$$.dirty & /*lastValue, value*/ 320) {
			$: {
				if (lastValue !== value) {
					$$invalidate(8, lastValue = value);
					$$invalidate(3, inputValue = value);
				}
			}
		}
	};

	return [
		prop,
		placeholder,
		title,
		inputValue,
		onInput,
		onBlur,
		value,
		customise,
		lastValue
	];
}

class SizeInput extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			prop: 0,
			value: 6,
			placeholder: 1,
			customise: 7
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "SizeInput",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*prop*/ ctx[0] === undefined && !('prop' in props)) {
			console.warn("<SizeInput> was created without expected prop 'prop'");
		}

		if (/*value*/ ctx[6] === undefined && !('value' in props)) {
			console.warn("<SizeInput> was created without expected prop 'value'");
		}

		if (/*placeholder*/ ctx[1] === undefined && !('placeholder' in props)) {
			console.warn("<SizeInput> was created without expected prop 'placeholder'");
		}

		if (/*customise*/ ctx[7] === undefined && !('customise' in props)) {
			console.warn("<SizeInput> was created without expected prop 'customise'");
		}
	}

	get prop() {
		throw new Error("<SizeInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prop(value) {
		throw new Error("<SizeInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<SizeInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<SizeInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get placeholder() {
		throw new Error("<SizeInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set placeholder(value) {
		throw new Error("<SizeInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customise() {
		throw new Error("<SizeInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customise(value) {
		throw new Error("<SizeInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SizeInput);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Full.svelte":
/*!****************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Full.svelte ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @iconify/search-core/lib/iconify */ "./node_modules/@iconify/search-core/lib/iconify/index.js");
/* harmony import */ var _footer_icon_size__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../footer/icon-size */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/footer/icon-size.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Full.svelte generated by Svelte v3.43.1 */









const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Full.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[0] = list[i];
	return child_ctx;
}

// (107:1) {#each [data] as icon (icon.name)}
function create_each_block(key_1, ctx) {
	let first;
	let iconcomponent;
	let current;
	const iconcomponent_spread_levels = [{ icon: /*icon*/ ctx[0].name }, /*props*/ ctx[3]];
	let iconcomponent_props = {};

	for (let i = 0; i < iconcomponent_spread_levels.length; i += 1) {
		iconcomponent_props = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.assign)(iconcomponent_props, iconcomponent_spread_levels[i]);
	}

	iconcomponent = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: iconcomponent_props,
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconcomponent.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconcomponent, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			const iconcomponent_changes = (dirty & /*data, props*/ 10)
			? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_update)(iconcomponent_spread_levels, [
					dirty & /*data*/ 2 && { icon: /*icon*/ ctx[0].name },
					dirty & /*props*/ 8 && (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_object)(/*props*/ ctx[3])
				])
			: {};

			iconcomponent.$set(iconcomponent_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconcomponent.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconcomponent.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconcomponent, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(107:1) {#each [data] as icon (icon.name)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let each_value = [/*data*/ ctx[1]];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*icon*/ ctx[0].name;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < 1; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-foote r-sample iif-footer-sample--block iif-footer-sample--loaded");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "style", /*style*/ ctx[2]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 102, 0, 3438);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*data, props*/ 10) {
				each_value = [/*data*/ ctx[1]];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*style*/ 4) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "style", /*style*/ ctx[2]);
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Full', slots, []);
	let { icon } = $$props;
	let { customisations } = $$props;
	const divisions = [2.5, 3, 3.5];
	const maxWidth = _config_components__WEBPACK_IMPORTED_MODULE_5__.iconSampleSize.width;
	const maxHeight = _config_components__WEBPACK_IMPORTED_MODULE_5__.iconSampleSize.height;
	const minWidth = Math.floor(maxWidth / 2);
	const minHeight = Math.floor(maxHeight / 2);

	function scaleSample(size, canScaleUp) {
		while (size.width > maxWidth || size.height > maxHeight) {
			let newWidth = size.width / 2;
			let newHeight = size.height / 2;

			if (Math.round(newWidth) !== newWidth || Math.round(newHeight) !== newHeight) {
				for (let i = 0; i < divisions.length; i++) {
					let div = divisions[i];
					let newWidth2 = size.width / div;
					let newHeight2 = size.height / div;

					if (Math.round(newWidth2) === newWidth2 && Math.round(newHeight2) === newHeight2) {
						newWidth = newWidth2;
						newHeight = newHeight2;
						break;
					}
				}
			}

			size.width = newWidth;
			size.height = newHeight;
		}

		if (canScaleUp) {
			while (size.width < minWidth && size.height < minHeight) {
				size.width *= 2;
				size.height *= 2;
			}
		}
	}

	let data;
	let style;
	let props;
	const writable_props = ['icon', 'customisations'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Full> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(4, customisations = $$props.customisations);
	};

	$$self.$capture_state = () => ({
		IconComponent: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString,
		Iconify: _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_3__.Iconify,
		getDimensions: _footer_icon_size__WEBPACK_IMPORTED_MODULE_4__.getDimensions,
		iconSampleSize: _config_components__WEBPACK_IMPORTED_MODULE_5__.iconSampleSize,
		defaultColor: _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultColor,
		defaultWidth: _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultWidth,
		defaultHeight: _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultHeight,
		icon,
		customisations,
		divisions,
		maxWidth,
		maxHeight,
		minWidth,
		minHeight,
		scaleSample,
		data,
		style,
		props
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(4, customisations = $$props.customisations);
		if ('data' in $$props) $$invalidate(1, data = $$props.data);
		if ('style' in $$props) $$invalidate(2, style = $$props.style);
		if ('props' in $$props) $$invalidate(3, props = $$props.props);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon, customisations*/ 17) {
			$: {
				const name = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString)(icon);
				const iconData = _iconify_search_core_lib_iconify__WEBPACK_IMPORTED_MODULE_3__.Iconify.getIcon(name);
				const rotated = !!(iconData.width !== iconData.height && customisations.rotate && customisations.rotate % 2 === 1);
				const ratio = iconData.width / iconData.height;
				$$invalidate(1, data = { name, data: iconData, rotated, ratio });
			}
		}

		if ($$self.$$.dirty & /*customisations, style, data*/ 22) {
			$: {
				$$invalidate(2, style = '');

				if (customisations.color) {
					$$invalidate(2, style += 'color: ' + customisations.color + ';');
				} else if (_config_components__WEBPACK_IMPORTED_MODULE_5__.defaultColor) {
					$$invalidate(2, style += 'color: ' + _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultColor + ';');
				}

				if (!customisations.width && !customisations.height) {
					let size;

					if (_config_components__WEBPACK_IMPORTED_MODULE_5__.defaultWidth || _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultHeight) {
						size = (0,_footer_icon_size__WEBPACK_IMPORTED_MODULE_4__.getDimensions)(_config_components__WEBPACK_IMPORTED_MODULE_5__.defaultWidth, _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultHeight, data.ratio, data.rotated);
					} else {
						size = (0,_footer_icon_size__WEBPACK_IMPORTED_MODULE_4__.getDimensions)(data.data.width, data.data.height, data.ratio, data.rotated);
					}

					scaleSample(size, true);
					$$invalidate(2, style += 'font-size: ' + size.height + 'px;');
				}
			}
		}

		if ($$self.$$.dirty & /*customisations, data*/ 18) {
			$: {
				$$invalidate(3, props = {});

				['hFlip', 'vFlip', 'rotate'].forEach(key => {
					const prop = key;

					if (customisations[prop]) {
						$$invalidate(3, props[prop] = customisations[prop], props);
					}
				});

				let size;
				const customisedWidth = customisations.width;
				const customisedHeight = customisations.height;

				if (customisedWidth || customisedHeight) {
					size = (0,_footer_icon_size__WEBPACK_IMPORTED_MODULE_4__.getDimensions)(customisedWidth ? customisedWidth : '', customisedHeight ? customisedHeight : '', data.ratio, data.rotated);
				} else if (_config_components__WEBPACK_IMPORTED_MODULE_5__.defaultWidth || _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultHeight) {
					size = (0,_footer_icon_size__WEBPACK_IMPORTED_MODULE_4__.getDimensions)(_config_components__WEBPACK_IMPORTED_MODULE_5__.defaultWidth, _config_components__WEBPACK_IMPORTED_MODULE_5__.defaultHeight, data.ratio, data.rotated);
				}

				if (size !== void 0) {
					scaleSample(size, false);
					$$invalidate(3, props.width = size.width + '', props);
					$$invalidate(3, props.height = size.height + '', props);
				}
			}
		}
	};

	return [icon, data, style, props, customisations];
}

class Full extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icon: 0, customisations: 4 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Full",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[0] === undefined && !('icon' in props)) {
			console.warn("<Full> was created without expected prop 'icon'");
		}

		if (/*customisations*/ ctx[4] === undefined && !('customisations' in props)) {
			console.warn("<Full> was created without expected prop 'customisations'");
		}
	}

	get icon() {
		throw new Error("<Full>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Full>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Full>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Full>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Full);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Inline.svelte":
/*!******************************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Inline.svelte ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Inline.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/footers/parts/samples/Inline.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[7] = list[i];
	return child_ctx;
}

// (51:3) {#each [props] as iconProps (iconProps.icon)}
function create_each_block(key_1, ctx) {
	let first;
	let iconcomponent;
	let current;
	const iconcomponent_spread_levels = [/*iconProps*/ ctx[7]];
	let iconcomponent_props = {};

	for (let i = 0; i < iconcomponent_spread_levels.length; i += 1) {
		iconcomponent_props = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.assign)(iconcomponent_props, iconcomponent_spread_levels[i]);
	}

	iconcomponent = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: iconcomponent_props,
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconcomponent.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconcomponent, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			const iconcomponent_changes = (dirty & /*props*/ 1)
			? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_update)(iconcomponent_spread_levels, [(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_spread_object)(/*iconProps*/ ctx[7])])
			: {};

			iconcomponent.$set(iconcomponent_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconcomponent.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconcomponent.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconcomponent, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(51:3) {#each [props] as iconProps (iconProps.icon)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let p;
	let t0_value = /*samplePhrases*/ ctx[2].before + "";
	let t0;
	let t1;
	let span;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let t2;
	let t3_value = /*samplePhrases*/ ctx[2].after + "";
	let t3;
	let current;
	let each_value = [/*props*/ ctx[0]];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*iconProps*/ ctx[7].icon;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < 1; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].c();
			}

			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t3_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "style", /*style*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 49, 2, 1464);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 47, 1, 1433);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-footer-sample iif-footer-sample--inline iif-footer-sample--loaded");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 45, 0, 1347);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, p);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, span);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].m(span, null);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t3);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*props*/ 1) {
				each_value = [/*props*/ ctx[0]];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, span, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*style*/ 2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "style", /*style*/ ctx[1]);
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Inline', slots, []);
	let { icon } = $$props;
	let { customisations } = $$props;
	const samplePhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases.footer.inlineSample;
	const maxWidth = _config_components__WEBPACK_IMPORTED_MODULE_4__.iconSampleSize.width;
	const maxHeight = _config_components__WEBPACK_IMPORTED_MODULE_4__.iconSampleSize.height;
	let props;
	let style;
	const writable_props = ['icon', 'customisations'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Inline> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(3, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(4, customisations = $$props.customisations);
	};

	$$self.$capture_state = () => ({
		IconComponent: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		iconToString: _iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_3__.phrases,
		iconSampleSize: _config_components__WEBPACK_IMPORTED_MODULE_4__.iconSampleSize,
		icon,
		customisations,
		samplePhrases,
		maxWidth,
		maxHeight,
		props,
		style
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(3, icon = $$props.icon);
		if ('customisations' in $$props) $$invalidate(4, customisations = $$props.customisations);
		if ('props' in $$props) $$invalidate(0, props = $$props.props);
		if ('style' in $$props) $$invalidate(1, style = $$props.style);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon, customisations, props*/ 25) {
			$: {
				$$invalidate(0, props = { icon: (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_2__.iconToString)(icon) });
				$$invalidate(1, style = '');

				Object.keys(customisations).forEach(key => {
					const attr = key;
					const value = customisations[attr];

					if (value !== void 0 && value !== '' && value !== 0 && value !== false) {
						if (attr === 'color') {
							$$invalidate(1, style = 'color: ' + value + ';');
						} else {
							$$invalidate(0, props[attr] = value, props);
						}
					}
				});

				if (props.width || props.height) {
					const rotated = !!(customisations.rotate % 2);
					let key = rotated ? 'height' : 'width';

					if (props[key] && props[key] > maxWidth) {
						$$invalidate(0, props[key] = maxWidth, props);
					}

					key = !rotated ? 'height' : 'width';

					if (props[key] && props[key] > maxHeight) {
						$$invalidate(0, props[key] = maxHeight, props);
					}
				}
			}
		}
	};

	return [props, style, samplePhrases, icon, customisations];
}

class Inline extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icon: 3, customisations: 4 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Inline",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[3] === undefined && !('icon' in props)) {
			console.warn("<Inline> was created without expected prop 'icon'");
		}

		if (/*customisations*/ ctx[4] === undefined && !('customisations' in props)) {
			console.warn("<Inline> was created without expected prop 'customisations'");
		}
	}

	get icon() {
		throw new Error("<Inline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Inline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get customisations() {
		throw new Error("<Inline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set customisations(value) {
		throw new Error("<Inline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Inline);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collection.svelte":
/*!******************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collection.svelte ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _config_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/components */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/components.ts");
/* harmony import */ var _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blocks/Filters.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte");
/* harmony import */ var _blocks_CollectionInfo_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blocks/CollectionInfo.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionInfo.svelte");
/* harmony import */ var _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../blocks/IconsWithPages.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte");
/* harmony import */ var _blocks_Search_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../blocks/Search.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collection.svelte generated by Svelte v3.43.1 */








const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collection.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[9] = list[i];
	child_ctx[11] = i;
	return child_ctx;
}

// (51:1) {#if blocks.collections}
function create_if_block_2(ctx) {
	let div;
	let filters;
	let current;

	filters = new _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				name: "collections",
				parent: /*route*/ ctx[2].parent
				? /*route*/ ctx[2].parent.type
				: 'collections',
				link: /*collectionsLink*/ ctx[6],
				block: /*blocks*/ ctx[1].collections
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filters.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iff-filters");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 51, 2, 1392);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filters, div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const filters_changes = {};

			if (dirty & /*route*/ 4) filters_changes.parent = /*route*/ ctx[2].parent
			? /*route*/ ctx[2].parent.type
			: 'collections';

			if (dirty & /*collectionsLink*/ 64) filters_changes.link = /*collectionsLink*/ ctx[6];
			if (dirty & /*blocks*/ 2) filters_changes.block = /*blocks*/ ctx[1].collections;
			filters.$set(filters_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filters.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filters.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filters);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(51:1) {#if blocks.collections}",
		ctx
	});

	return block;
}

// (61:1) {#if showCollectionInfoBlock && info !== null}
function create_if_block_1(ctx) {
	let collectioninfoblock;
	let current;

	collectioninfoblock = new _blocks_CollectionInfo_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: {
				name: "info",
				block: /*blocks*/ ctx[1].info
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(collectioninfoblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(collectioninfoblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const collectioninfoblock_changes = {};
			if (dirty & /*blocks*/ 2) collectioninfoblock_changes.block = /*blocks*/ ctx[1].info;
			collectioninfoblock.$set(collectioninfoblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(collectioninfoblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(collectioninfoblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(collectioninfoblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(61:1) {#if showCollectionInfoBlock && info !== null}",
		ctx
	});

	return block;
}

// (67:1) {#if filterBlocks.length > 0}
function create_if_block(ctx) {
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let each_value = /*filterBlocks*/ ctx[7];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*item*/ ctx[9].key;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iff-filters");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 67, 2, 1801);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*filterBlocks*/ 128) {
				each_value = /*filterBlocks*/ ctx[7];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(67:1) {#if filterBlocks.length > 0}",
		ctx
	});

	return block;
}

// (69:3) {#each filterBlocks as item, i (item.key)}
function create_each_block(key_1, ctx) {
	let first;
	let filters;
	let current;

	filters = new _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				name: /*item*/ ctx[9].key,
				block: /*item*/ ctx[9].item
			},
			$$inline: true
		});

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filters.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filters, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const filters_changes = {};
			if (dirty & /*filterBlocks*/ 128) filters_changes.name = /*item*/ ctx[9].key;
			if (dirty & /*filterBlocks*/ 128) filters_changes.block = /*item*/ ctx[9].item;
			filters.$set(filters_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filters.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filters.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filters, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(69:3) {#each filterBlocks as item, i (item.key)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t0;
	let t1;
	let searchblock;
	let t2;
	let t3;
	let iconswithpages;
	let div_class_value;
	let current;
	let if_block0 = /*blocks*/ ctx[1].collections && create_if_block_2(ctx);
	let if_block1 = _config_components__WEBPACK_IMPORTED_MODULE_2__.showCollectionInfoBlock && /*info*/ ctx[5] !== null && create_if_block_1(ctx);

	searchblock = new _blocks_Search_svelte__WEBPACK_IMPORTED_MODULE_6__["default"]({
			props: {
				name: "filter",
				block: /*blocks*/ ctx[1].filter,
				info: /*info*/ ctx[5]
			},
			$$inline: true
		});

	let if_block2 = /*filterBlocks*/ ctx[7].length > 0 && create_if_block(ctx);

	iconswithpages = new _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_5__["default"]({
			props: {
				blocks: /*blocks*/ ctx[1],
				selection: /*selection*/ ctx[0],
				route: /*route*/ ctx[2]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(searchblock.$$.fragment);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconswithpages.$$.fragment);

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value = "iif-view " + baseClass + " " + baseClass + "--prefix--" + (/*prefix*/ ctx[4] + (/*provider*/ ctx[3] === ''
			? ''
			: ' ' + baseClass + '--provider--' + /*provider*/ ctx[3])));

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 47, 0, 1225);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			if (if_block1) if_block1.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(searchblock, div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t2);
			if (if_block2) if_block2.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconswithpages, div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*blocks*/ ctx[1].collections) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*blocks*/ 2) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (_config_components__WEBPACK_IMPORTED_MODULE_2__.showCollectionInfoBlock && /*info*/ ctx[5] !== null) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*info*/ 32) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(div, t1);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			const searchblock_changes = {};
			if (dirty & /*blocks*/ 2) searchblock_changes.block = /*blocks*/ ctx[1].filter;
			if (dirty & /*info*/ 32) searchblock_changes.info = /*info*/ ctx[5];
			searchblock.$set(searchblock_changes);

			if (/*filterBlocks*/ ctx[7].length > 0) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*filterBlocks*/ 128) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div, t3);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			const iconswithpages_changes = {};
			if (dirty & /*blocks*/ 2) iconswithpages_changes.blocks = /*blocks*/ ctx[1];
			if (dirty & /*selection*/ 1) iconswithpages_changes.selection = /*selection*/ ctx[0];
			if (dirty & /*route*/ 4) iconswithpages_changes.route = /*route*/ ctx[2];
			iconswithpages.$set(iconswithpages_changes);

			if (!current || dirty & /*prefix, provider*/ 24 && div_class_value !== (div_class_value = "iif-view " + baseClass + " " + baseClass + "--prefix--" + (/*prefix*/ ctx[4] + (/*provider*/ ctx[3] === ''
			? ''
			: ' ' + baseClass + '--provider--' + /*provider*/ ctx[3])))) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(searchblock.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconswithpages.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(searchblock.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconswithpages.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(searchblock);
			if (if_block2) if_block2.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconswithpages);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-view--collection';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Collection', slots, []);
	let { selection } = $$props;
	let { blocks } = $$props;
	let { route } = $$props;
	const filterBlockKeys = ['tags', 'themePrefixes', 'themeSuffixes'];
	let provider;
	let prefix;
	let info;
	let collectionsLink;
	let filterBlocks;
	const writable_props = ['selection', 'blocks', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Collection> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('selection' in $$props) $$invalidate(0, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(1, blocks = $$props.blocks);
		if ('route' in $$props) $$invalidate(2, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		getProvider: _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.getProvider,
		showCollectionInfoBlock: _config_components__WEBPACK_IMPORTED_MODULE_2__.showCollectionInfoBlock,
		Filters: _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		CollectionInfoBlock: _blocks_CollectionInfo_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		IconsWithPages: _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_5__["default"],
		SearchBlock: _blocks_Search_svelte__WEBPACK_IMPORTED_MODULE_6__["default"],
		selection,
		blocks,
		route,
		filterBlockKeys,
		baseClass,
		provider,
		prefix,
		info,
		collectionsLink,
		filterBlocks
	});

	$$self.$inject_state = $$props => {
		if ('selection' in $$props) $$invalidate(0, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(1, blocks = $$props.blocks);
		if ('route' in $$props) $$invalidate(2, route = $$props.route);
		if ('provider' in $$props) $$invalidate(3, provider = $$props.provider);
		if ('prefix' in $$props) $$invalidate(4, prefix = $$props.prefix);
		if ('info' in $$props) $$invalidate(5, info = $$props.info);
		if ('collectionsLink' in $$props) $$invalidate(6, collectionsLink = $$props.collectionsLink);
		if ('filterBlocks' in $$props) $$invalidate(7, filterBlocks = $$props.filterBlocks);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*route, provider, blocks*/ 14) {
			$: {
				$$invalidate(3, provider = route.params.provider);

				if (typeof provider !== 'string') {
					$$invalidate(3, provider = '');
				}

				$$invalidate(4, prefix = route.params.prefix);
				$$invalidate(5, info = blocks.info === null ? null : blocks.info.info);
				const providerData = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.getProvider)(provider);

				if (providerData) {
					$$invalidate(6, collectionsLink = providerData.links.collection);
				} else {
					$$invalidate(6, collectionsLink = '');
				}
			}
		}

		if ($$self.$$.dirty & /*blocks*/ 2) {
			$: {
				$$invalidate(7, filterBlocks = filterBlockKeys.filter(key => !!blocks[key]).map(key => {
					return { key, item: blocks[key] };
				}));
			}
		}
	};

	return [
		selection,
		blocks,
		route,
		provider,
		prefix,
		info,
		collectionsLink,
		filterBlocks
	];
}

class Collection extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { selection: 0, blocks: 1, route: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Collection",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*selection*/ ctx[0] === undefined && !('selection' in props)) {
			console.warn("<Collection> was created without expected prop 'selection'");
		}

		if (/*blocks*/ ctx[1] === undefined && !('blocks' in props)) {
			console.warn("<Collection> was created without expected prop 'blocks'");
		}

		if (/*route*/ ctx[2] === undefined && !('route' in props)) {
			console.warn("<Collection> was created without expected prop 'route'");
		}
	}

	get selection() {
		throw new Error("<Collection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Collection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<Collection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Collection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Collection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Collection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Collection);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collections.svelte":
/*!*******************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collections.svelte ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blocks/Filters.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte");
/* harmony import */ var _blocks_CollectionsFilter_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blocks/CollectionsFilter.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsFilter.svelte");
/* harmony import */ var _blocks_CollectionsList_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blocks/CollectionsList.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/CollectionsList.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collections.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Collections.svelte";

// (10:2) {#if blocks.categories}
function create_if_block(ctx) {
	let filtersblock;
	let current;

	filtersblock = new _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				name: "categories",
				block: /*blocks*/ ctx[0].categories
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filtersblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filtersblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const filtersblock_changes = {};
			if (dirty & /*blocks*/ 1) filtersblock_changes.block = /*blocks*/ ctx[0].categories;
			filtersblock.$set(filtersblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filtersblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filtersblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filtersblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(10:2) {#if blocks.categories}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div1;
	let div0;
	let t0;
	let collectionsfilterblock;
	let t1;
	let collectionslistblock;
	let current;
	let if_block = /*blocks*/ ctx[0].categories && create_if_block(ctx);

	collectionsfilterblock = new _blocks_CollectionsFilter_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				name: "filter",
				block: /*blocks*/ ctx[0].filter
			},
			$$inline: true
		});

	collectionslistblock = new _blocks_CollectionsList_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				provider: /*route*/ ctx[1].params.provider,
				name: "collections",
				block: /*blocks*/ ctx[0].collections
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block) if_block.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(collectionsfilterblock.$$.fragment);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(collectionslistblock.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "iif-collections-header");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 8, 1, 315);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "iif-view iif-view--collections");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 7, 0, 269);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
			if (if_block) if_block.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(collectionsfilterblock, div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(collectionslistblock, div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*blocks*/ ctx[0].categories) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*blocks*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(div0, t0);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			const collectionsfilterblock_changes = {};
			if (dirty & /*blocks*/ 1) collectionsfilterblock_changes.block = /*blocks*/ ctx[0].filter;
			collectionsfilterblock.$set(collectionsfilterblock_changes);
			const collectionslistblock_changes = {};
			if (dirty & /*route*/ 2) collectionslistblock_changes.provider = /*route*/ ctx[1].params.provider;
			if (dirty & /*blocks*/ 1) collectionslistblock_changes.block = /*blocks*/ ctx[0].collections;
			collectionslistblock.$set(collectionslistblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(collectionsfilterblock.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(collectionslistblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(collectionsfilterblock.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(collectionslistblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (if_block) if_block.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(collectionsfilterblock);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(collectionslistblock);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Collections', slots, []);
	let { blocks } = $$props;
	let { route } = $$props;
	const writable_props = ['blocks', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Collections> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('blocks' in $$props) $$invalidate(0, blocks = $$props.blocks);
		if ('route' in $$props) $$invalidate(1, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		FiltersBlock: _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		CollectionsFilterBlock: _blocks_CollectionsFilter_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		CollectionsListBlock: _blocks_CollectionsList_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		blocks,
		route
	});

	$$self.$inject_state = $$props => {
		if ('blocks' in $$props) $$invalidate(0, blocks = $$props.blocks);
		if ('route' in $$props) $$invalidate(1, route = $$props.route);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [blocks, route];
}

class Collections extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { blocks: 0, route: 1 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Collections",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*blocks*/ ctx[0] === undefined && !('blocks' in props)) {
			console.warn("<Collections> was created without expected prop 'blocks'");
		}

		if (/*route*/ ctx[1] === undefined && !('route' in props)) {
			console.warn("<Collections> was created without expected prop 'route'");
		}
	}

	get blocks() {
		throw new Error("<Collections>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Collections>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error("<Collections>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Collections>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Collections);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Custom.svelte":
/*!**************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Custom.svelte ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blocks/IconsWithPages.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte");
/* harmony import */ var _blocks_Search_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blocks/Search.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Search.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Custom.svelte generated by Svelte v3.43.1 */




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Custom.svelte";

function create_fragment(ctx) {
	let div;
	let searchblock;
	let t;
	let iconswithpages;
	let div_class_value;
	let current;

	searchblock = new _blocks_Search_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				name: "filter",
				block: /*blocks*/ ctx[2].filter,
				customType: /*route*/ ctx[0].params.customType
			},
			$$inline: true
		});

	iconswithpages = new _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				blocks: /*blocks*/ ctx[2],
				selection: /*selection*/ ctx[1],
				route: /*route*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(searchblock.$$.fragment);
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconswithpages.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value = "iif-view iif-view--custom iif-view--custom--" + /*route*/ ctx[0].params.customType);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 7, 0, 209);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(searchblock, div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconswithpages, div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const searchblock_changes = {};
			if (dirty & /*blocks*/ 4) searchblock_changes.block = /*blocks*/ ctx[2].filter;
			if (dirty & /*route*/ 1) searchblock_changes.customType = /*route*/ ctx[0].params.customType;
			searchblock.$set(searchblock_changes);
			const iconswithpages_changes = {};
			if (dirty & /*blocks*/ 4) iconswithpages_changes.blocks = /*blocks*/ ctx[2];
			if (dirty & /*selection*/ 2) iconswithpages_changes.selection = /*selection*/ ctx[1];
			if (dirty & /*route*/ 1) iconswithpages_changes.route = /*route*/ ctx[0];
			iconswithpages.$set(iconswithpages_changes);

			if (!current || dirty & /*route*/ 1 && div_class_value !== (div_class_value = "iif-view iif-view--custom iif-view--custom--" + /*route*/ ctx[0].params.customType)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(searchblock.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconswithpages.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(searchblock.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconswithpages.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(searchblock);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconswithpages);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Custom', slots, []);
	let { route } = $$props;
	let { selection } = $$props;
	let { blocks } = $$props;
	const writable_props = ['route', 'selection', 'blocks'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Custom> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('route' in $$props) $$invalidate(0, route = $$props.route);
		if ('selection' in $$props) $$invalidate(1, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(2, blocks = $$props.blocks);
	};

	$$self.$capture_state = () => ({
		IconsWithPages: _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		SearchBlock: _blocks_Search_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		route,
		selection,
		blocks
	});

	$$self.$inject_state = $$props => {
		if ('route' in $$props) $$invalidate(0, route = $$props.route);
		if ('selection' in $$props) $$invalidate(1, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(2, blocks = $$props.blocks);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [route, selection, blocks];
}

class Custom extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { route: 0, selection: 1, blocks: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Custom",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*route*/ ctx[0] === undefined && !('route' in props)) {
			console.warn("<Custom> was created without expected prop 'route'");
		}

		if (/*selection*/ ctx[1] === undefined && !('selection' in props)) {
			console.warn("<Custom> was created without expected prop 'selection'");
		}

		if (/*blocks*/ ctx[2] === undefined && !('blocks' in props)) {
			console.warn("<Custom> was created without expected prop 'blocks'");
		}
	}

	get route() {
		throw new Error("<Custom>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Custom>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selection() {
		throw new Error("<Custom>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Custom>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<Custom>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Custom>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Custom);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Error.svelte":
/*!*************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Error.svelte ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_phrases__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/phrases */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/phrases.ts");
/* harmony import */ var _Block_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Block.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/Block.svelte");
/* harmony import */ var _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ui/UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Error.svelte generated by Svelte v3.43.1 */


const { Error: Error_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Error.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[7] = list[i];
	return child_ctx;
}

// (48:3) {#if canReturn}
function create_if_block(ctx) {
	let br;
	let t0;
	let a;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			br = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("br");
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			a.textContent = `${/*errorPhrases*/ ctx[3].custom.home}`;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(br, file, 48, 4, 1360);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 49, 4, 1371);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, br, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*handleReturn*/ ctx[4]), false, true, false);
				mounted = true;
			}
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(br);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(48:3) {#if canReturn}",
		ctx
	});

	return block;
}

// (44:1) <Block type="error" extra={'error--' + type}>
function create_default_slot(ctx) {
	let uiicon;
	let t0;
	let p;
	let t1;
	let t2;
	let t3;
	let current;

	uiicon = new _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__["default"]({
			props: { icon: 'error-' + /*type*/ ctx[7] },
			$$inline: true
		});

	let if_block = /*canReturn*/ ctx[2] && create_if_block(ctx);

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			p = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("p");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*text*/ ctx[1]);
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block) if_block.c();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(p, file, 45, 2, 1323);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, p, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(p, t2);
			if (if_block) if_block.m(p, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t3, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};
			if (dirty & /*error*/ 1) uiicon_changes.icon = 'error-' + /*type*/ ctx[7];
			uiicon.$set(uiicon_changes);
			if (!current || dirty & /*text*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, /*text*/ ctx[1]);

			if (/*canReturn*/ ctx[2]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(p, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(p);
			if (if_block) if_block.d();
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t3);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(44:1) <Block type=\\\"error\\\" extra={'error--' + type}>",
		ctx
	});

	return block;
}

// (43:0) {#each [error] as type (type)}
function create_each_block(key_1, ctx) {
	let first;
	let block;
	let current;

	block = new _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				type: "error",
				extra: 'error--' + /*type*/ ctx[7],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block_1 = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(block.$$.fragment);
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(block, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const block_changes = {};
			if (dirty & /*error*/ 1) block_changes.extra = 'error--' + /*type*/ ctx[7];

			if (dirty & /*$$scope, canReturn, text, error*/ 1031) {
				block_changes.$$scope = { dirty, ctx };
			}

			block.$set(block_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(block.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(block.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(block, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block: block_1,
		id: create_each_block.name,
		type: "each",
		source: "(43:0) {#each [error] as type (type)}",
		ctx
	});

	return block_1;
}

function create_fragment(ctx) {
	let each_blocks = [];
	let each_1_lookup = new Map();
	let each_1_anchor;
	let current;
	let each_value = [/*error*/ ctx[0]];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*type*/ ctx[7];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < 1; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error_1("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*error, handleReturn, errorPhrases, canReturn, text*/ 31) {
				each_value = [/*error*/ ctx[0]];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, each_1_anchor.parentNode, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < 1; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			for (let i = 0; i < 1; i += 1) {
				each_blocks[i].d(detaching);
			}

			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(each_1_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Error', slots, []);
	let { error } = $$props;
	let { route } = $$props;
	const registry = (0,svelte__WEBPACK_IMPORTED_MODULE_1__.getContext)('registry');
	const errorPhrases = _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases.errors;
	let text;
	let canReturn;

	function handleReturn() {
		const router = registry.router;

		if (route && route.type === 'collections') {
			router.home('');
		} else {
			router.home();
		}
	}

	const writable_props = ['error', 'route'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Error> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('error' in $$props) $$invalidate(0, error = $$props.error);
		if ('route' in $$props) $$invalidate(5, route = $$props.route);
	};

	$$self.$capture_state = () => ({
		getContext: svelte__WEBPACK_IMPORTED_MODULE_1__.getContext,
		phrases: _config_phrases__WEBPACK_IMPORTED_MODULE_2__.phrases,
		Block: _Block_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		UIIcon: _ui_UIIcon_svelte__WEBPACK_IMPORTED_MODULE_4__["default"],
		error,
		route,
		registry,
		errorPhrases,
		text,
		canReturn,
		handleReturn
	});

	$$self.$inject_state = $$props => {
		if ('error' in $$props) $$invalidate(0, error = $$props.error);
		if ('route' in $$props) $$invalidate(5, route = $$props.route);
		if ('text' in $$props) $$invalidate(1, text = $$props.text);
		if ('canReturn' in $$props) $$invalidate(2, canReturn = $$props.canReturn);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*route, error, text*/ 35) {
			$: {
				$$invalidate(2, canReturn = !!(route && (route.type !== 'collections' || route.parent || route.params && route.params.provider) && errorPhrases.custom.home !== void 0));

				$$invalidate(1, text = errorPhrases.custom[error] === void 0
				? errorPhrases.defaultError
				: errorPhrases.custom[error]);

				switch (error) {
					case 'not_found':
						$$invalidate(1, text = text.replace('{prefix}', route && route.type === 'collection'
						? '"' + route.params.prefix + '"'
						: ''));
						break;
					case 'bad_route':
						$$invalidate(2, canReturn = errorPhrases.custom.home !== void 0);
						break;
				}
			}
		}
	};

	return [error, text, canReturn, errorPhrases, handleReturn, route];
}

class Error extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { error: 0, route: 5 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Error",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*error*/ ctx[0] === undefined && !('error' in props)) {
			console.warn("<Error> was created without expected prop 'error'");
		}

		if (/*route*/ ctx[5] === undefined && !('route' in props)) {
			console.warn("<Error> was created without expected prop 'route'");
		}
	}

	get error() {
		throw new Error_1("<Error>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error_1("<Error>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get route() {
		throw new Error_1("<Error>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error_1("<Error>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Error);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Search.svelte":
/*!**************************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Search.svelte ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/search-core */ "./node_modules/@iconify/search-core/lib/index.js");
/* harmony import */ var _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blocks/Filters.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/Filters.svelte");
/* harmony import */ var _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blocks/IconsWithPages.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/blocks/IconsWithPages.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Search.svelte generated by Svelte v3.43.1 */





const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/content/views/Search.svelte";

// (24:1) {#if blocks.collections}
function create_if_block(ctx) {
	let filtersblock;
	let current;

	filtersblock = new _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				name: "collections",
				block: /*blocks*/ ctx[2].collections,
				link: /*collectionsLink*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(filtersblock.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(filtersblock, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const filtersblock_changes = {};
			if (dirty & /*blocks*/ 4) filtersblock_changes.block = /*blocks*/ ctx[2].collections;
			if (dirty & /*collectionsLink*/ 8) filtersblock_changes.link = /*collectionsLink*/ ctx[3];
			filtersblock.$set(filtersblock_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(filtersblock.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(filtersblock.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(filtersblock, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(24:1) {#if blocks.collections}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t;
	let iconswithpages;
	let current;
	let if_block = /*blocks*/ ctx[2].collections && create_if_block(ctx);

	iconswithpages = new _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				blocks: /*blocks*/ ctx[2],
				selection: /*selection*/ ctx[1],
				route: /*route*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block) if_block.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(iconswithpages.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-view iif-view--search");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 22, 0, 584);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block) if_block.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(iconswithpages, div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*blocks*/ ctx[2].collections) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*blocks*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(div, t);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			const iconswithpages_changes = {};
			if (dirty & /*blocks*/ 4) iconswithpages_changes.blocks = /*blocks*/ ctx[2];
			if (dirty & /*selection*/ 2) iconswithpages_changes.selection = /*selection*/ ctx[1];
			if (dirty & /*route*/ 1) iconswithpages_changes.route = /*route*/ ctx[0];
			iconswithpages.$set(iconswithpages_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(iconswithpages.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(iconswithpages.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block) if_block.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(iconswithpages);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Search', slots, []);
	let { route } = $$props;
	let { selection } = $$props;
	let { blocks } = $$props;
	let collectionsLink;
	const writable_props = ['route', 'selection', 'blocks'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Search> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('route' in $$props) $$invalidate(0, route = $$props.route);
		if ('selection' in $$props) $$invalidate(1, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(2, blocks = $$props.blocks);
	};

	$$self.$capture_state = () => ({
		getProvider: _iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.getProvider,
		FiltersBlock: _blocks_Filters_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		IconsWithPages: _blocks_IconsWithPages_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
		route,
		selection,
		blocks,
		collectionsLink
	});

	$$self.$inject_state = $$props => {
		if ('route' in $$props) $$invalidate(0, route = $$props.route);
		if ('selection' in $$props) $$invalidate(1, selection = $$props.selection);
		if ('blocks' in $$props) $$invalidate(2, blocks = $$props.blocks);
		if ('collectionsLink' in $$props) $$invalidate(3, collectionsLink = $$props.collectionsLink);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*route*/ 1) {
			$: {
				let provider = route.params.provider;

				if (typeof provider !== 'string') {
					provider = '';
				}

				const providerData = (0,_iconify_search_core__WEBPACK_IMPORTED_MODULE_1__.getProvider)(provider);

				if (providerData) {
					$$invalidate(3, collectionsLink = providerData.links.collection);
				} else {
					$$invalidate(3, collectionsLink = '');
				}
			}
		}
	};

	return [route, selection, blocks, collectionsLink];
}

class Search extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { route: 0, selection: 1, blocks: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Search",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*route*/ ctx[0] === undefined && !('route' in props)) {
			console.warn("<Search> was created without expected prop 'route'");
		}

		if (/*selection*/ ctx[1] === undefined && !('selection' in props)) {
			console.warn("<Search> was created without expected prop 'selection'");
		}

		if (/*blocks*/ ctx[2] === undefined && !('blocks' in props)) {
			console.warn("<Search> was created without expected prop 'blocks'");
		}
	}

	get route() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set route(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selection() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selection(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get blocks() {
		throw new Error("<Search>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blocks(value) {
		throw new Error("<Search>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Search);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/AddForm.svelte":
/*!****************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/AddForm.svelte ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _Input_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Input.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte");
/* harmony import */ var _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/AddForm.svelte generated by Svelte v3.43.1 */




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/AddForm.svelte";

// (32:1) {#if phrases.title}
function create_if_block_3(ctx) {
	let div;
	let t_value = /*phrases*/ ctx[1].title + "";
	let t;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-block--add-form-title");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 32, 2, 731);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*phrases*/ 2 && t_value !== (t_value = /*phrases*/ ctx[1].title + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(32:1) {#if phrases.title}",
		ctx
	});

	return block;
}

// (44:3) {#if buttonIcon}
function create_if_block_2(ctx) {
	let uiicon;
	let current;
	uiicon = new _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({ props: { icon: "plus" }, $$inline: true });

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(44:3) {#if buttonIcon}",
		ctx
	});

	return block;
}

// (50:1) {#if status}
function create_if_block_1(ctx) {
	let div;
	let t;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*status*/ ctx[4]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-block--add-form-status");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 50, 2, 1138);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*status*/ 16) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*status*/ ctx[4]);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(50:1) {#if status}",
		ctx
	});

	return block;
}

// (53:1) {#if !valid && phrases.invalid}
function create_if_block(ctx) {
	let div;
	let t_value = /*phrases*/ ctx[1].invalid + "";
	let t;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-block--add-form-invalid");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 53, 2, 1235);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*phrases*/ 2 && t_value !== (t_value = /*phrases*/ ctx[1].invalid + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(53:1) {#if !valid && phrases.invalid}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t0;
	let form;
	let input;
	let updating_value;
	let t1;
	let button;
	let t2;
	let t3_value = /*phrases*/ ctx[1].submit + "";
	let t3;
	let t4;
	let t5;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*phrases*/ ctx[1].title && create_if_block_3(ctx);

	function input_value_binding(value) {
		/*input_value_binding*/ ctx[10](value);
	}

	let input_props = {
		type: "text",
		placeholder: /*phrases*/ ctx[1].placeholder,
		icon: /*inputIcon*/ ctx[3]
	};

	if (/*value*/ ctx[0] !== void 0) {
		input_props.value = /*value*/ ctx[0];
	}

	input = new _Input_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({ props: input_props, $$inline: true });
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks.push(() => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bind)(input, 'value', input_value_binding));
	let if_block1 = /*buttonIcon*/ ctx[2] && create_if_block_2(ctx);
	let if_block2 = /*status*/ ctx[4] && create_if_block_1(ctx);
	let if_block3 = !/*valid*/ ctx[5] && /*phrases*/ ctx[1].invalid && create_if_block(ctx);

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			form = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("form");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(input.$$.fragment);
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
			if (if_block1) if_block1.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t3_value);
			t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			t5 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block3) if_block3.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", /*buttonClass*/ ctx[6]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "type", "submit");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 42, 2, 982);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(form, "class", "iif-block--add-form-form");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(form, file, 34, 1, 800);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-block--add-form");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 30, 0, 674);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			if (if_block0) if_block0.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, form);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(input, form, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(form, t1);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(form, button);
			if (if_block1) if_block1.m(button, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t2);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t3);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t4);
			if (if_block2) if_block2.m(div, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t5);
			if (if_block3) if_block3.m(div, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(form, "submit", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*submitForm*/ ctx[7]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (/*phrases*/ ctx[1].title) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_3(ctx);
					if_block0.c();
					if_block0.m(div, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			const input_changes = {};
			if (dirty & /*phrases*/ 2) input_changes.placeholder = /*phrases*/ ctx[1].placeholder;
			if (dirty & /*inputIcon*/ 8) input_changes.icon = /*inputIcon*/ ctx[3];

			if (!updating_value && dirty & /*value*/ 1) {
				updating_value = true;
				input_changes.value = /*value*/ ctx[0];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_flush_callback)(() => updating_value = false);
			}

			input.$set(input_changes);

			if (/*buttonIcon*/ ctx[2]) {
				if (if_block1) {
					if (dirty & /*buttonIcon*/ 4) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1, 1);
					if_block1.m(button, t2);
				}
			} else if (if_block1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if ((!current || dirty & /*phrases*/ 2) && t3_value !== (t3_value = /*phrases*/ ctx[1].submit + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t3, t3_value);

			if (!current || dirty & /*buttonClass*/ 64) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", /*buttonClass*/ ctx[6]);
			}

			if (/*status*/ ctx[4]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);
				} else {
					if_block2 = create_if_block_1(ctx);
					if_block2.c();
					if_block2.m(div, t5);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (!/*valid*/ ctx[5] && /*phrases*/ ctx[1].invalid) {
				if (if_block3) {
					if_block3.p(ctx, dirty);
				} else {
					if_block3 = create_if_block(ctx);
					if_block3.c();
					if_block3.m(div, null);
				}
			} else if (if_block3) {
				if_block3.d(1);
				if_block3 = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(input.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block1);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(input.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			if (if_block0) if_block0.d();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(input);
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('AddForm', slots, []);
	let { phrases } = $$props;
	let { buttonIcon = false } = $$props;
	let { inputIcon = '' } = $$props;
	let { value } = $$props;
	let { onSubmit } = $$props;
	let { onValidate = null } = $$props;
	let { status = '' } = $$props;
	let valid;
	let buttonClass;

	function validateValue(value) {
		if (typeof onValidate === 'function') {
			return onValidate(value);
		}

		return true;
	}

	function submitForm() {
		onSubmit(value);
	}

	const writable_props = [
		'phrases',
		'buttonIcon',
		'inputIcon',
		'value',
		'onSubmit',
		'onValidate',
		'status'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<AddForm> was created with unknown prop '${key}'`);
	});

	function input_value_binding(value$1) {
		value = value$1;
		$$invalidate(0, value);
	}

	$$self.$$set = $$props => {
		if ('phrases' in $$props) $$invalidate(1, phrases = $$props.phrases);
		if ('buttonIcon' in $$props) $$invalidate(2, buttonIcon = $$props.buttonIcon);
		if ('inputIcon' in $$props) $$invalidate(3, inputIcon = $$props.inputIcon);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('onSubmit' in $$props) $$invalidate(8, onSubmit = $$props.onSubmit);
		if ('onValidate' in $$props) $$invalidate(9, onValidate = $$props.onValidate);
		if ('status' in $$props) $$invalidate(4, status = $$props.status);
	};

	$$self.$capture_state = () => ({
		Input: _Input_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		UIIcon: _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		phrases,
		buttonIcon,
		inputIcon,
		value,
		onSubmit,
		onValidate,
		status,
		valid,
		buttonClass,
		validateValue,
		submitForm
	});

	$$self.$inject_state = $$props => {
		if ('phrases' in $$props) $$invalidate(1, phrases = $$props.phrases);
		if ('buttonIcon' in $$props) $$invalidate(2, buttonIcon = $$props.buttonIcon);
		if ('inputIcon' in $$props) $$invalidate(3, inputIcon = $$props.inputIcon);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('onSubmit' in $$props) $$invalidate(8, onSubmit = $$props.onSubmit);
		if ('onValidate' in $$props) $$invalidate(9, onValidate = $$props.onValidate);
		if ('status' in $$props) $$invalidate(4, status = $$props.status);
		if ('valid' in $$props) $$invalidate(5, valid = $$props.valid);
		if ('buttonClass' in $$props) $$invalidate(6, buttonClass = $$props.buttonClass);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*value*/ 1) {
			$: {
				$$invalidate(5, valid = validateValue(value));
			}
		}

		if ($$self.$$.dirty & /*buttonIcon*/ 4) {
			$: {
				$$invalidate(6, buttonClass = 'iif-form-button iif-form-button--primary' + (buttonIcon ? ' iif-form-button--with-icon' : ''));
			}
		}
	};

	return [
		value,
		phrases,
		buttonIcon,
		inputIcon,
		status,
		valid,
		buttonClass,
		submitForm,
		onSubmit,
		onValidate,
		input_value_binding
	];
}

class AddForm extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			phrases: 1,
			buttonIcon: 2,
			inputIcon: 3,
			value: 0,
			onSubmit: 8,
			onValidate: 9,
			status: 4
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "AddForm",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*phrases*/ ctx[1] === undefined && !('phrases' in props)) {
			console.warn("<AddForm> was created without expected prop 'phrases'");
		}

		if (/*value*/ ctx[0] === undefined && !('value' in props)) {
			console.warn("<AddForm> was created without expected prop 'value'");
		}

		if (/*onSubmit*/ ctx[8] === undefined && !('onSubmit' in props)) {
			console.warn("<AddForm> was created without expected prop 'onSubmit'");
		}
	}

	get phrases() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set phrases(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get buttonIcon() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set buttonIcon(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get inputIcon() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set inputIcon(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onSubmit() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onSubmit(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onValidate() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onValidate(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get status() {
		throw new Error("<AddForm>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error("<AddForm>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddForm);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte":
/*!*********************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte generated by Svelte v3.43.1 */


const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/ContentError.svelte";

function create_fragment(ctx) {
	let div;
	let t;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*error*/ ctx[0]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-content-error");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 3, 0, 55);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*error*/ 1) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*error*/ ctx[0]);
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('ContentError', slots, []);
	let { error } = $$props;
	const writable_props = ['error'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ContentError> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('error' in $$props) $$invalidate(0, error = $$props.error);
	};

	$$self.$capture_state = () => ({ error });

	$$self.$inject_state = $$props => {
		if ('error' in $$props) $$invalidate(0, error = $$props.error);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [error];
}

class ContentError extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { error: 0 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "ContentError",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*error*/ ctx[0] === undefined && !('error' in props)) {
			console.warn("<ContentError> was created without expected prop 'error'");
		}
	}

	get error() {
		throw new Error("<ContentError>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error("<ContentError>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ContentError);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte":
/*!***************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/theme */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte generated by Svelte v3.43.1 */



const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Filter.svelte";

// (29:0) {:else}
function create_else_block(ctx) {
	let button;
	let t;
	let button_disabled_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*title*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", /*className*/ ctx[4]);
			button.disabled = button_disabled_value = /*filter*/ ctx[0].disabled;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 29, 1, 716);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, button, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					button,
					"click",
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*onClick*/ ctx[2])) /*onClick*/ ctx[2].apply(this, arguments);
					}),
					false,
					true,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*title*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*title*/ ctx[1]);

			if (dirty & /*className*/ 16) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", /*className*/ ctx[4]);
			}

			if (dirty & /*filter*/ 1 && button_disabled_value !== (button_disabled_value = /*filter*/ ctx[0].disabled)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prop_dev)(button, "disabled", button_disabled_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(button);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(29:0) {:else}",
		ctx
	});

	return block;
}

// (24:0) {#if link}
function create_if_block(ctx) {
	let a;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*title*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", /*className*/ ctx[4]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", /*link*/ ctx[3]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 24, 1, 622);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					a,
					"click",
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*onClick*/ ctx[2])) /*onClick*/ ctx[2].apply(this, arguments);
					}),
					false,
					true,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*title*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*title*/ ctx[1]);

			if (dirty & /*className*/ 16) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", /*className*/ ctx[4]);
			}

			if (dirty & /*link*/ 8) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", /*link*/ ctx[3]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(24:0) {#if link}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;

	function select_block_type(ctx, dirty) {
		if (/*link*/ ctx[3]) return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
		d: function destroy(detaching) {
			if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-filter';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Filter', slots, []);
	let { active = false } = $$props;
	let { hasActive = false } = $$props;
	let { filter } = $$props;
	let { title } = $$props;
	let { onClick } = $$props;
	let { link = '# ' } = $$props;
	let className;
	const writable_props = ['active', 'hasActive', 'filter', 'title', 'onClick', 'link'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Filter> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('active' in $$props) $$invalidate(5, active = $$props.active);
		if ('hasActive' in $$props) $$invalidate(6, hasActive = $$props.hasActive);
		if ('filter' in $$props) $$invalidate(0, filter = $$props.filter);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('onClick' in $$props) $$invalidate(2, onClick = $$props.onClick);
		if ('link' in $$props) $$invalidate(3, link = $$props.link);
	};

	$$self.$capture_state = () => ({
		maxIndex: _config_theme__WEBPACK_IMPORTED_MODULE_1__.maxIndex,
		active,
		hasActive,
		filter,
		title,
		onClick,
		link,
		baseClass,
		className
	});

	$$self.$inject_state = $$props => {
		if ('active' in $$props) $$invalidate(5, active = $$props.active);
		if ('hasActive' in $$props) $$invalidate(6, hasActive = $$props.hasActive);
		if ('filter' in $$props) $$invalidate(0, filter = $$props.filter);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('onClick' in $$props) $$invalidate(2, onClick = $$props.onClick);
		if ('link' in $$props) $$invalidate(3, link = $$props.link);
		if ('className' in $$props) $$invalidate(4, className = $$props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*active, hasActive, filter*/ 97) {
			$: {
				$$invalidate(4, className = baseClass + (active
				? ' ' + baseClass + '--selected'
				: hasActive ? ' ' + baseClass + '--unselected' : '') + (filter.index
				? ' ' + baseClass + '--' + filter.index % _config_theme__WEBPACK_IMPORTED_MODULE_1__.maxIndex
				: ''));
			}
		}
	};

	return [filter, title, onClick, link, className, active, hasActive];
}

class Filter extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			active: 5,
			hasActive: 6,
			filter: 0,
			title: 1,
			onClick: 2,
			link: 3
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Filter",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*filter*/ ctx[0] === undefined && !('filter' in props)) {
			console.warn("<Filter> was created without expected prop 'filter'");
		}

		if (/*title*/ ctx[1] === undefined && !('title' in props)) {
			console.warn("<Filter> was created without expected prop 'title'");
		}

		if (/*onClick*/ ctx[2] === undefined && !('onClick' in props)) {
			console.warn("<Filter> was created without expected prop 'onClick'");
		}
	}

	get active() {
		throw new Error("<Filter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set active(value) {
		throw new Error("<Filter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get hasActive() {
		throw new Error("<Filter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set hasActive(value) {
		throw new Error("<Filter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get filter() {
		throw new Error("<Filter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set filter(value) {
		throw new Error("<Filter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<Filter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Filter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<Filter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<Filter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get link() {
		throw new Error("<Filter>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set link(value) {
		throw new Error("<Filter>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Filter);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/IconButton.svelte":
/*!*******************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/IconButton.svelte ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/IconButton.svelte generated by Svelte v3.43.1 */



const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/IconButton.svelte";

function create_fragment(ctx) {
	let button;
	let uiicon;
	let current;
	let mounted;
	let dispose;

	uiicon = new _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: { icon: /*icon*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", "iif-icon-button");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "title", /*title*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 6, 0, 130);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, button, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, button, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					button,
					"click",
					function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*onClick*/ ctx[2])) /*onClick*/ ctx[2].apply(this, arguments);
					},
					false,
					false,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;
			const uiicon_changes = {};
			if (dirty & /*icon*/ 1) uiicon_changes.icon = /*icon*/ ctx[0];
			uiicon.$set(uiicon_changes);

			if (!current || dirty & /*title*/ 2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "title", /*title*/ ctx[1]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(button);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('IconButton', slots, []);
	let { icon } = $$props;
	let { title } = $$props;
	let { onClick } = $$props;
	const writable_props = ['icon', 'title', 'onClick'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<IconButton> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('onClick' in $$props) $$invalidate(2, onClick = $$props.onClick);
	};

	$$self.$capture_state = () => ({ UIIcon: _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__["default"], icon, title, onClick });

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('onClick' in $$props) $$invalidate(2, onClick = $$props.onClick);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [icon, title, onClick];
}

class IconButton extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icon: 0, title: 1, onClick: 2 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "IconButton",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[0] === undefined && !('icon' in props)) {
			console.warn("<IconButton> was created without expected prop 'icon'");
		}

		if (/*title*/ ctx[1] === undefined && !('title' in props)) {
			console.warn("<IconButton> was created without expected prop 'title'");
		}

		if (/*onClick*/ ctx[2] === undefined && !('onClick' in props)) {
			console.warn("<IconButton> was created without expected prop 'onClick'");
		}
	}

	get icon() {
		throw new Error("<IconButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<IconButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<IconButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<IconButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<IconButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<IconButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconButton);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte":
/*!**************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte generated by Svelte v3.43.1 */




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Input.svelte";

// (73:2) {#if mounted && icon !== ''}
function create_if_block_2(ctx) {
	let div;
	let uiicon;
	let current;

	uiicon = new _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				icon: /*icon*/ ctx[4],
				onLoad: /*iconLoaded*/ ctx[11]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-input-icon");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "style", /*iconStyle*/ ctx[8]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 73, 3, 1695);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};
			if (dirty & /*icon*/ 16) uiicon_changes.icon = /*icon*/ ctx[4];
			uiicon.$set(uiicon_changes);

			if (!current || dirty & /*iconStyle*/ 256) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "style", /*iconStyle*/ ctx[8]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(73:2) {#if mounted && icon !== ''}",
		ctx
	});

	return block;
}

// (91:2) {#if mounted && value === '' && placeholder !== ''}
function create_if_block_1(ctx) {
	let div;
	let t;

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(/*placeholder*/ ctx[1]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "iif-input-placeholder");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 91, 3, 2170);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*placeholder*/ 2) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, /*placeholder*/ ctx[1]);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(91:2) {#if mounted && value === '' && placeholder !== ''}",
		ctx
	});

	return block;
}

// (94:2) {#if mounted && value !== ''}
function create_if_block(ctx) {
	let a;
	let uiicon;
	let current;
	let mounted;
	let dispose;

	uiicon = new _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				icon: "reset",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", "iif-input-reset");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", "# ");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 94, 3, 2268);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(a, "click", (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(/*resetValue*/ ctx[12]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};

			if (dirty & /*$$scope*/ 4194304) {
				uiicon_changes.$$scope = { dirty, ctx };
			}

			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon);
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(94:2) {#if mounted && value !== ''}",
		ctx
	});

	return block;
}

// (99:4) <UIIcon icon="reset">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("x");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(99:4) <UIIcon icon=\\\"reset\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div1;
	let div0;
	let t0;
	let input;
	let input_title_value;
	let input_spellcheck_value;
	let input_inputmode_value;
	let t1;
	let t2;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*mounted*/ ctx[10] && /*icon*/ ctx[4] !== '' && create_if_block_2(ctx);
	let if_block1 = /*mounted*/ ctx[10] && /*value*/ ctx[0] === '' && /*placeholder*/ ctx[1] !== '' && create_if_block_1(ctx);
	let if_block2 = /*mounted*/ ctx[10] && /*value*/ ctx[0] !== '' && create_if_block(ctx);

	const block = {
		c: function create() {
			div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
			if (if_block0) if_block0.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			input = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("input");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block2) if_block2.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "type", "text");

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "title", input_title_value = /*title*/ ctx[2]
			? /*title*/ ctx[2]
			: /*placeholder*/ ctx[1]);

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "spellcheck", input_spellcheck_value = false);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "autocomplete", "off");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "autocorrect", "off");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "autocapitalize", "off");
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "inputmode", input_inputmode_value = /*type*/ ctx[5] === 'number' ? 'decimal' : 'text');
			input.disabled = /*disabled*/ ctx[3];
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(input, file, 77, 2, 1804);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", /*className*/ ctx[7]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 71, 1, 1637);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", /*wrapperClassName*/ ctx[6]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 70, 0, 1605);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
			if (if_block0) if_block0.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, input);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_input_value)(input, /*value*/ ctx[0]);
			/*input_binding*/ ctx[21](input);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t1);
			if (if_block1) if_block1.m(div0, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t2);
			if (if_block2) if_block2.m(div0, null);
			current = true;

			if (!mounted) {
				dispose = [
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(input, "input", /*input_input_handler*/ ctx[20]),
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(input, "input", /*handleInput*/ ctx[13], false, false, false),
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(input, "blur", /*handleBlur*/ ctx[14], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (/*mounted*/ ctx[10] && /*icon*/ ctx[4] !== '') {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*mounted, icon*/ 1040) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(div0, t0);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*title, placeholder*/ 6 && input_title_value !== (input_title_value = /*title*/ ctx[2]
			? /*title*/ ctx[2]
			: /*placeholder*/ ctx[1])) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "title", input_title_value);
			}

			if (!current || dirty & /*type*/ 32 && input_inputmode_value !== (input_inputmode_value = /*type*/ ctx[5] === 'number' ? 'decimal' : 'text')) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "inputmode", input_inputmode_value);
			}

			if (!current || dirty & /*disabled*/ 8) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prop_dev)(input, "disabled", /*disabled*/ ctx[3]);
			}

			if (dirty & /*value*/ 1 && input.value !== /*value*/ ctx[0]) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_input_value)(input, /*value*/ ctx[0]);
			}

			if (/*mounted*/ ctx[10] && /*value*/ ctx[0] === '' && /*placeholder*/ ctx[1] !== '') {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					if_block1.m(div0, t2);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*mounted*/ ctx[10] && /*value*/ ctx[0] !== '') {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty & /*mounted, value*/ 1025) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2, 1);
					if_block2.m(div0, null);
				}
			} else if (if_block2) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*className*/ 128) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", /*className*/ ctx[7]);
			}

			if (!current || dirty & /*wrapperClassName*/ 64) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", /*wrapperClassName*/ ctx[6]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block2);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block2);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
			if (if_block0) if_block0.d();
			/*input_binding*/ ctx[21](null);
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			mounted = false;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.run_all)(dispose);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-input';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Input', slots, []);
	let { placeholder = '' } = $$props;
	let { title = '' } = $$props;
	let { value = '' } = $$props;
	let { disabled = false } = $$props;
	let { icon = '' } = $$props;
	let { type = '' } = $$props;
	let { extra = '' } = $$props;
	let { onInput = null } = $$props;
	let { onBlur = null } = $$props;
	let { autofocus = false } = $$props;
	let hasIcon = false;

	function iconLoaded() {
		$$invalidate(19, hasIcon = true);
	}

	let wrapperClassName;
	let className;
	let iconStyle;

	function resetValue() {
		$$invalidate(0, value = '');
		handleInput();
	}

	function handleInput() {
		if (onInput) {
			onInput(value);
		}
	}

	function handleBlur() {
		if (onBlur) {
			onBlur(value);
		}
	}

	let inputRef;
	let mounted = false;

	(0,svelte__WEBPACK_IMPORTED_MODULE_1__.onMount)(() => {
		$$invalidate(10, mounted = true);

		if (autofocus) {
			inputRef.focus();
		}
	});

	const writable_props = [
		'placeholder',
		'title',
		'value',
		'disabled',
		'icon',
		'type',
		'extra',
		'onInput',
		'onBlur',
		'autofocus'
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Input> was created with unknown prop '${key}'`);
	});

	function input_input_handler() {
		value = this.value;
		$$invalidate(0, value);
	}

	function input_binding($$value) {
		svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			inputRef = $$value;
			$$invalidate(9, inputRef);
		});
	}

	$$self.$$set = $$props => {
		if ('placeholder' in $$props) $$invalidate(1, placeholder = $$props.placeholder);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('disabled' in $$props) $$invalidate(3, disabled = $$props.disabled);
		if ('icon' in $$props) $$invalidate(4, icon = $$props.icon);
		if ('type' in $$props) $$invalidate(5, type = $$props.type);
		if ('extra' in $$props) $$invalidate(15, extra = $$props.extra);
		if ('onInput' in $$props) $$invalidate(16, onInput = $$props.onInput);
		if ('onBlur' in $$props) $$invalidate(17, onBlur = $$props.onBlur);
		if ('autofocus' in $$props) $$invalidate(18, autofocus = $$props.autofocus);
	};

	$$self.$capture_state = () => ({
		onMount: svelte__WEBPACK_IMPORTED_MODULE_1__.onMount,
		UIIcon: _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		placeholder,
		title,
		value,
		disabled,
		icon,
		type,
		extra,
		onInput,
		onBlur,
		autofocus,
		hasIcon,
		iconLoaded,
		baseClass,
		wrapperClassName,
		className,
		iconStyle,
		resetValue,
		handleInput,
		handleBlur,
		inputRef,
		mounted
	});

	$$self.$inject_state = $$props => {
		if ('placeholder' in $$props) $$invalidate(1, placeholder = $$props.placeholder);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('value' in $$props) $$invalidate(0, value = $$props.value);
		if ('disabled' in $$props) $$invalidate(3, disabled = $$props.disabled);
		if ('icon' in $$props) $$invalidate(4, icon = $$props.icon);
		if ('type' in $$props) $$invalidate(5, type = $$props.type);
		if ('extra' in $$props) $$invalidate(15, extra = $$props.extra);
		if ('onInput' in $$props) $$invalidate(16, onInput = $$props.onInput);
		if ('onBlur' in $$props) $$invalidate(17, onBlur = $$props.onBlur);
		if ('autofocus' in $$props) $$invalidate(18, autofocus = $$props.autofocus);
		if ('hasIcon' in $$props) $$invalidate(19, hasIcon = $$props.hasIcon);
		if ('wrapperClassName' in $$props) $$invalidate(6, wrapperClassName = $$props.wrapperClassName);
		if ('className' in $$props) $$invalidate(7, className = $$props.className);
		if ('iconStyle' in $$props) $$invalidate(8, iconStyle = $$props.iconStyle);
		if ('inputRef' in $$props) $$invalidate(9, inputRef = $$props.inputRef);
		if ('mounted' in $$props) $$invalidate(10, mounted = $$props.mounted);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*wrapperClassName, value, disabled*/ 73) {
			$: {
				$$invalidate(6, wrapperClassName = baseClass + '-wrapper');
				$$invalidate(6, wrapperClassName += ' ' + wrapperClassName + (value === '' ? '--empty' : '--has-content') + (disabled ? ' ' + wrapperClassName + '--disabled' : ''));
			}
		}

		if ($$self.$$.dirty & /*placeholder, hasIcon, type, disabled*/ 524330) {
			$: {
				$$invalidate(7, className = baseClass + ' ' + baseClass + '--with' + (placeholder === '' ? 'out' : '') + '-placeholder' + (hasIcon ? ' ' + baseClass + '--with-icon' : '') + (type !== '' ? ' ' + baseClass + '--' + type : '') + (disabled ? ' ' + baseClass + '--disabled' : ''));
			}
		}

		if ($$self.$$.dirty & /*type, extra*/ 32800) {
			$: {
				$$invalidate(8, iconStyle = '');

				if (type === 'color' && extra !== '') {
					$$invalidate(8, iconStyle = 'opacity: 1; color: ' + extra);
				}
			}
		}
	};

	return [
		value,
		placeholder,
		title,
		disabled,
		icon,
		type,
		wrapperClassName,
		className,
		iconStyle,
		inputRef,
		mounted,
		iconLoaded,
		resetValue,
		handleInput,
		handleBlur,
		extra,
		onInput,
		onBlur,
		autofocus,
		hasIcon,
		input_input_handler,
		input_binding
	];
}

class Input extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			placeholder: 1,
			title: 2,
			value: 0,
			disabled: 3,
			icon: 4,
			type: 5,
			extra: 15,
			onInput: 16,
			onBlur: 17,
			autofocus: 18
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Input",
			options,
			id: create_fragment.name
		});
	}

	get placeholder() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set placeholder(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get icon() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get type() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set type(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get extra() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set extra(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onInput() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onInput(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onBlur() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onBlur(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get autofocus() {
		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set autofocus(value) {
		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Input);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte":
/*!*********************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte generated by Svelte v3.43.1 */



const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/OptionButton.svelte";

// (26:1) {#if icon}
function create_if_block(ctx) {
	let uiicon;
	let current;

	uiicon = new _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: { icon: /*icon*/ ctx[0] },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};
			if (dirty & /*icon*/ 1) uiicon_changes.icon = /*icon*/ ctx[0];
			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(26:1) {#if icon}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let button;
	let t0;
	let span;
	let t1_value = (/*text*/ ctx[3] ? /*text*/ ctx[3] : /*title*/ ctx[2]) + "";
	let t1;
	let current;
	let mounted;
	let dispose;
	let if_block = /*icon*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
			if (if_block) if_block.c();
			t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
			t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 28, 1, 731);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", /*className*/ ctx[4]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "title", /*title*/ ctx[2]);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 24, 0, 637);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, button, anchor);
			if (if_block) if_block.m(button, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t0);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, span);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					button,
					"click",
					function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*onClick*/ ctx[1])) /*onClick*/ ctx[1].apply(this, arguments);
					},
					false,
					false,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (/*icon*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*icon*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(button, t0);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if ((!current || dirty & /*text, title*/ 12) && t1_value !== (t1_value = (/*text*/ ctx[3] ? /*text*/ ctx[3] : /*title*/ ctx[2]) + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);

			if (!current || dirty & /*className*/ 16) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", /*className*/ ctx[4]);
			}

			if (!current || dirty & /*title*/ 4) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "title", /*title*/ ctx[2]);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(button);
			if (if_block) if_block.d();
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-option-button';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('OptionButton', slots, []);
	let { icon = '' } = $$props;
	let { onClick } = $$props;
	let { title } = $$props;
	let { text = null } = $$props;
	let { textOptional = false } = $$props;
	let { status = '' } = $$props;
	let className;
	const writable_props = ['icon', 'onClick', 'title', 'text', 'textOptional', 'status'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<OptionButton> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('onClick' in $$props) $$invalidate(1, onClick = $$props.onClick);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('text' in $$props) $$invalidate(3, text = $$props.text);
		if ('textOptional' in $$props) $$invalidate(5, textOptional = $$props.textOptional);
		if ('status' in $$props) $$invalidate(6, status = $$props.status);
	};

	$$self.$capture_state = () => ({
		UIIcon: _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		icon,
		onClick,
		title,
		text,
		textOptional,
		status,
		baseClass,
		className
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(0, icon = $$props.icon);
		if ('onClick' in $$props) $$invalidate(1, onClick = $$props.onClick);
		if ('title' in $$props) $$invalidate(2, title = $$props.title);
		if ('text' in $$props) $$invalidate(3, text = $$props.text);
		if ('textOptional' in $$props) $$invalidate(5, textOptional = $$props.textOptional);
		if ('status' in $$props) $$invalidate(6, status = $$props.status);
		if ('className' in $$props) $$invalidate(4, className = $$props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon, text, textOptional, status*/ 105) {
			$: {
				$$invalidate(4, className = baseClass + ' ' + baseClass + (icon ? '--with-icon' : '--without-icon') + ' ' + baseClass + (text && !textOptional || !icon
				? '--with-text'
				: '--without-text') + (status === '' ? '' : ' ' + baseClass + '--' + status));
			}
		}
	};

	return [icon, onClick, title, text, className, textOptional, status];
}

class OptionButton extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
			icon: 0,
			onClick: 1,
			title: 2,
			text: 3,
			textOptional: 5,
			status: 6
		});

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "OptionButton",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*onClick*/ ctx[1] === undefined && !('onClick' in props)) {
			console.warn("<OptionButton> was created without expected prop 'onClick'");
		}

		if (/*title*/ ctx[2] === undefined && !('title' in props)) {
			console.warn("<OptionButton> was created without expected prop 'title'");
		}
	}

	get icon() {
		throw new Error("<OptionButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<OptionButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<OptionButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<OptionButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error("<OptionButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<OptionButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get text() {
		throw new Error("<OptionButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<OptionButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get textOptional() {
		throw new Error("<OptionButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set textOptional(value) {
		throw new Error("<OptionButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get status() {
		throw new Error("<OptionButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error("<OptionButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OptionButton);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Tabs.svelte":
/*!*************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Tabs.svelte ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _config_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/theme */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts");
/* harmony import */ var _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UIIcon.svelte */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Tabs.svelte generated by Svelte v3.43.1 */




const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/Tabs.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	child_ctx[6] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[7] = list[i];
	child_ctx[9] = i;
	return child_ctx;
}

// (56:2) {#if !listItem.empty}
function create_if_block(ctx) {
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let t;
	let div_class_value;
	let current;
	let each_value_1 = /*listItem*/ ctx[4].items;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
	const get_key = ctx => /*tab*/ ctx[7].key;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value_1, get_each_context_1, get_key);

	for (let i = 0; i < each_value_1.length; i += 1) {
		let child_ctx = get_each_context_1(ctx, each_value_1, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block_1(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value = baseClass + '-' + /*listItem*/ ctx[4].side);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 56, 3, 1523);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*list*/ 1) {
				each_value_1 = /*listItem*/ ctx[4].items;
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value_1, get_each_context_1, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value_1, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block_1, t, get_each_context_1);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (!current || dirty & /*list*/ 1 && div_class_value !== (div_class_value = baseClass + '-' + /*listItem*/ ctx[4].side)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(56:2) {#if !listItem.empty}",
		ctx
	});

	return block;
}

// (64:6) {#if tab.icon}
function create_if_block_2(ctx) {
	let uiicon;
	let current;

	uiicon = new _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: { icon: /*tab*/ ctx[7].icon },
			$$inline: true
		});

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(uiicon.$$.fragment);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(uiicon, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const uiicon_changes = {};
			if (dirty & /*list*/ 1) uiicon_changes.icon = /*tab*/ ctx[7].icon;
			uiicon.$set(uiicon_changes);
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(uiicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(uiicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(uiicon, detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(64:6) {#if tab.icon}",
		ctx
	});

	return block;
}

// (67:6) {#if tab.title !== ''}
function create_if_block_1(ctx) {
	let t_value = /*tab*/ ctx[7].title + "";
	let t;

	const block = {
		c: function create() {
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*list*/ 1 && t_value !== (t_value = /*tab*/ ctx[7].title + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(67:6) {#if tab.title !== ''}",
		ctx
	});

	return block;
}

// (58:4) {#each listItem.items as tab, j (tab.key)}
function create_each_block_1(key_1, ctx) {
	let a;
	let t;
	let a_href_value;
	let a_class_value;
	let a_title_value;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*tab*/ ctx[7].icon && create_if_block_2(ctx);
	let if_block1 = /*tab*/ ctx[7].title !== '' && create_if_block_1(ctx);

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
			if (if_block0) if_block0.c();
			t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
			if (if_block1) if_block1.c();
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value = /*tab*/ ctx[7].href);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", a_class_value = /*tab*/ ctx[7].className);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value = /*tab*/ ctx[7].hint);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 58, 5, 1621);
			this.first = a;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
			if (if_block0) if_block0.m(a, null);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t);
			if (if_block1) if_block1.m(a, null);
			current = true;

			if (!mounted) {
				dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(
					a,
					"click",
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prevent_default)(function () {
						if ((0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.is_function)(/*tab*/ ctx[7].onClick)) /*tab*/ ctx[7].onClick.apply(this, arguments);
					}),
					false,
					true,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (/*tab*/ ctx[7].icon) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*list*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0, 1);
					if_block0.m(a, t);
				}
			} else if (if_block0) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}

			if (/*tab*/ ctx[7].title !== '') {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					if_block1.m(a, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (!current || dirty & /*list*/ 1 && a_href_value !== (a_href_value = /*tab*/ ctx[7].href)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
			}

			if (!current || dirty & /*list*/ 1 && a_class_value !== (a_class_value = /*tab*/ ctx[7].className)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", a_class_value);
			}

			if (!current || dirty & /*list*/ 1 && a_title_value !== (a_title_value = /*tab*/ ctx[7].hint)) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "title", a_title_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block0);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			mounted = false;
			dispose();
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(58:4) {#each listItem.items as tab, j (tab.key)}",
		ctx
	});

	return block;
}

// (55:1) {#each list as listItem, i (listItem.side)}
function create_each_block(key_1, ctx) {
	let first;
	let if_block_anchor;
	let current;
	let if_block = !/*listItem*/ ctx[4].empty && create_if_block(ctx);

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			first = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
			this.first = first;
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, first, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (!/*listItem*/ ctx[4].empty) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*list*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(first);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(55:1) {#each list as listItem, i (listItem.side)}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	let each_value = /*list*/ ctx[0];
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
	const get_key = ctx => /*listItem*/ ctx[4].side;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", baseClass);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 53, 0, 1427);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*baseClass, list*/ 1) {
				each_value = /*list*/ ctx[0];
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_keys)(ctx, each_value, get_each_context, get_key);
				each_blocks = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_keyed_each)(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.outro_and_destroy_block, create_each_block, null, get_each_context);
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const baseClass = 'iif-tabs';
const baseItemClass = 'iif-tab';

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Tabs', slots, []);
	let { tabs } = $$props;
	let { selected } = $$props;
	let { onClick } = $$props;
	let list = [];
	const writable_props = ['tabs', 'selected', 'onClick'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Tabs> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('tabs' in $$props) $$invalidate(1, tabs = $$props.tabs);
		if ('selected' in $$props) $$invalidate(2, selected = $$props.selected);
		if ('onClick' in $$props) $$invalidate(3, onClick = $$props.onClick);
	};

	$$self.$capture_state = () => ({
		maxIndex: _config_theme__WEBPACK_IMPORTED_MODULE_1__.maxIndex,
		UIIcon: _UIIcon_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
		tabs,
		selected,
		onClick,
		baseClass,
		baseItemClass,
		list
	});

	$$self.$inject_state = $$props => {
		if ('tabs' in $$props) $$invalidate(1, tabs = $$props.tabs);
		if ('selected' in $$props) $$invalidate(2, selected = $$props.selected);
		if ('onClick' in $$props) $$invalidate(3, onClick = $$props.onClick);
		if ('list' in $$props) $$invalidate(0, list = $$props.list);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*tabs, list, selected, onClick*/ 15) {
			$: {
				const leftList = [];
				const rightList = [];

				tabs.forEach(tab => {
					const key = tab.key;
					const index = (tab.index === void 0 ? list.length : tab.index) % _config_theme__WEBPACK_IMPORTED_MODULE_1__.maxIndex;

					const className = baseItemClass + ' ' + baseItemClass + '--' + index + (key === selected
					? ' ' + baseItemClass + '--selected'
					: '') + (tab.type ? ' ' + baseItemClass + '--' + tab.type : '');

					const item = {
						key,
						className,
						title: tab.title,
						index,
						href: tab.href === void 0 ? '# ' : tab.href,
						icon: tab.icon,
						hint: tab.hint,
						onClick: tab.onClick === void 0
						? () => onClick(key)
						: tab.onClick
					};

					if (tab.right) {
						rightList.push(item);
					} else {
						leftList.push(item);
					}
				});

				$$invalidate(0, list = [
					{
						side: 'left',
						items: leftList,
						empty: !leftList.length
					},
					{
						side: 'right',
						items: rightList,
						empty: !rightList.length
					}
				]);
			}
		}
	};

	return [list, tabs, selected, onClick];
}

class Tabs extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { tabs: 1, selected: 2, onClick: 3 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "Tabs",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*tabs*/ ctx[1] === undefined && !('tabs' in props)) {
			console.warn("<Tabs> was created without expected prop 'tabs'");
		}

		if (/*selected*/ ctx[2] === undefined && !('selected' in props)) {
			console.warn("<Tabs> was created without expected prop 'selected'");
		}

		if (/*onClick*/ ctx[3] === undefined && !('onClick' in props)) {
			console.warn("<Tabs> was created without expected prop 'onClick'");
		}
	}

	get tabs() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tabs(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get selected() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selected(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onClick() {
		throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onClick(value) {
		throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tabs);

/***/ }),

/***/ "./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte":
/*!***************************************************************************************************!*\
  !*** ./resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconify/svelte */ "./node_modules/@iconify/svelte/dist/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _config_theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../config/theme */ "./resources/scripts/frontend/blocks/hero/components/icon-finder/config/theme.ts");
/* resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte generated by Svelte v3.43.1 */


const { Object: Object_1 } = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;



const file = "resources/scripts/frontend/blocks/hero/components/icon-finder/components/ui/UIIcon.svelte";

// (40:0) {:else}
function create_else_block(ctx) {
	let current;
	const default_slot_template = /*#slots*/ ctx[6].default;
	const default_slot = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_slot)(default_slot_template, ctx, /*$$scope*/ ctx[5], null);

	const block = {
		c: function create() {
			if (default_slot) default_slot.c();
		},
		m: function mount(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 32)) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_slot_base)(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[5],
						!current
						? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_all_dirty_from_scope)(/*$$scope*/ ctx[5])
						: (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_slot_changes)(default_slot_template, /*$$scope*/ ctx[5], dirty, null),
						null
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(40:0) {:else}",
		ctx
	});

	return block;
}

// (33:0) {#if iconName !== null}
function create_if_block(ctx) {
	let icon_1;
	let if_block_anchor;
	let current;

	icon_1 = new _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				icon: /*iconName*/ ctx[1],
				class: _config_theme__WEBPACK_IMPORTED_MODULE_3__.iconsClass,
				onLoad: /*loadCallback*/ ctx[2]
			},
			$$inline: true
		});

	let if_block = !/*loaded*/ ctx[0] && create_if_block_1(ctx);

	const block = {
		c: function create() {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(icon_1.$$.fragment);
			if (if_block) if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		m: function mount(target, anchor) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(icon_1, target, anchor);
			if (if_block) if_block.m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const icon_1_changes = {};
			if (dirty & /*iconName*/ 2) icon_1_changes.icon = /*iconName*/ ctx[1];
			icon_1.$set(icon_1_changes);

			if (!/*loaded*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*loaded*/ 1) {
						(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					}
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block, 1, 1, () => {
					if_block = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(icon_1.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(icon_1.$$.fragment, local);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(icon_1, detaching);
			if (if_block) if_block.d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(33:0) {#if iconName !== null}",
		ctx
	});

	return block;
}

// (37:26) {#if !loaded}
function create_if_block_1(ctx) {
	let current;
	const default_slot_template = /*#slots*/ ctx[6].default;
	const default_slot = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_slot)(default_slot_template, ctx, /*$$scope*/ ctx[5], null);

	const block = {
		c: function create() {
			if (default_slot) default_slot.c();
		},
		m: function mount(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 32)) {
					(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.update_slot_base)(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[5],
						!current
						? (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_all_dirty_from_scope)(/*$$scope*/ ctx[5])
						: (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.get_slot_changes)(default_slot_template, /*$$scope*/ ctx[5], dirty, null),
						null
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(37:26) {#if !loaded}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*iconName*/ ctx[1] !== null) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
			current = true;
		},
		o: function outro(local) {
			(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
		}
	};

	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

let firstMount = true;

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('UIIcon', slots, ['default']);
	let { icon } = $$props;
	let { onLoad = null } = $$props;
	let loaded = false;

	function loadCallback() {
		$$invalidate(0, loaded = true);

		if (onLoad) {
			onLoad();
		}
	}

	(0,svelte__WEBPACK_IMPORTED_MODULE_2__.onMount)(() => {
		if (firstMount) {
			firstMount = false;
			(0,_iconify_svelte__WEBPACK_IMPORTED_MODULE_1__.loadIcons)(Object.values(_config_theme__WEBPACK_IMPORTED_MODULE_3__.icons).filter(name => !!name));
		}
	});

	let iconName;
	const writable_props = ['icon', 'onLoad'];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<UIIcon> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('icon' in $$props) $$invalidate(3, icon = $$props.icon);
		if ('onLoad' in $$props) $$invalidate(4, onLoad = $$props.onLoad);
		if ('$$scope' in $$props) $$invalidate(5, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		firstMount,
		Icon: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
		loadIcons: _iconify_svelte__WEBPACK_IMPORTED_MODULE_1__.loadIcons,
		onMount: svelte__WEBPACK_IMPORTED_MODULE_2__.onMount,
		icons: _config_theme__WEBPACK_IMPORTED_MODULE_3__.icons,
		iconsClass: _config_theme__WEBPACK_IMPORTED_MODULE_3__.iconsClass,
		icon,
		onLoad,
		loaded,
		loadCallback,
		iconName
	});

	$$self.$inject_state = $$props => {
		if ('icon' in $$props) $$invalidate(3, icon = $$props.icon);
		if ('onLoad' in $$props) $$invalidate(4, onLoad = $$props.onLoad);
		if ('loaded' in $$props) $$invalidate(0, loaded = $$props.loaded);
		if ('iconName' in $$props) $$invalidate(1, iconName = $$props.iconName);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*icon*/ 8) {
			$: {
				$$invalidate(1, iconName = typeof _config_theme__WEBPACK_IMPORTED_MODULE_3__.icons[icon] === 'string'
				? _config_theme__WEBPACK_IMPORTED_MODULE_3__.icons[icon]
				: icon.indexOf(':') === -1 ? null : icon);
			}
		}
	};

	return [loaded, iconName, loadCallback, icon, onLoad, $$scope, slots];
}

class UIIcon extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
	constructor(options) {
		super(options);
		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, { icon: 3, onLoad: 4 });

		(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
			component: this,
			tagName: "UIIcon",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*icon*/ ctx[3] === undefined && !('icon' in props)) {
			console.warn("<UIIcon> was created without expected prop 'icon'");
		}
	}

	get icon() {
		throw new Error("<UIIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set icon(value) {
		throw new Error("<UIIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onLoad() {
		throw new Error("<UIIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onLoad(value) {
		throw new Error("<UIIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UIIcon);

/***/ })

}]);
//# sourceMappingURL=resources_scripts_frontend_blocks_hero_components_icon-finder_index_ts.min.js.map